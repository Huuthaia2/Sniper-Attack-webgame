[1,["1f59e12c6@6c48a","c7YmKFRy5LJ6d4wcTwt7RE","1brw/JvvpFnIvdrxpFCgMZ","af4Q8jm75La5Xx768wnpQ0","09xymtjj1CkoUA1X/7gB3Q","72tQ/TeLdLp7nGKHJqfqDv@1f586","d8dsxpY1VJu48YGN1aEKD9@b0236","fb50k6AItECoE3Wnx9KhY1@f9941","10s1o/yfJBzJZ881cMDOhz","aeulv+jRdNVrk0UXOkeb/a@4e4c0","c44S+hheJF4LduKZRW0niH@af4d8","51zVZ85hxKCrv+Wi5kE9cF@c52b3","50qdGwV3BKu7el3EZh0ZSv@20d2b","7ayD4cZ0pHVaOkewUu2kbd@9ec63","33wf8MaAlMlIWp+seVIHOR@7f3dc","d1NGQ2rJZCcbhjH0/erZWw","aa7uCcIEFP8KDar4u2f//d@f9941","1eYhgOz7dNI79GnyJh5H/E@f9941","48dXcUJXlEBJEBsxQH/e3T@f9941","75ilEuaK1MDp1S8vjDrnav","d6HbXpVPhEuZ2CudZtKRKY@f9941","13/PHGq1xLZqGx1qtdJfqf","12Y9dMgWdJKJGmTiZyQR9H@a804a","84y9VrfPhNrK9r+nZSSPe5","42Fe45D8tFdIbeQtaeIyea@f9941","a7YStUNeNCOKGpSntUY1g5","12Y9dMgWdJKJGmTiZyQR9H@2e76e","12WtVYnVtJ4Y9Otc3icrc4","b8DDmt16RF7oESkfHa9aWI","67aFIR9lZBCqO5K5+2PAWf@6c48a","56XEwsdjtOr472bU7AFQ7m@f9941","d4dkm8WNRDTKXOq24MFsC5@f9941","25UI2vyjhF2o8o7FFcQBOX@f9941","52bkzHHfBIpKN1L51b7tDe@f9941","a2FLD2ScpLDJ4F6LRQ147g@f9941","62DMzB6zhN0om+NNwjs48Q@f9941","3f8kdw3vFBnpQ6vIGtfvOp","95RdnaRHxOiJP2y9pkzcbl@f9941","e3qE4eRfFCwb8GDLMHLXMa@05d28","e3qE4eRfFCwb8GDLMHLXMa@df8aa","e3qE4eRfFCwb8GDLMHLXMa@2d6a9","e3qE4eRfFCwb8GDLMHLXMa@aea91","e3qE4eRfFCwb8GDLMHLXMa@375a2","e3qE4eRfFCwb8GDLMHLXMa@0e3d2","e3qE4eRfFCwb8GDLMHLXMa@9ff7e","e3qE4eRfFCwb8GDLMHLXMa@e314c","6frjaF+ORGm4dVq08M8/IK","e3qE4eRfFCwb8GDLMHLXMa@313a0","e3qE4eRfFCwb8GDLMHLXMa@40821","66v7LxRH9Bza/jUzXnXVPs@f9941","25vMeof+dNE4EF1JEFLBuR@f9941","14SOmb+SxDibFI9nS7jPEV@f9941","f9ASmGJipPRLRk1HAkLnbf@f9941","d9ySL3XwVL0562Sr2KQ6aH","62RCP2l25A0YVrpr5UpGl8@6c48a","e3qE4eRfFCwb8GDLMHLXMa@71890","e3qE4eRfFCwb8GDLMHLXMa@2bf59","e3qE4eRfFCwb8GDLMHLXMa@3ea05","e3qE4eRfFCwb8GDLMHLXMa@1c110","e3qE4eRfFCwb8GDLMHLXMa@e550a","e3qE4eRfFCwb8GDLMHLXMa@042f7","e3qE4eRfFCwb8GDLMHLXMa@7bfb4","e3qE4eRfFCwb8GDLMHLXMa@b5902","e3qE4eRfFCwb8GDLMHLXMa@069b3","e3qE4eRfFCwb8GDLMHLXMa@531c4","b5xprIIqtP4pieNeKVr2nB@f9941","e3qE4eRfFCwb8GDLMHLXMa@48449","e3qE4eRfFCwb8GDLMHLXMa@75ee4","4buaJCIQlPkJvLkUyrhVjW","e2IM4gYSdD+rMWF7EM4v8L@6c48a","f89F84YehMG7naZJBPgUeW","34kLW9lIdNM6Qdg4QVZ9fW@6c48a","8a+ClOc3dAmaasqN/4GO49@6c48a","45Pz+eoOtOyI/1EHnuEvbw@6c48a","b0lnkLobZEuYHkyGkOmg+I","093TP30yFI3b4vPbEgqex3@6c48a","aeFaMLqQRB37I5kv8vv1VW@f9941","11dQqnXbRK46S6gfPAKlaf@f9941","caWrJdoSFIQZwTqblZ4gwt@f9941","9fqKuf1uJLormlCm8kIh6m@f9941","2bXKPP+TBCM5B4XV4PtRJd@f9941","cdVTvGjoZEOrk7yEQfxcJa@f9941","05RL0SqKVKHIADSsid27R1@f9941","30wxV+qylJg7D7OTSaUYvt@f9941","e8ZsclyglGGI7E0a/+uWK0@496dc","29R2ZMO7FPFZHg/zGTKa9X@6c48a","91eHloFX9E+64sWLUwpLDJ@98cb4","7brljawP1Kq7PZU+6YRbfc","83GEvE3+RH/KbS5YFi1gH1@6c48a","40mLGsjYRNTYH6PPsUrpol","1efjQJ65FEBqGQuSkRtT2F","91eHloFX9E+64sWLUwpLDJ@24984","2f5CdWev9M2p+wRSJyusu1","7c9C1e6D1PV5cmT2XVApV2@4a691","bbPnfq0nFGiI0JIN/QMdZz","a6rnrpHO9OU4kxsQZMoEC7@f9941","1dilLDoYBKq5aHJe8UxtWd@f9941","43RoRDq7ZHn5TvQCWeosOf@f9941","a8ZrqeT6NHJLgsdW07y/5h@f9941","fcccRR4zVGCY2afTLbYnOW@f9941","532ZdupVtBiKQtyrELV31O@f9941","51V0H71UhJBLOIkZhR6Dg4@f9941","51cgEGyRJA/4Rf6tDdY6Rc@f9941","8aRJ5muT9OkKOPYi70KzOz@f9941","91eHloFX9E+64sWLUwpLDJ@784b7","c1t/8hWKVHBax/tx5iRlVB@6c48a","d8PWhdDv9BKqDmYK8bDglW","37lGYRvBRM/bfsEKqSQP9k@6c48a","4cYoeYRMpH3I7JUtLX5BKA","110zKogDNGY7d9q0D8PvKj@f9941","cfB6qiul9GeqYzl05ve/uj@f9941","b1AN8NrBNOEYgArLqrcA1i@f9941","c6hT/vje5JvaKfjGAfaJQX@f9941","73lX3UVNZFE6xH850oXxUK@f9941","4a+idBwiNK5589IEzIpp00@f9941","25cqNG/YxJJbKDXsnO1fjP@f9941","49S2c2v95MrL3axa1Zyq/l@f9941","37rhtzTfBBeb2Oyjm7Cipa@f9941","31v5vR2SZPA6AjYmxTMyYb@f9941","42Ap6yIclPBqlXd4tWzRL5@f9941","bamujh6VxDXadEHoDxQNWF@f9941","cb9mszbf5LLo+8hbgiAnXc","92Zf8MCwlMjLWsiFx8mElB@a1023","57fDHxQVRPPJSZAjjDjInv@6c48a","c6y8ORgMNBM7y8vNGZOIqd@6c48a","ffVHqu3bFIkpVWCwB44Z28@f9941","29zsUnxvpNS7eJHWaVeYz7@f9941","3bNYp8muVFSYlVO2FU5SD0@f9941","176MPTqhVIZ59Lur3wj4Av@f9941","e3qE4eRfFCwb8GDLMHLXMa@f54f6","e3qE4eRfFCwb8GDLMHLXMa@a3981","52vys3sEJMsrxACNaMozL0@47189","e4MkP0JrtKcrbKs1TlFxSe","93cgr8H09AH5Tad0uKuHAn","6bDSnqlslI+b5NrVj5B2J8@f9941","61+c7c/TVNU4rvAvpZbBQC@f9941","03NnjpWbdOPb8Wa60lIlw6@f9941","3cukh1As1Ir62KS2JXqDlf@6c48a","cbG8chHjpB+ZXJO1zb2QM0@6c48a","04o6hGeS9AEpqz87X8Ye8w@6c48a","05RL0SqKVKHIADSsid27R1@6c48a","05Vp9GSANKSI+HBeIhwvrn@6c48a","41RHwKl6RGFaSZL1gITJA9@6c48a","06l3nBrSxCN4LCMiSHtyIy@f9941","03La/Iwt1HIZg80PqjN+Ei@f9941","7dSe9IollBYrYQbDpLocUO@f9941","6fh8jNWEFF3aKh8C5Q67pO@f9941","e43cj1hEpICY5h4ZeYSLss@f9941","60/H0neTxJyI62ny48pUH1@f9941","8f+XIq26VBgLYs991mOBPt@6c48a","e3qE4eRfFCwb8GDLMHLXMa@d03c0","e3qE4eRfFCwb8GDLMHLXMa@437c0","0e0TAIBBZPxJDc43Hr4sdS@6c48a","058Zn8CVhGbq+xbLVCOTlr","7awst0wl1NW7PEQnXMyLiz@7f966","e3qE4eRfFCwb8GDLMHLXMa@33d8f","e3qE4eRfFCwb8GDLMHLXMa@30732","e3qE4eRfFCwb8GDLMHLXMa@66799","e3qE4eRfFCwb8GDLMHLXMa@1b740","59D2nxEcpEWqTIkLTVTGAy@6c48a","38bPUwvGpI35vfg2FHWjLT@6c48a","07u74SJ7lA24E16AeIzwiM","90zrBuOzlM3KN0l8Uogv/K@9d09d","88pfxJwOtFbp+mkVGNwhuh","90zrBuOzlM3KN0l8Uogv/K@a5a19","5fpFF9tVlDTZObrRLE7URb@f9941","a67gRj05xPg7S8wW2BVRXp@f9941","21UYJ2oCpIMY/dAy4pcGY/@f9941","e01UGGO1BGeIoiBq6eSs4X@f9941","dbwcv1XAhKR6DpI2nHXEdk@f9941","8d3C55rAxI84chyK7226L7@f9941","12K+rQyK5J3aLKr/3I0oqG@f9941","6cmUMRUM5Np6ReYZ0JyMRG","6e3476SM5Lj541AT4bEc4V","6blxF+B3hGZaLmmZWZaISy@f2b6c","73LVJ+zW1GLbYrWp8+TwBO","6blxF+B3hGZaLmmZWZaISy@48169","245y/RhmNLga9LfDPNTgBy","b90d+xhclDxqMlLJjoCiC7@aee66","25BmkaJIxItq6cabRZll4k","b90d+xhclDxqMlLJjoCiC7@45b50","54LiHPl5dAY7e4zOALlVr7@6c48a","bdfG1TfFlLRoHzyTTEZIDR@6c48a","25vMeof+dNE4EF1JEFLBuR@6c48a","6a25Ne4GBDLqsc/kLs4jH4","f5aixvVAFAk6PUNLvvTaJ/@02b7c","76/FiiojZGU7SIYyPMDd8t@6c48a","37flclrQpJ1Ll+Vi1JdC+j@6c48a","e7BE4GKIlD1YdqGrgD17AM@f9941","5fhocMZa5KQ5dQRfBxG2og@f9941","9djI+uoq1FE4QXzCVvTtG4","682HihA5pGn6mHhbdei4dl","51kF+9xEtCIYifXoT5/VaS","090MqTLuZPqat/4TcDOh25","dbGMYMzjVOUZLTl9wTtBok","b8+81sigxItp29N0yZKfyx","99wZui5AhF+ojEBIE6PCoK","4dJfcsvzVHCaRx5UP+CjR4","cdHBlDSA5Hboj0emYXPL29","50k/l6jbdI7qwjByVw1Qi7","22UI4Tw+FEbJ7pvrwt3X4/","0eo6E/VJZBq619Dv74Fzh1@f9941","4fvyT6PA1NUZqtggc83k6x@f9941","ddCXCzfNxIVKq3N1FSN+CM@f9941","9fLcgrJ/9HYb/otsBptZwr@f9941","4eH0/WjQlKh5E+9Ps1T5o9@f9941","5fZZtKFiJLLJLNUjWr6yM2@f9941","c9bON9D0ZPmZZ7nTuCv50X@f9941","80YUjzXLJKwoN1TBCa7e3p","45no9cpRtErI/hgqty7Aqw","5a09gLAsZK46O5Eh0uoGTW","f0tC76PBRIcJKh6JnDWAam","e5kCKj/oxJRpFFwGNnT37S","95UhMKP4VIzZOgD71xiiFa","b9kDcrgKlCUZCTkwTxtEZ8","b4+DEXr6hDWY0cVUyYlolh","b1WcktXNJI5otIWuzmD9US@f9941","50wMN0rM5E/rFz3+BljrTw@f9941","b8o7rmotpHy6r1ID20Ien3@f9941","abRXOWnrdF9oOwhI4rMtaS","c0souh4ARAmqhieh9+FABn","11SzFFyPVD/6Zpzr4e7V3t@6c48a","b5aqPfDzBC/5FS17tNosR6@6c48a","1c1D9aNq9B7ZazD+ndtyUv@6c48a","400uaqNhFB074JHPn5k2wT@6c48a","01/c43noRF4Z3DVw5NELxH","3axsZa9idMWIEE1OGkuYLv@6c48a","09dy3G5YlKFIA1t3BGhV/c@6c48a","ebCHyHkqRE+L+yc0ckaGGz@0cc2b","e4LbB/sZBJ3b7wE2o8cWYN","7aXbZkr+JG1KRKULmcd40Q@9d09d","7aXbZkr+JG1KRKULmcd40Q@a5a19","7aXbZkr+JG1KRKULmcd40Q@32a27","67uhEHAPFDhaYzTnRGf1CW","91ESxC8eNGdZLUkCOzDkbw@6c18a","56XEwsdjtOr472bU7AFQ7m@6c48a","3ermDFATJMGae+CzQ0NdMW","8f5BQjKBpG17A5c/ZApLI/","caM76F9ehObZo919ojGI5Z@6c48a","01b5vhy09AtLa+v+40z9KF@6c48a","9epvIOo4BGSYZYQxevACsj@6c48a","12LEleB91FcoydI3kUsqzH","e3qE4eRfFCwb8GDLMHLXMa@dac15","e3qE4eRfFCwb8GDLMHLXMa@2d5df","e3qE4eRfFCwb8GDLMHLXMa@c268c","e3qE4eRfFCwb8GDLMHLXMa@51e63","a2nXuiYyxDNINlgXtoWzml@6c48a","far/Bz2xBFwKsByNaJfdM6@6c48a","6fmxdgkuVCX7fDejxlIDRX@6c48a","0dmwwKmINKA6lXhaItRwS6@784b7","07Muubq65DlJAZxWRjMBee@6c48a","ccfiFHgSFKk4aFuRKoSuFF","f3NoZvEhdLM4qxz5/X1+oo","b2GukLH9FE2YjnjFiLnsji@7d48a","26uPOtR7JPV4uciyzsJxqs@1351d","26uPOtR7JPV4uciyzsJxqs@f5d83","15vxjynjhG4qzZW9T+rT9i@f9941","a9oFRR3pxDErJ6KFKhThEI@f9941","22j8x2IOJHyaj5DQyf3z3i@f9941","90p8jwNKtMb5hmYafV5cSn","0e0TAIBBZPxJDc43Hr4sdS@f9941","37TI5FRgpNeomGSFjZcOeb","d5AG6RxGRC+r8iyf8KxJ6U","cctA4jyypN5ZMMoqUNF3WI@d178f","fdoJXLgx1GAa2UhGATlj3o","05Vp9GSANKSI+HBeIhwvrn@f9941","37flclrQpJ1Ll+Vi1JdC+j@f9941","04o6hGeS9AEpqz87X8Ye8w@f9941","11oa1UNa9M3oBIdLF1S50T@6c48a","173rzDCmtLirAL3Fi4hVge","69CQ0AyxNNip28E0Af7LVX@6c48a","abPvRPjkZLm75cGQwTWo6k@f9941","62DJ7MUoZOK6yvEK1WmgQr","5dkV/ByTNCzqGp0M0mVxaA","0eiI6jYAxH0IRiatNAS46d@34a41","41TCR6hcpOMLLRrKi8t9kl@a1979","96AUYdXs1PFqLJpqodnP1q@f9941","1cO8I2hEZDya2jVdc0lMwG@6c48a","89WF7qmI1DTYdS6xW5XMsg@f9941","9fhm+AOspO0ILBFO39UO4g@f9941","a6rnrpHO9OU4kxsQZMoEC7@6c48a","e49NwN1YhPPa5UorogLmnh@f9941","33txFCwCBKE6aI12q62Y1+@f9941","59ve2L4c5BSovO2XtGtBUe@f9941","f65HyTKA9CPZoPKBjS4b7z@f9941","abPvRPjkZLm75cGQwTWo6k@6c48a","bbPbvNvIFMw7wJ2SrqNmUx@f9941","92Zf8MCwlMjLWsiFx8mElB@5687c","e3qE4eRfFCwb8GDLMHLXMa@d053b","e3qE4eRfFCwb8GDLMHLXMa@2224c","e3qE4eRfFCwb8GDLMHLXMa@2d017","e3qE4eRfFCwb8GDLMHLXMa@d54ad","0e8rXz7lZBIKxQuw6U6VbS@6c48a","c29i6gnTtGpInGm7/0sIb2@6c48a","400uaqNhFB074JHPn5k2wT@f9941","805yg5+lRD54GPAGB7YPwV@f9941","dcD/kptcVIya6+rO5lIsON@6c48a","eaFdUWwkNIMaxUNRZnbXi+@6c48a","c9bON9D0ZPmZZ7nTuCv50X@6c48a","04dRCHd45CsK5GkEVXr7Tq","8aTDQa+0lMd7UHI5i6R9c9@f9941","ebnDwGUEJEFZEg7H4v6oju@f9941","ddcTrnSRtLQquawTELaFyD@f9941","98IZ8wkxVNaZr1xkBeF3nE@f9941","559zBS1SBNVprddcR3Z/BA@f9941","632MXCNvJLJq20NL4UA/6b@6c48a","64w3LDZONCiogLGEFndQ5r","c3XsfGvn9BboWVzvOrR8O6@9d09d","48by/9LZ9MZZGoLKK0+yzr","c3XsfGvn9BboWVzvOrR8O6@a5a19","cdVTvGjoZEOrk7yEQfxcJa@6c48a","c29i6gnTtGpInGm7/0sIb2@f9941","ceNqloXF1OD5JHrRG2gdAW@f9941","995cqe5/RNRbPBvsFpxtjz@f9941","0afo4iGehCWIiKw8T3IULx@f9941","03k1BmtuJOG7EBs0crfukL@f9941","acXbVYq41J6II2G7epsXZu@f9941","570BxFyphFrZnD8hHb1HVK@f9941","a6t+xOnB9CspfOmy3/8vCl@f9941","a6yFkMd5RCCq8GOac9GSf3@f9941","dfhvNJunZDfY9WrsTkn9Ys@f9941","11wxVnXfhFKbPLxV5NaQVa@f9941","31FCFCMkdP4bPcxUBS8mPB@f9941","e3qE4eRfFCwb8GDLMHLXMa@d1452","e3qE4eRfFCwb8GDLMHLXMa@f1394","e3qE4eRfFCwb8GDLMHLXMa@6bf07","e3qE4eRfFCwb8GDLMHLXMa@d21e0","d4dkm8WNRDTKXOq24MFsC5@6c48a","0354G8lAJH4bIIpOr+EBH4@6c48a","707tEYS4pPFoYhJ76yiNop@f9941","7aObnmwj5MTZlCpLdmmeCM@f9941","89Hz1CKIRAFbxzbiK74en2@f9941","5cF1Ts19RFg46YOD/uc1mF@f9941","e3qE4eRfFCwb8GDLMHLXMa@fd5d6","e3qE4eRfFCwb8GDLMHLXMa@14d80","e3qE4eRfFCwb8GDLMHLXMa@66900","e3qE4eRfFCwb8GDLMHLXMa@ecfe5","f5mL07/RtP54iCUvky6nkU","87/fkIWH9JEoypdFrA4arc@6c48a","fdd1ciOzBLoa/Rg/YNnN5B@f9941","3eb9J4+/BJYYL7YT1tPcMJ","33saQvPf1Fr76AQ3i4Zrk+@0d277","5fD5yrDdNDcJUtITshMBrR@b0311","17qQ/tmcRPer5c4VhB6krH@f9941","fc/mUTdwhKBKSCcIE7PwiO@f9941","cePG+5G1RA6I0096VGjkbm@6c48a","77gG66UGBNl7su6c4Y/tGt@6c48a","27IEacTJ9C+6RG6XVN6YUr@f9941","fbH7INeSlBkIqemNSz2eG/@f9941","21p7h8rt5FiqJi6pyaLFgq@f9941","cc4TnYWAVC6prMsG8p9BBC@f9941","cfN7/+rzpFarSM84v9jMT+@f9941","c9Z3GqH5xGlaoP2YkpzpvY","2fxjWXqo5EALN7V2v0BjA8@c1656","c8m5caMu9Fn6XnimYXZevj","2fxjWXqo5EALN7V2v0BjA8@00cae","b5jVroZMFNTKDPPXJQR3iX@f1fdd"],["node","_spriteFrame","_textureSource","_mesh","root","data","_parent","_effectAsset","mainTexture","_font","_skeleton","_normalSprite","_particleSystem","asset","target","_cpuMaterial","_mainTexture","_defaultClip","targetInfo","_target","_barSprite","source","_content","_clip","_customMaterial","spriteFrame","muzzlePartPre","RPGRocket","progressBar","loadingIcon","_texture"],["cc.SpriteFrame","cc.ImageAsset","cc.Texture2D",["cc.Node",["_name","_layer","_objFlags","_active","__editorExtras__","_prefab","_components","_parent","_lpos","_children","_lrot","_euler","_lscale"],-2,4,9,1,5,2,5,5,5],["cc.Widget",["_alignFlags","_originalWidth","_right","_left","_top","_bottom","_originalHeight","node","__prefab"],-4,1,4],["cc.Sprite",["_sizeMode","_type","node","__prefab","_spriteFrame","_customMaterial","_color"],1,1,4,6,6,5],["cc.Label",["_actualFontSize","_string","_fontSize","_isSystemFontUsed","_lineHeight","_spacingX","_isBold","node","__prefab","_font","_color"],-4,1,4,6,5],["cc.CurveRange",["mode","constantMax","multiplier","constantMin","constant","spline"],-2,4],["cc.ParticleSystem",["duration","loop","scaleSpace","_name","_aabbHalfZ","_capacity","startRotation3D","node","__prefab","_materials","startColor","startSizeX","startSizeY","startSizeZ","startSpeed","startRotationX","startRotationY","startRotationZ","startDelay","startLifetime","gravityModifier","rateOverTime","rateOverDistance","_colorOverLifetimeModule","_shapeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule","_noiseModule","_trailModule","renderer","bursts"],-4,1,4,12,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,9],["cc.ShapeModule",["_enable","_shapeType","radius","length","_angle","radiusThickness","arcSpread","_arc","arcSpeed","_position","_rotation","_scale"],-5,4,5,5,5],["cc.Node",["_name","_prefab","_components","_lrot","_euler","_parent","_lpos","_children"],2,4,2,5,5,1,5,9],["cc.RigidBody",["_allowSleep","_type","_group","_useGravity","node","__prefab","_angularFactor"],-1,1,4,5],["cc.Node",["_name","_layer","_prefab","_lpos","_parent","_components","_lscale","_lrot","_euler","_children"],1,4,5,1,12,5,5,5,12],["cc.Layout",["_layoutType","_spacingX","_paddingLeft","_paddingRight","_isAlign","node","__prefab"],-2,1,4],["cc.GradientRange",["_mode","gradient","color","colorMin","colorMax"],2,4,5,5,5],["cc.TextureAnimationModule",["_numTilesX","_numTilesY","cycleCount","_enable","rowIndex","frameOverTime","startFrame"],-2,4,4],["cc.ParticleSystemRenderer",["_renderMode","_velocityScale","_alignSpace","_cpuMaterial","_mainTexture","_mesh"],0,6,6,6],["cc.UITransform",["node","__prefab","_contentSize","_anchorPoint"],3,1,4,5,5],["cc.ParticleSystem",["duration","loop","scaleSpace","_simulationSpace","simulationSpeed","node","__prefab","_materials","startColor","startSizeX","startSizeY","startSizeZ","startSpeed","startRotationX","startRotationY","startRotationZ","startDelay","startLifetime","gravityModifier","rateOverTime","rateOverDistance","bursts","_colorOverLifetimeModule","_shapeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule","_noiseModule","_trailModule","renderer"],-2,1,4,3,4,4,4,4,4,4,4,4,4,4,4,4,4,9,4,4,4,4,4,4,4,4,4,4,4],["cc.Gradient",["alphaKeys","colorKeys"],3,9,9],["cc.RealKeyframeValue",["interpolationMode","value","rightTangent","leftTangent"],-1],["cc.BoxCollider",["_isTrigger","node","__prefab","_size","_center"],2,1,4,5,5],["cc.Material",["_name","_states","_defines","_techIdx","_props"],-1,12],["cc.BlockInputEvents",["_enabled","node","__prefab"],2,1,4],["cc.PrefabInfo",["fileId","instance","nestedPrefabInstanceRoots","targetOverrides","root","asset"],-1,1,1],["cc.Button",["_transition","node","__prefab","_pressedColor","_normalSprite","_target"],2,1,4,5,6,1],["cc.UIOpacity",["_opacity","node","__prefab"],2,1,4],["cc.ColorOvertimeModule",["_enable","color"],2,4],["cc.AlphaKey",["alpha","time"],1],["cc.SizeOvertimeModule",["_enable","size","x","y","z"],2,4,4,4,4],["cc.VelocityOvertimeModule",["space","x","y","z","speedModifier"],2,4,4,4,4],["cc.ForceOvertimeModule",["_enable","x","y","z"],2,4,4,4],["cc.RotationOvertimeModule",["_enable","x","y","z"],2,4,4,4],["cc.TrailModule",["_enable","_minParticleDistance","widthFromParticle","lifeTime","widthRatio","colorOverTrail","colorOvertime","_particleSystem"],0,4,4,4,4,1],["cc.MeshRenderer",["_shadowCastingMode","_name","node","__prefab","_materials","bakeSettings","_mesh"],1,1,4,3,4,6],["cc.PrefabInstance",["fileId","prefabRootNode","propertyOverrides","mountedComponents"],2,1,9,9],["cc.ColorKey",["time","color"],2,5],["cc.CylinderCollider",["_radius","_height","node","__prefab","_center"],1,1,4,5],["cc.MeshCollider",["_isTrigger","node","__prefab","_mesh"],2,1,4,6],["cc.Material",["_name","_props","_states","_defines"],-1],["cc.AudioClip",["_name","_native","_duration"],0],["cc.Prefab",["_name"],2],["cc.Node",["_name","_layer","_parent","_children","_components","_prefab","_lpos"],1,1,2,12,4,5],["cc.CompPrefabInfo",["fileId"],2],["cc.AudioSource",["_loop","node","__prefab","_clip"],2,1,4,6],["59f4fXVbZJF3oHE9C6GEwDV",["node","__prefab","RoleSprite"],3,1,4,3],["cc.PrefabInfo",["fileId","instance","targetOverrides","root","asset","nestedPrefabInstanceRoots"],0,1,1,2],["cc.PrefabInfo",["fileId","targetOverrides","nestedPrefabInstanceRoots","root","instance","asset"],0,1,4,6],["cc.PrefabInfo",["fileId","instance","root","asset","targetOverrides","nestedPrefabInstanceRoots"],1,1,1,9,2],["cc.ProgressBar",["_totalLength","_progress","node","__prefab","_barSprite"],1,1,4,1],["cc.ScrollView",["bounceDuration","brake","vertical","node","__prefab","_content"],0,1,4,1],["cc.UIMeshRenderer",["node","__prefab"],3,1,4],["cc.RealCurve",["_times","_values"],2,9],["cc.LimitVelocityOvertimeModule",["limitX","limitY","limitZ","limit"],3,4,4,4,4],["cc.NoiseModule",[],3],["cc.SkeletalAnimation",["playOnLoad","_useBakedAnimation","node","__prefab","_clips","_sockets","_defaultClip"],1,1,4,3,9,6],["cc.SkeletalAnimation.Socket",["path","target"],2,1],["cc.SkinnedMeshRenderer",["_shadowCastingMode","node","__prefab","_materials","bakeSettings","_skinningRoot","_mesh","_skeleton"],2,1,4,3,4,1,6,6],["cc.ModelBakeSettings",["_castShadow","_receiveShadow"],1],["cc.Mesh",["_native","_hash","_struct"],1,11],["cc.MeshRenderer",["_name","_enabled","_shadowCastingMode","_materials","node","__prefab","bakeSettings","_mesh"],-1,1,4,4,6],["303ecPfhCtDsqSDCjanaHfJ",["node","__prefab","noBorderNPC"],3,1,4,3],["cc.SphereCollider",["_radius","node","__prefab","_center"],2,1,4,5],["cc.CapsuleCollider",["_radius","_cylinderHeight","node","__prefab","_center"],1,1,4,5],["cc.TargetInfo",["localID"],2],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,1],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,1,8],["ba9325vAjpKxrhubbX0/KG3",["node","__prefab","weaponSprite"],3,1,4,3],["cc.Burst",["count"],3,4],["14cd7/AazxILruWrOqc0+w6",["node","__prefab","RolePre","WeaponPre","weaponUISP","sniperMirrorSP","bulletPre","bulletIconPre","BorderMaterials","leaderTitle","muzzlePartPre","RPGRocket"],3,1,4,3,3,3,3,3,3,3,3,6,6],["cc.TargetOverrideInfo",["propertyPath","source","sourceInfo","target","targetInfo"],2,1,4,1,4],["cc.Camera",["_name","_visibility","node","__prefab","_color"],1,1,4,5],["cc.Asset",["_name","_native"],1],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Mask",["_type","_inverted","node","__prefab"],1,1,4],["cc.Graphics",["node","__prefab","_fillColor"],3,1,4,5],["40c5axYjAJB/qypZLQLJVFz",["node","__prefab","loadingIcon","progressBar"],3,1,4,1,1],["cc.BitmapFont",["_name","fontSize","fntConfig"],0],["cc.MotionStreak",["_preview","_fadeTime","_minSeg","_stroke","node","__prefab","_texture"],-1,1,4,6],["cc.MountedComponentsInfo",["targetInfo","components"],3,4,9],["76769yr3KlDdpL5HFlreZTh",["node","__prefab","moregameSprite"],3,1,4,3],["228b3s88apPEZwq4mZ/qp1x",["node","__prefab","settingSprite"],3,1,4,3],["cc.Skeleton",["_name","_hash","_joints","_bindposes"],0,12]],[[43,0,2],[24,0,1,3,2,4,5,5],[7,1],[17,0,1,2,1],[3,0,7,9,5,8,10,11,2],[7,4,2],[3,0,1,7,6,5,8,3],[5,2,3,4,1],[58,0,1,3],[41,0,2],[59,0,1,2,3],[66,0,1,2,2],[14,1],[20,0,1,3],[65,0,1,2,3],[10,0,5,7,1,6,3,4,2],[3,0,1,7,9,6,5,8,3],[3,0,1,7,6,5,3],[57,0,1,2,3,4,5,6,7,2],[3,0,7,6,5,10,12,11,2],[17,0,1,2,3,1],[34,0,2,3,4,5,6,2],[22,0,1,2,4,4],[28,0,1,3],[5,0,2,3,4,2],[52,0,1,2],[40,0,1,2,4],[3,0,7,6,5,2],[3,0,7,5,8,10,11,2],[4,0,1,6,7,8,4],[25,0,1,2,3,4,2],[64,0,2],[7,0,3,1,4],[82,0,1,2,3,4],[3,0,9,6,5,2],[6,1,0,2,4,3,7,8,9,6],[5,1,0,2,3,4,3],[26,1,2,1],[3,0,7,5,8,2],[7,0,5,2],[53,0,1,2,3,1],[54,1],[3,0,1,9,6,5,3],[3,2,4,7,5,3],[47,0,1,2,3,4,5,4],[14,0,1,2],[27,0,1,2],[22,0,3,1,2,4,5],[3,0,7,9,5,2],[31,1,2,3,1],[35,0,1,2,2],[3,0,7,5,8,10,12,11,2],[19,0,1],[4,0,4,7,8,3],[29,1,2,3,4,1],[68,0,1],[23,1,2,1],[7,0,2,5,3],[20,0,2],[30,1,2,3,4,1],[33,3,4,5,6,7,1],[15,5,6,1],[3,0,9,5,10,11,2],[12,0,4,9,2,3,7,6,8,2],[46,0,1,2,3,4,5,4],[6,1,0,2,4,3,5,7,8,9,7],[6,1,0,2,4,3,5,7,8,10,9,7],[32,1,2,3,1],[16,3,4,1],[55,0,1,2,3,4,5,6,3],[56,0,1,2],[3,0,9,5,2],[3,0,7,6,5,8,2],[4,0,2,7,8,3],[20,0,1,2,3,5],[32,0,1,2,3,2],[11,1,4,5,2],[3,0,1,7,9,6,5,3],[17,0,1,1],[4,0,2,4,7,8,4],[3,0,7,6,5,8,10,12,11,2],[12,0,1,4,5,2,3,3],[10,0,5,2,1,2],[4,0,5,1,7,8,4],[4,0,3,4,7,8,4],[24,0,1,2,3,4,5,5],[49,0,1,2,3,4,3],[8,3,0,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,34,23,24,25,26,27,28,29,30,31,32,33,5],[9,0,1,2,5,6,3,7,8,9,11,8],[30,0,1,2,3,4,2],[33,0,1,2,3,4,5,6,7,4],[16,1],[60,0,1,2,3,4,5,6,7,5],[3,0,7,9,5,8,10,12,11,2],[3,0,1,7,6,5,8,12,3],[3,0,1,6,5,3],[3,0,1,9,6,5,8,3],[10,0,2,1,2],[4,0,3,7,8,3],[25,0,1,2,3,5,4,2],[26,0,1,2,2],[29,0,1,2,3,4,2],[11,2,0,4,5,6,3],[34,1,0,2,3,4,5,6,3],[61,0,1,2,1],[62,0,1,2,3,2],[63,0,1,2,3,4,3],[3,0,9,5,8,10,11,2],[3,0,7,9,6,5,10,11,2],[3,0,7,9,6,5,2],[5,0,2,3,2],[51,0,1,1],[28,0,2],[15,3,0,1,2,5,6,5],[21,1,2,3,1],[3,0,3,7,6,5,8,10,11,3],[3,0,3,1,7,6,5,8,4],[12,0,1,4,5,2,3,6,3],[48,0,1,2,3,4,5,3],[8,2,0,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,3],[9,0,1,8,10,3],[9,0,1,2,8,4],[31,0,1,2,3,2],[21,1,2,4,3,1],[11,4,5,1],[11,3,4,5,2],[11,0,4,5,2],[38,1,2,3,1],[38,0,1,2,3,2],[70,0,1,2,3,4,2],[71,0,1,2,3,4,3],[3,0,6,5,10,11,2],[3,0,2,1,7,9,6,5,8,4],[4,0,6,7,8,3],[4,0,3,2,4,5,1,6,7,8,8],[4,0,3,2,1,7,8,5],[4,0,7,8,2],[44,0,1,2,3,2],[5,1,0,2,3,3],[50,0,1,2,3,4,5,4],[13,0,2,3,1,5,6,5],[13,0,1,5,6,3],[6,1,0,3,7,8,9,4],[8,0,1,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,34,23,24,25,26,27,28,29,30,31,32,33,3],[7,0,1,2,4],[19,1,0,1],[9,0,1,2,8,9,4],[9,1,2,8,3],[15,0,1,2,5,6,4],[35,0,1,3,2,2],[36,0,2],[36,0,1,2],[37,0,1,2,3,4,3],[37,0,1,2,3,3],[73,0,1,2,4],[74,0,1,2,3,3],[75,0,1,2,1],[77,0,1,2,4],[79,0,1,1],[39,0,1,2,3,5],[3,0,1,7,9,6,5,8,12,3],[3,0,1,7,6,5,10,11,3],[3,0,1,7,6,5,12,3],[3,0,1,9,6,5,8,12,3],[3,0,2,1,7,6,5,4],[3,0,2,1,7,6,5,12,4],[3,0,7,6,5,10,11,2],[3,0,6,5,12,2],[3,0,1,6,5,8,12,3],[3,0,9,5,8,10,12,11,2],[3,0,3,1,7,6,5,4],[12,0,1,5,2,3,7,6,8,3],[10,0,2,1,6,3,4,2],[10,0,2,1,3,4,2],[42,0,1,2,3,4,5,6,3],[4,0,3,2,4,1,7,8,6],[4,0,5,7,8,3],[4,0,1,7,8,3],[4,0,2,5,7,8,4],[4,7,8,1],[23,0,1,2,2],[45,0,1,2,1],[5,2,3,6,4,1],[5,2,3,5,4,1],[5,0,2,3,5,4,2],[13,0,2,1,4,5,6,5],[13,0,2,1,5,6,4],[6,1,0,3,7,8,10,9,4],[6,0,2,6,7,8,4],[6,1,0,2,7,8,10,4],[8,0,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,34,23,24,25,26,27,28,29,30,31,32,33,2],[8,0,1,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,3],[8,6,1,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,3],[18,2,0,1,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,5],[18,0,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,4],[18,0,1,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,3],[14,2,1],[14,0,3,4,2],[7,0,3,1,2,5],[27,1,1],[19,1,1],[9,0,3,4,8,4],[15,3,0,1,2,4,5,6,6],[16,0,1,3,4,3],[16,0,2,5,3,4,3],[21,0,1,2,3,2],[67,0,1,2,1],[69,0,1,2,3,4,5,6,7,8,9,10,11,1],[72,0,1,3],[76,0,1,2,3,1],[78,0,1,2,3,4,5,6,5],[80,0,1,2,1],[81,0,1,2,1]],[[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["01b5vhy09AtLa+v+40z9KF"]}],[2],0,[],[],[]],[[[22,"bullet2",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"occlusion":0.279,"roughness":0.421,"metallic":0.359,"specularIntensity":0.609},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[137,2]],[[{"name":"shopbg13","rect":{"x":363,"y":429,"width":156,"height":19},"offset":{"x":0,"y":0},"originalSize":{"width":156,"height":19},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"trybg5","rect":{"x":229,"y":1179,"width":220,"height":100},"offset":{"x":0,"y":0},"originalSize":{"width":220,"height":100},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"resultbg16","rect":{"x":1060,"y":1424,"width":74,"height":74},"offset":{"x":0,"y":0},"originalSize":{"width":74,"height":74},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["0354G8lAJH4bIIpOr+EBH4"]}],[2],0,[],[],[]],[[[47,"boss",1,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0,"specularIntensity":0},"mainColor",8,[4,4278190335],"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[138,2]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,2,2,0,0","mipmaps":["04o6hGeS9AEpqz87X8Ye8w"]}],[2],0,[],[],[]],[[{"name":"pro2","rect":{"x":3,"y":2,"width":101,"height":28},"offset":{"x":0.5,"y":0},"originalSize":{"width":106,"height":32},"rotated":false,"capInsets":[15,0,15,0],"vertices":{"rawPosition":[-50.5,-14,0,50.5,-14,0,-50.5,14,0,50.5,14,0],"indexes":[0,1,2,2,1,3],"uv":[3,30,104,30,3,2,104,2],"nuv":[0.02830188679245283,0.0625,0.9811320754716981,0.0625,0.02830188679245283,0.9375,0.9811320754716981,0.9375],"minPos":{"x":-50.5,"y":-14,"z":0},"maxPos":{"x":50.5,"y":14,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[139]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["05RL0SqKVKHIADSsid27R1"]}],[2],0,[],[],[]],[[{"name":"snipermirror1","rect":{"x":53,"y":198,"width":574,"height":1002},"offset":{"x":0,"y":-99},"originalSize":{"width":680,"height":1200},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-287,-501,0,287,-501,0,-287,501,0,287,501,0],"indexes":[0,1,2,2,1,3],"uv":[53,1002,627,1002,53,0,627,0],"nuv":[0.07794117647058824,0,0.9220588235294118,0,0.07794117647058824,0.835,0.9220588235294118,0.835],"minPos":{"x":-287,"y":-501,"z":0},"maxPos":{"x":287,"y":501,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[140]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["05Vp9GSANKSI+HBeIhwvrn"]}],[2],0,[],[],[]],[[{"name":"loadingBg","rect":{"x":0,"y":0,"width":830,"height":1024},"offset":{"x":0,"y":0},"originalSize":{"width":830,"height":1024},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-415,-512,0,415,-512,0,-415,512,0,415,512,0],"indexes":[0,1,2,2,1,3],"uv":[0,1024,830,1024,0,0,830,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-415,"y":-512,"z":0},"maxPos":{"x":415,"y":512,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[141]],[[[26,"soundfail1",".mp3",1.593469],-1],0,0,[],[],[]],[[[22,"container",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true,"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0,"specularIntensity":0},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[142,2]],[[{"name":"shopbg12","rect":{"x":855,"y":1249,"width":97,"height":19},"offset":{"x":0,"y":0},"originalSize":{"width":97,"height":19},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"RolePage"],[42,"RolePage",33554432,[-7,-8,-9,-10,-11,-12,-13,-14],[[3,-2,[0,"47phGvI6pIdpbGhxuHmH9l"],[5,640,1136]],[29,45,100,100,-3,[0,"51SFOuDEdIVb5zW8MjFa7U"]],[56,-4,[0,"4bWBdZ+AlDbJzl9fmUhqI3"]],[137,true,-5,[0,"3amxXANWJHO6P0GRBA3fM2"],27],[181,-6,[0,"29zuVxwcpF5IikF+S57EQ2"],[28,29,30,31]]],[85,"a7ERIEEwRNP6aVz0LcK2NL",null,null,[],-1,0]],[16,"weaponnature",33554432,1,[-18,-19,-20,-21,-22],[[3,-15,[0,"79STBA7OJMIpzGQI0zcemV"],[5,640,160]],[24,0,-16,[0,"643nu+OVBBY74udY64DIYm"],20],[83,44,400,128,-17,[0,"66gEvg97pBAbQcANNxGf+z"]]],[1,"90Qj3LyolDXYS10MQLS8Ea",null,null,null,1,0],[1,0,-88,0]],[16,"btnfree",33554432,1,[-28,-29],[[3,-23,[0,"3cuT6JGqlEhZh6kXL3AJND"],[5,66,65]],[24,0,-24,[0,"2bWQCMhrdPDoIsRff4WKNL"],25],[99,1,-26,[0,"ada6OJtG5Nk5/Q6d5Ez8NZ"],[4,4292072403],-25,26],[73,32,41.94999999999999,-27,[0,"4fQkYc5q5BdYf+pGBYwN0h"]]],[1,"9clfoupmhGKKB9cNMzlPd0",null,null,null,1,0],[1,245.05,111.747,0]],[16,"btnunlock",33554432,2,[-34],[[3,-30,[0,"easToQhYRDmbSwerjhNZMz"],[5,226,96]],[7,-31,[0,"5fLM/SMn9Cj6GCAK8He9Kj"],12],[30,1,-32,[0,"d6YBPA/TlBvahnoMO2ihSZ"],[4,4292072403],13],[73,32,27,-33,[0,"50S62jtelG4Z8/bzQUEGpk"]]],[1,"69yMoI4vVKPYxqdtWmHU+c",null,null,null,1,0],[1,180,0,0]],[16,"nature1",33554432,2,[-37,-38,-39],[[3,-35,[0,"03tG9n5gdPd5QxGQwx/NKd"],[5,220,10]],[98,8,45,-36,[0,"26dRS8TSVOzKqKAmop6fJ8"]]],[1,"86ff+C1yhHJal/0rj5ma1c",null,null,null,1,0],[1,-165,30,0]],[16,"nature2",33554432,2,[-42,-43,-44],[[3,-40,[0,"a08yBXboBMTKP/6PhkOLWu"],[5,220,10]],[98,8,45,-41,[0,"feShpMnARO84B8hRc8yQfR"]]],[1,"551w2TG3NEpLNrvo6q48wj",null,null,null,1,0],[1,-165,-18,0]],[17,"bg",33554432,1,[[3,-45,[0,"a9Ruvi3DhPYaAsATASdYCh"],[5,640,1136]],[24,0,-46,[0,"d0fu8hRw5AsbLtegRAcvDw"],0],[29,45,120,120,-47,[0,"20NUPDTOBJNoxDNuVw2HL+"]],[37,-48,[0,"feDwZ+VfFO45HfXr2vvMO3"]]],[1,"2c/Si+Av5Ep6ywERBBm++L",null,null,null,1,0]],[6,"btnhome",33554432,1,[[3,-49,[0,"d8gLYkTkZNK7j7uC6hX3Fc"],[5,60,60]],[7,-50,[0,"5b7ncbQ+ZLi7cYnQrVg2sp"],1],[84,9,15,15,-51,[0,"7cYUiIX+RBC5gnEfUisokJ"]],[30,1,-52,[0,"3fwpLGRbJF9ZTMp9iXls7Q"],[4,4292072403],2]],[1,"2eijIayQFAhIwt3mRK9bq1",null,null,null,1,0],[1,-275,523,0]],[16,"NumGoldTT",33554432,1,[-56],[[3,-53,[0,"a7aT/BYftFGKrRDN6gGVhZ"],[5,140,50]],[36,1,0,-54,[0,"ffk/sOHHxGG451sVAu9e+w"],4],[79,33,15,20,-55,[0,"77Y/85sCxFV6CRt1Kmr3cD"]]],[1,"cbhcIhii9Nt7B7bUhdojYZ",null,null,null,1,0],[1,235,523,0]],[6,"btnuse",33554432,2,[[3,-57,[0,"a3jdPivcdNdoTQRv52TmZE"],[5,226,96]],[7,-58,[0,"dbe9r1PTBHJp3DRE9IYoYw"],9],[30,1,-59,[0,"d5Z+ET/rdKMrB8wsbgbjAX"],[4,4292072403],10],[73,32,27,-60,[0,"cbOXSlo9NOKq5+/zRSRUwQ"]]],[1,"a7pIFbJG5BNKCpZokz0gUG",null,null,null,1,0],[1,180,0,0]],[16,"progress",33554432,5,[-65],[[3,-61,[0,"35aTYcgOBLpJ7KWs2yKe/h"],[5,220,10]],[7,-62,[0,"49Q9DpXK9Mg5CPvDB20AAm"],14],[86,218,0.3,-64,[0,"fb4m/OdppDR56FukD+JOqn"],-63]],[1,"a3HpPsAnBC2pbfoR5H+kps",null,null,null,1,0],[1,0,-18,0]],[16,"progress",33554432,6,[-70],[[3,-66,[0,"ecbcnVYXZPi6XJ6Oury+7V"],[5,220,10]],[7,-67,[0,"81ChJgu1VKaJ+0JhIFj1Hm"],17],[86,218,0.7,-69,[0,"1f44leaOtN6p09pD+oWMVp"],-68]],[1,"55WMjhjhZO1rsRq3IqxUnE",null,null,null,1,0],[1,0,-18,0]],[16,"weaponlist",33554432,1,[-74],[[3,-71,[0,"006LwOgpVMz6elAqTJoHOY"],[5,640,300]],[24,0,-72,[0,"9db4g6f1tOb62SKwQo9t7Z"],21],[83,44,90,80,-73,[0,"beaS81grRF3aGnlJ1pBJgN"]]],[1,"24Df8KnsdLUaAFBIRnN4D7",null,null,null,1,0],[1,0,-328,0]],[77,"ScrollView",33554432,13,[-79],[[3,-75,[0,"1a4H0v4GhPCZqiKtDt6y+l"],[5,640,300]],[139,0.23,0.75,false,-77,[0,"a4SJbnteRMOpOVvk/eWCsJ"],-76],[29,45,240,250,-78,[0,"bd3hT4GslKx4hxkC9r6msE"]]],[1,"10lkiR1u1G6YZjRKMMwbJ1",null,null,null,1,0]],[6,"content",33554432,14,[[20,-80,[0,"a2jh87n3xEZ4pJfkCgXClB"],[5,220,300],[0,0,0.5]],[133,13,400,-81,[0,"41QiXvc1lLbKMSB63HhY+0"]],[140,1,25,25,25,-82,[0,"b2b7ArNd1LHIRRDKHBOLkw"]]],[1,"2d2pKM5TNL15AKlDT0xtLQ",null,null,null,1,0],[1,-320,0,0]],[117,"point",33554432,1,[[-83,[111,-84,[0,"e6OsPfqZxE3JmaQ8GLTnNt"]],[78,-85,[0,"37wMg3x4dGTJkMqPrkQqAS"]]],1,4,4],[1,"5dmaXhiwFBTIGzwL4+nWOZ",null,null,null,1,0],[1,0,220,30.288],[1,500,500,10]],[6,"bom",33554432,2,[[3,-86,[0,"90ejfh4l1ID427GNqZxOa/"],[5,640,10]],[24,0,-87,[0,"ffu1o3CidCH5rrw5OX7MTp"],8],[83,44,-10,220,-88,[0,"ccmiba6xZIvrBvv7p6VKE5"]]],[1,"e46dPo32NETZXdpwrAm3+Q",null,null,null,1,0],[1,0,-85,0]],[6,"text",33554432,5,[[20,-89,[0,"0cHMNwp9NEFpxw7Pf/qC3q"],[5,27,26],[0,1,0.5]],[65,"25",26,26,26,false,1,-90,[0,"07pwmqs7lATq9emu0wBb48"],15],[53,33,-10,-91,[0,"81Zhnu3FBN2LmdyQw7R1pt"]]],[1,"07JWknmzFGuLngeBAJbZ0Z",null,null,null,1,0],[1,110,2,0]],[6,"icon",33554432,5,[[3,-92,[0,"82g6LvQ8NArKg3getEXwHV"],[5,97,19]],[7,-93,[0,"32NEdHpXtMkbMXuHouSjB7"],16],[53,9,-5,-94,[0,"77SLotdNVGSYdGv4OF1TaR"]]],[1,"41TXIRIh5Nzqe5jO7W+HYV",null,null,null,1,0],[1,-61.5,0.5,0]],[6,"text",33554432,6,[[20,-95,[0,"5asPxwlEZKYY/yCqH3zCtW"],[5,27,26],[0,1,0.5]],[65,"25",26,26,26,false,1,-96,[0,"72mx3JyMpDCIgUZQhnRByB"],18],[53,33,-10,-97,[0,"dc+JKIFJFGKY5T779s1x54"]]],[1,"4eesm+dcBC8IY5o1O1wdvU",null,null,null,1,0],[1,110,2,0]],[6,"icon",33554432,6,[[3,-98,[0,"e1CVnX8s5D8LXsv5r5L0jc"],[5,156,19]],[7,-99,[0,"74rBJvByFIKqeYRlhPr3n7"],19],[53,9,-5,-100,[0,"8dScFvvttDQJbMbQw0cJ7Y"]]],[1,"eaCadeq0JLiKUwaPoILUdt",null,null,null,1,0],[1,-32,0.5,0]],[6,"icon",33554432,3,[[3,-101,[0,"89xhHpB61IIJR1anpOBozP"],[5,100,40]],[36,1,0,-102,[0,"abZhV2GUtI6rGU/qqArmSu"],22],[30,1,-103,[0,"570G5U9u9EY6lIPZ5+o5Pp"],[4,4292072403],23]],[1,"92JEzKQVFOYps4g8v7gIJ3",null,null,null,1,0],[1,0,-60,0]],[6,"text",33554432,9,[[3,-104,[0,"c1b85H1W1PqYqgEd/yPbNe"],[5,70.34,30]],[35,"10000",30,30,30,false,-105,[0,"53H2JWWgZNtJ538g51BNuw"],3]],[1,"90BrHBV01C7KsEtJURI7U+",null,null,null,1,0],[1,12,1,0]],[6,"text",33554432,4,[[3,-106,[0,"a152u6BJ1AB4e4Q3NcW2Yf"],[5,172.07,50]],[65,"F30000",50,50,50,false,2,-107,[0,"e0OyA8by5GHZ56y9lXSQGQ"],11]],[1,"21YnG+AfJI0o6ej4X1vWP/",null,null,null,1,0],[1,0,2,0]],[81,"icon",33554432,11,[[[20,-108,[0,"9dLsNOsDJE65/mE52g/FgE"],[5,65.39999999999999,8],[0,0,0.5]],-109],4,1],[1,"251yapvztK7YUp1iceJ5Df",null,null,null,1,0],[1,-109,0,0]],[81,"icon",33554432,12,[[[20,-110,[0,"8bcZ+8z+VBcIX5JghS3vk+"],[5,152.6,8],[0,0,0.5]],-111],4,1],[1,"582OpAsMhGGYf1r+QA3nv0",null,null,null,1,0],[1,-109,0,0]],[6,"text",33554432,3,[[3,-112,[0,"e1zEbcXORCNrtDzTB1TEJq"],[5,86.9,26]],[65,"FB500",26,26,26,false,2,-113,[0,"28yLKEzMhLKbcl18TRv5Md"],24]],[1,"28yc1pZPxCB4TsDbEPwrcB",null,null,null,1,0],[1,0,-59,0]],[119,0,3,16,[0,"25aF5ypBVEZr04srZXyjvl"],[[5,null],6,0],[12],[32,3,0.05,0.01],[2],[2],[32,3,0.05,0.1],[2],[2],[2],[2],[5,3],[2],[5,10],[2],[46,true,[45,1,[52,[[23,255,0.8325892857142857],[23,0,1]]]]],[120,true,0,[5,1],[1,90,0,0]],[101,true,[39,1,[25,[0,0.20512820512820512,0.4948717948717949,1],[[13,2,0.7296296296296296],[13,2,0.8629629629629629],[13,2,0.662962962962963],[13,2,0.8074074074074075]]]],[2],[2],[2]],[59,[2],[2],[2],[5,1]],[122,true,[32,3,-0.08,0.05],[2],[32,3,0.02,-0.05]],[40,[2],[2],[2],[2]],[67,[2],[2],[2]],[61,[39,1,[25,[0,1],[[13,2,1],[13,2,1]]]],[2]],[41],[60,[5,1],[2],[12],[12],-114],[68,6,7]],[110,0,25,[0,"aeDEctfX5Jf4tamL8Af8hS"]],[110,0,26,[0,"55R7dHVdBOqLHHNpAIT0AV"]],[17,"showRoleBox",33554432,1,[[78,-115,[0,"b2fObLf5BGG57ksqNtNsAH"]]],[1,"653wdj9H9GsJoFfktP69+V",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,7,0,-2,8,0,-3,9,0,-4,16,0,-5,2,0,-6,13,0,-7,3,0,-8,31,0,0,2,0,0,2,0,0,2,0,-1,17,0,-2,10,0,-3,4,0,-4,5,0,-5,6,0,0,3,0,0,3,0,19,3,0,0,3,0,0,3,0,-1,22,0,-2,27,0,0,4,0,0,4,0,0,4,0,0,4,0,-1,24,0,0,5,0,0,5,0,-1,11,0,-2,18,0,-3,19,0,0,6,0,0,6,0,-1,12,0,-2,20,0,-3,21,0,0,7,0,0,7,0,0,7,0,0,7,0,0,8,0,0,8,0,0,8,0,0,8,0,0,9,0,0,9,0,0,9,0,-1,23,0,0,10,0,0,10,0,0,10,0,0,10,0,0,11,0,0,11,0,20,29,0,0,11,0,-1,25,0,0,12,0,0,12,0,20,30,0,0,12,0,-1,26,0,0,13,0,0,13,0,0,13,0,-1,14,0,0,14,0,22,15,0,0,14,0,0,14,0,-1,15,0,0,15,0,0,15,0,0,15,0,-1,28,0,0,16,0,0,16,0,0,17,0,0,17,0,0,17,0,0,18,0,0,18,0,0,18,0,0,19,0,0,19,0,0,19,0,0,20,0,0,20,0,0,20,0,0,21,0,0,21,0,0,21,0,0,22,0,0,22,0,0,22,0,0,23,0,0,23,0,0,24,0,0,24,0,0,25,0,-2,29,0,0,26,0,-2,30,0,0,27,0,0,27,0,12,28,0,0,31,0,5,1,115],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,30],[1,1,11,9,1,-1,15,16,1,1,11,9,1,11,1,9,1,1,9,1,1,1,1,11,9,1,11,23,-1,-2,-3,-4,1,1],[50,7,7,1,18,19,19,29,20,30,30,1,31,31,20,1,143,20,1,144,51,52,17,17,1,32,32,53,145,146,147,148,33,33]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["07Muubq65DlJAZxWRjMBee"]}],[2],0,[],[],[]],[[[22,"weapons5_2",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"occlusion":0.279,"roughness":0.421,"metallic":0.359,"specularIntensity":0.609},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[149,2]],[[[26,"soundhurt",".mp3",0.444082],-1],0,0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["09dy3G5YlKFIA1t3BGhV/c"]}],[2],0,[],[],[]],[[[22,"NPC1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_OUTLINE_PASS":true},{"USE_BASE_COLOR_MAP":true,"BASE_COLOR_MAP_AS_SHADE_MAP_1":true,"BASE_COLOR_MAP_AS_SHADE_MAP_2":true},{},{}],[[[{"lineWidth":50},"baseColor",8,[4,4278190335]],[{"baseStep":0.5,"baseFeather":1,"shadeStep":10,"shadeFeather":10},"mainColor",8,[4,4294967295],"specular",8,[4,16777215],"mainTexture",6,0],{},{}],11,11,0,0]]],0,0,[0,0],[8,7],[54,25]],[[[9,"hero3"],[107,"hero3",[-2],[85,"8enAhkha5LVpp79fLbYOch",null,null,[],-1,0],[1,-0.5,0,1.923],[3,0,-0.17364817766693033,0,0.984807753012208],[1,0,-20,0]],[108,"role",1,[-5,-6],[[69,true,false,-4,[0,"abVJKl6kFCNqgwTW3n1eq7"],[18,19,20,21,22,23,24,25],[[70,"group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm/Bip001 R Hand",-3]],26]],[1,"db8IJuoJNBFpIuCUk95pHg",null,null,null,1,0],[3,0,1,0,6.123233995736766e-17],[1,0,180,0]],[48,"group1",2,[-7,-8,-9,-10,-11,-12,-13],[1,"8bmN030LFD26mvf8NCTsA2",null,null,null,1,0]],[62,"Bip001 Pelvis",[-14,-15,-16],[1,"67tA3HFS5NtIera8JnHmit",null,null,null,1,0],[3,-0.49999999254917427,-0.49999999254917427,-0.49999930709576956,0.5000007078049009],[1,-89.99991974527727,-89.99991974527727,-0.0000017074910602964197]],[4,"Bip001 Spine",4,[-17,-18,-19],[1,"4d7BWnI1tNdoxIG3r+O6OW",null,null,null,1,0],[1,0.06345447897911072,-0.00018557309522293508,8.825598030171022e-8],[3,-0.0000020895975280582397,-7.029299899061134e-7,0.013839598922637322,0.9999042281622775],[1,-0.00023840385348735112,-0.00007725782883960567,1.5859518471693235]],[63,"Bip001",3,[[[28,"Bip001 Footsteps",-20,[1,"60WUZm35dF+7hKzI4PZ98K",null,null,null,1,0],[1,2.2204459996194763e-18,-4.235164641608193e-24,-0.48366937041282654],[3,-5.855533932713747e-36,8.721625300910364e-33,0.7071063043492204,0.7071072580235531],[1,0,-9.489292531882443e-34,90]],4],4,1],[1,"bb2GUXf7BAeKsmsswDeEAl",null,null,null,1,0],[1,1.5575574163761985e-9,1.223509669303894,-0.03563276305794716],[3,-0.5000003576277408,-0.49999964237200345,-0.49999964237200345,0.5000003576277408],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90,-89.99991803772996,0]],[19,"extra_scarf_A",3,[[18,1,-21,[0,"7fSd04LNVGB7otB3/2GGKR"],[0],[8,true,true],2,1,2]],[1,"12+EtDmghN2Ir18jAopc72",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"head_F",3,[[18,1,-22,[0,"4elrPGhMtFsKUmuHnIKZnd"],[3],[8,true,true],2,4,5]],[1,"afSrb6jMZBy627S0r7y1GH",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"Body_E",3,[[18,1,-23,[0,"fdIiGBaulBFIttqZzeIfaY"],[6],[8,true,true],2,7,8]],[1,"0dCF0rqC9MaKWTFMqwVIp0",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[4,"Bip001 Neck",5,[-24],[1,"03pYxAbptH+Zx4TWs1bxtd",null,null,null,1,0],[1,0.24925068020820618,0.002057993318885565,2.225801765121105e-9],[3,-2.5382543063059532e-14,-3.4013390465250123e-7,0.12263263619889618,0.9924521331221942],[1,0.00000492800718908746,-0.00003988183168096121,14.088127942062796]],[15,"Bip001 Head",10,[[38,"Bip001 HeadNub",-25,[1,"e69bFUzBhDVoPzm00HieH7",null,null,null,1,0],[1,0.14218726754188538,0,-1.3552526853146218e-22]]],[1,"a8KYdh3SVJq636cD5xeMUQ",null,null,null,1,0],[1,0.04924758896231651,1.907348590179936e-8,0],[3,-3.4882480159419137e-13,3.7819707678111146e-7,-0.13635667822804998,0.9906598085631964],[1,0.000006137648761566025,0.00004459159608868198,-15.674154664616246]],[4,"Bip001 L Clavicle",5,[-26],[1,"cbU3eobTZPybqM1iio/EHp",null,null,null,1,0],[1,0.22444087266921997,0.000241467947489582,0.05013936385512352],[3,0.6646332882242292,-0.041312624648330666,0.7451421777055485,-0.036317960200814375],[1,179.23387337832077,-96.57884308222117,-6.259954481230718]],[4,"Bip001 L UpperArm",12,[-27],[1,"7bzaFpL5pGnqgEnZZDU0bf",null,null,null,1,0],[1,0.09830138832330704,-2.38418573772492e-9,1.4210854397564648e-16],[3,0.04255099175736575,-0.0012785928417488632,-0.040795269909396685,0.9982602487597254],[1,4.883685295492153,0.05283206706572578,-4.678090947669645]],[15,"Bip001 L Forearm",13,[[28,"Bip001 L Hand",-28,[1,"60f+5iQRxKk7B1Y6DtBoyu",null,null,null,1,0],[1,0.13451942801475525,0,0],[3,-0.7068251826029146,1.3165644977296043e-9,-1.3176133253999859e-9,0.7073882676708432],[1,-89.95437407813083,0,-2.1344341156289847e-7]]],[1,"d885eYgnZFmZiudmNhlNg7",null,null,null,1,0],[1,0.159247487783432,-9.53674295089968e-9,-7.629394360719743e-8],[3,-1.3211275627375078e-17,1.1242273068600845e-17,-0.0615115136775642,0.998106373932706],[1,-1.4427079470210262e-15,1.2018022123098817e-15,-7.053152824002574]],[4,"Bip001 R Clavicle",5,[-29],[1,"b0EVx/FHhF3b3MFkI01YWH",null,null,null,1,0],[1,0.22444087266921997,0.0002417469077045098,-0.05013935640454292],[3,-0.6646333971699345,0.04131056392481429,0.7451422854079972,-0.036316100720105285],[1,-179.23390833343123,96.57883794429625,-6.259637834225308]],[4,"Bip001 R UpperArm",15,[-30],[1,"29bsRyjP5MH7o0nZ0Ni26H",null,null,null,1,0],[1,0.09830138087272644,2.38418573772492e-9,1.4210854397564648e-16],[3,-0.042550999201322014,0.0012785855073846203,-0.04079526617775551,0.9982602486043184],[1,-4.883686184053137,-0.05283292551134381,-4.678090483855789]],[4,"Bip001 R Forearm",16,[-31],[1,"2afquWzHNNyKO6HHZmEt8N",null,null,null,1,0],[1,0.15924744307994843,0,7.629394360719743e-8],[3,1.4171622405368395e-17,4.3406712685104826e-18,-0.0615115136775642,0.998106373932706],[1,1.6640617539843948e-15,6.009011272576598e-16,-7.053152824002574]],[15,"Bip001 R Hand",17,[[28,"WeaponContainer",-32,[1,"fepCy4zXZP0p87sAOUeCiT",null,null,null,1,0],[1,0.08682487159967422,0.009681015275418758,0.058159179985523224],[3,0.07951347495774536,0.6636559934753525,0.7431398598259328,0.03132855506211496],[1,-96.80771665888834,-175.55522297722828,8.748770928418296]]],[1,"01F2aS6RdLz7tD08NbRhm2",null,null,null,1,0],[1,0.13451938331127167,1.776356799695581e-17,-7.629394360719743e-8],[3,0.7068252124052276,2.306085595844923e-9,-2.9625327292760735e-9,0.7073882378922517],[1,89.95437890588063,4.268868636040652e-7,-5.336086190280782e-8]],[4,"Bip001 L Thigh",4,[-33],[1,"33x2WvDOBKAobpaOMiKNlp",null,null,null,1,0],[1,-1.1444091541079615e-7,1.2516974834397843e-7,0.07466395199298859],[3,0.018307237243421235,0.999761299171899,-0.0005939877685746522,-0.011909530685995871],[1,0.04309417898204713,-178.63579635154264,2.09863395998742]],[4,"Bip001 L Calf",19,[-34],[1,"e0eVXdbi1C35ofQHOWimbY",null,null,null,1,0],[1,0.23993217945098877,0,0],[3,-1.9135070445383419e-19,-2.632967114808625e-18,-0.05198767289971633,0.9986477266115776],[1,-3.778728342000386e-17,-3.040914943161604e-16,-5.960035262353657]],[4,"Bip001 L Foot",20,[-35],[1,"a4KXeOYTZJA7+or8zAs4Iv",null,null,null,1,0],[1,0.16850009560585022,4.440891999238953e-18,9.53674295089968e-9],[3,0.00002668103463277201,-0.011924974547102866,0.03369276949931899,0.9993610916748956],[1,0.04920839647513726,-1.3689689338390039,3.8613259886719686]],[15,"Bip001 L Toe0",21,[[51,"Bip001 L Toe0Nub",-36,[1,"07Y0WUVs5MQKg7SSURzHJu",null,null,null,1,0],[1,0.0584682933986187,-2.98023217215615e-10,0],[3,-5.910146639665284e-14,1.776806190378769e-15,1,-6.123234262925839e-17],[1,-1,-0.9999999403953552,-0.9999999403953552],[1,-179.9999999999998,179.99999999999324,-7.0167096047230345e-15]]],[1,"a8U0COZfxFFroj7+Flbya8",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,1.5454350301197766e-8,1.5454268588785198e-8,0.7071067513842251,0.7071068109888683],[1,0,0.0000025044845661635244,90]],[4,"Bip001 R Thigh",4,[-37],[1,"97KchjgctLt4UqZdni8u+E",null,null,null,1,0],[1,1.1444091541079615e-7,-8.225440950582197e-8,-0.07466395199298859],[3,0.018307220172854872,0.9997612824196819,0.0005926282604946994,0.01191103084710343],[1,-0.042935196277668404,178.6356214928802,2.09863021316722]],[4,"Bip001 R Calf",23,[-38],[1,"71Bq5FZ69OAZWcjlZlUu+Q",null,null,null,1,0],[1,0.23993214964866638,0,0],[3,1.3034441181491747e-20,2.503826801162521e-19,-0.051987676614938125,0.9986477264181702],[1,2.9994474418916213e-18,2.8886738744973417e-17,-5.9600356886632015]],[4,"Bip001 R Foot",24,[-39],[1,"81/LGTXrVASa8L96yU/FM7",null,null,null,1,0],[1,0.16850009560585022,0,9.53674295089968e-9],[3,-0.000026684054124251007,0.011925061146287096,0.033692773185577625,0.9993610905171781],[1,-0.04920908323064725,1.3689788872170112,3.861326402895733]],[15,"Bip001 R Toe0",25,[[38,"Bip001 R Toe0Nub",-40,[1,"aa7LzeSKtFi6nR4z3qCS3G",null,null,null,1,0],[1,0.0584682859480381,0,1.776356799695581e-17]]],[1,"8fGemtfp9M572ClX2V3LkV",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,-1.5454308319985075e-8,-1.5454308319985075e-8,0.7071067811865474,0.7071067811865474],[1,0,-0.0000025044778683729144,90]],[80,"Legs_D",3,[[18,1,-41,[0,"b0CnGDybxE1ZcSUVZdmonl"],[9],[8,true,true],2,10,11]],[1,"8dB0bJFiRKspLEY/0X6loY",null,null,null,1,0],[1,0,0,0.041211970150470734],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,4.260214805603027,4.260214805603027,4.260214805603027],[1,-90.00000000000003,0,0]],[19,"extra_backpack",3,[[18,1,-42,[0,"4bT9VAUOlCpJqtEqW/sefo"],[12],[8,true,true],2,13,14]],[1,"59lWEPfQxMfIBq1nMDBdNm",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"extra_equip_A",3,[[18,1,-43,[0,"2dHjKm87pPMo4Rjbf5V7H5"],[15],[8,true,true],2,16,17]],[1,"19zqg+YKFBGI/qmyq0NR/9",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[51,"Bip001 R Hand Socket",2,[1,"41P1dlCvxO06jh3/Z3ccF3",null,null,null,1,0],[1,-1.1131373801939857,1.838145354003317,-0.02885021111468119],[3,0.048865442948463636,-0.04720239446017907,0.9958501437579962,-0.060552403516946525],[1,2.540000116945136,2.5400002612904107,2.5400001129065592],[1,174.9057677591496,-174.70201326474557,-7.19319336926635]]],0,[0,4,1,0,-1,2,0,14,30,0,0,2,0,-1,3,0,-2,30,0,-1,7,0,-2,8,0,-3,9,0,-4,6,0,-5,27,0,-6,28,0,-7,29,0,-1,5,0,-2,19,0,-3,23,0,-1,10,0,-2,12,0,-3,15,0,6,6,0,0,7,0,0,8,0,0,9,0,-1,11,0,6,11,0,-1,13,0,-1,14,0,6,14,0,-1,16,0,-1,17,0,-1,18,0,6,18,0,-1,20,0,-1,21,0,-1,22,0,6,22,0,-1,24,0,-1,25,0,-1,26,0,6,26,0,0,27,0,0,28,0,0,29,0,5,1,4,6,6,43],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,3,10,-1,3,10,-1,3,10,-1,3,10,-1,3,10,-1,3,10,-1,-2,-3,-4,-5,-6,-7,-8,17],[3,38,39,3,55,56,3,57,58,3,150,151,3,59,60,3,40,41,9,10,11,5,12,6,13,14,6]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["093TP30yFI3b4vPbEgqex3"]}],[2],0,[],[],[]],[[{"name":"resultbg14","rect":{"x":530,"y":1583,"width":58,"height":58},"offset":{"x":0,"y":0},"originalSize":{"width":58,"height":58},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[10,".bin",3473355982,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":3888,"length":1680,"count":420,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":3888,"count":81,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.04075207561254501,-0.040752071887254715,-0.25999999046325684],"maxPosition",8,[1,0.040752068161964417,0.04075208678841591,0]]],-1],0,0,[],[],[]],[[[10,".bin",131805922,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":16320,"length":3888,"count":972,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":16320,"count":340,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.619720995426178,-1.03037691116333,-0.6103061437606812],"maxPosition",8,[1,0.619720995426178,1.03037691116333,0.6103062033653259]]],-1],0,0,[],[],[]],[[{"name":"weapon0","rect":{"x":964,"y":967,"width":150,"height":50},"offset":{"x":0,"y":0},"originalSize":{"width":150,"height":50},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["0e0TAIBBZPxJDc43Hr4sdS"]}],[2],0,[],[],[]],[[{"name":"homebg14","rect":{"x":0,"y":0,"width":400,"height":252},"offset":{"x":0,"y":0},"originalSize":{"width":400,"height":252},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-200,-126,0,200,-126,0,-200,126,0,200,126,0],"indexes":[0,1,2,2,1,3],"uv":[0,252,400,252,0,0,400,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-200,"y":-126,"z":0},"maxPos":{"x":200,"y":126,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[152]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["0e8rXz7lZBIKxQuw6U6VbS"]}],[2],0,[],[],[]],[[[9,"container"],[34,"container",[-4],[[123,-2,[0,"65dAZqFANPA7TJnvQ982og"],[1,0,1.5,0],[1,8,3,3]],[76,2,-3,[0,"cbmv35zFlN9amRotguv5Hk"]]],[1,"d4FP9yLzlSNY6HxLzh4XAC",null,null,null,-1,0]],[27,"container",1,[[21,1,-5,[0,"9b5v1kVU1Vep865t8B7f5i"],[0],[8,true,true],1]],[1,"2bFUnwIoZZK48zMwGO+hrr",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,2,0,0,2,0,5,1,5],[0,0],[-1,3],[153,154]],[[[9,"npc2"],[34,"npc2",[-9,-10],[[69,true,false,-4,[0,"c2ovL2/v5ZF5MoWVegEgeJ"],[13,14,15,16,17,18,19,20],[[70,"group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm/Bip001 R Hand",-3]],21],[104,-5,[0,"aeMWOptCVFEaNGZ0o4FcVo"],[22,23]],[105,0.3,-6,[0,"31IISuXulC6ra2y1C6TlOn"],[1,0,2.3,0.05]],[106,0.35,1.5,-7,[0,"4734CrWx1BGayJs+9PTuuW"],[1,0,1,0]],[102,2,false,-8,[0,"b3dY3romhEQ7X9YAlPUKHm"],[1,0,1,1]]],[64,"98L6Qz/fpRkKOUAtG2zw7L",null,null,-2,0,[-1]]],[48,"group1",1,[-11,-12,-13,-14,-15],[1,"43VdW9GuJe3KU00e1qrPWu",null,null,null,1,0]],[31,["61w+jJ2RdTMKeJA84fbFSH"]],[62,"Bip001 Pelvis",[-16,-17,-18],[1,"da4pFHR09asb8UBfi3SjdH",null,null,null,1,0],[3,-0.49999999254917427,-0.49999999254917427,-0.49999930709576956,0.5000007078049009],[1,-89.99991974527727,-89.99991974527727,-0.0000017074910602964197]],[4,"Bip001 Spine",4,[-19,-20,-21],[1,"3dHriYAgRawIKAq3bsC/av",null,null,null,1,0],[1,0.06345447897911072,-0.00018557309522293508,8.825598030171022e-8],[3,-0.0000020895975280582397,-7.029299899061134e-7,0.013839598922637322,0.9999042281622775],[1,-0.00023840385348735112,-0.00007725782883960567,1.5859518471693235]],[63,"Bip001",2,[[[28,"Bip001 Footsteps",-22,[1,"3b93I5JdZZY7YrnjfNLlkt",null,null,null,1,0],[1,2.2204459996194763e-18,-4.235164641608193e-24,-0.48366937041282654],[3,-5.855533932713747e-36,8.721625300910364e-33,0.7071063043492204,0.7071072580235531],[1,0,-9.489292531882443e-34,90]],4],4,1],[1,"60una63sJeh6qV108eUTCK",null,null,null,1,0],[1,1.5575574163761985e-9,1.223509669303894,-0.03563276305794716],[3,-0.5000003576277408,-0.49999964237200345,-0.49999964237200345,0.5000003576277408],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90,-89.99991803772996,0]],[93,"Bip001 R Hand Socket",1,[-23],[1,"98UkXPtSpFXIOgeGymwFSI",null,null,null,1,0],[1,-1.1131373801939857,1.838145354003317,-0.02885021111468119],[3,0.048865442948463636,-0.04720239446017907,0.9958501437579962,-0.060552403516946525],[1,2.540000116945136,2.5400002612904107,2.5400001129065592],[1,174.9057677591496,-174.70201326474557,-7.19319336926635]],[43,0,{},7,[44,"61w+jJ2RdTMKeJA84fbFSH",null,null,-24,[50,"35loT0/89O35ZsH9gGEvcz",1,[[14,"weapon5",["_name"],3],[11,["_lpos"],3,[1,0.085,0.011,0.041]],[11,["_lrot"],3,[3,-4.329780281177466e-17,0.7071067811865476,0.7071067811865475,4.329780281177467e-17]],[11,["_euler"],3,[1,-90,180,0]],[11,["_lscale"],3,[1,0.5,0.5,0.5]]]],12]],[19,"head_B",2,[[18,1,-25,[0,"2cLs1bzQVZl4zYjLhprMPc"],[0],[8,true,true],1,1,2]],[1,"b5QHWUwtFd8IHf4UlO7/Wv",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"Body_C",2,[[18,1,-26,[0,"90I7LkellZ6qNQRNoQgPw5"],[3],[8,true,true],1,4,5]],[1,"41WStz58lTkqAPWmCdyMqw",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"extra_equip_B",2,[[18,1,-27,[0,"26tFEBSX1bN4hrtJiVndcv"],[6],[8,true,true],1,7,8]],[1,"50VL6NRGRf0a4giuQiTI7n",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"Legs_A",2,[[18,1,-28,[0,"56h6C/Pi1WUJFm1W+YoGZ0"],[9],[8,true,true],1,10,11]],[1,"33YYcU53JZh4sv0pTT1Rc0",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[4,"Bip001 Neck",5,[-29],[1,"29e5rkDpFQU6M34+6mXMqZ",null,null,null,1,0],[1,0.24925068020820618,0.002057993318885565,2.225801765121105e-9],[3,-2.5382543063059532e-14,-3.4013390465250123e-7,0.12263263619889618,0.9924521331221942],[1,0.00000492800718908746,-0.00003988183168096121,14.088127942062796]],[15,"Bip001 Head",13,[[38,"Bip001 HeadNub",-30,[1,"c0DDt+8c9cAZN4HfLr2GlV",null,null,null,1,0],[1,0.14218726754188538,0,-1.3552526853146218e-22]]],[1,"7e0R6njY1ZyIbfI16jkdXN",null,null,null,1,0],[1,0.04924758896231651,1.907348590179936e-8,0],[3,-3.4882480159419137e-13,3.7819707678111146e-7,-0.13635667822804998,0.9906598085631964],[1,0.000006137648761566025,0.00004459159608868198,-15.674154664616246]],[4,"Bip001 L Clavicle",5,[-31],[1,"94n3euuR9WRZQD6k3f5+29",null,null,null,1,0],[1,0.22444087266921997,0.000241467947489582,0.05013936385512352],[3,0.6646332882242292,-0.041312624648330666,0.7451421777055485,-0.036317960200814375],[1,179.23387337832077,-96.57884308222117,-6.259954481230718]],[4,"Bip001 L UpperArm",15,[-32],[1,"3awekmEb9WcZTL/koi9JbS",null,null,null,1,0],[1,0.09830138832330704,-2.38418573772492e-9,1.4210854397564648e-16],[3,0.04255099175736575,-0.0012785928417488632,-0.040795269909396685,0.9982602487597254],[1,4.883685295492153,0.05283206706572578,-4.678090947669645]],[15,"Bip001 L Forearm",16,[[28,"Bip001 L Hand",-33,[1,"0bcOT+gcFe46aSSyJ2AqWQ",null,null,null,1,0],[1,0.13451942801475525,0,0],[3,-0.7068251826029146,1.3165644977296043e-9,-1.3176133253999859e-9,0.7073882676708432],[1,-89.95437407813083,0,-2.1344341156289847e-7]]],[1,"d4UXRs7HxamLMte0Vw46fu",null,null,null,1,0],[1,0.159247487783432,-9.53674295089968e-9,-7.629394360719743e-8],[3,-1.3211275627375078e-17,1.1242273068600845e-17,-0.0615115136775642,0.998106373932706],[1,-1.4427079470210262e-15,1.2018022123098817e-15,-7.053152824002574]],[4,"Bip001 R Clavicle",5,[-34],[1,"8cuTkfJBRZ/I0e52dpeC5c",null,null,null,1,0],[1,0.22444087266921997,0.0002417469077045098,-0.05013935640454292],[3,-0.6646333971699345,0.04131056392481429,0.7451422854079972,-0.036316100720105285],[1,-179.23390833343123,96.57883794429625,-6.259637834225308]],[4,"Bip001 R UpperArm",18,[-35],[1,"6akMWcUxdTrLbRzBMwFoJo",null,null,null,1,0],[1,0.09830138087272644,2.38418573772492e-9,1.4210854397564648e-16],[3,-0.042550999201322014,0.0012785855073846203,-0.04079526617775551,0.9982602486043184],[1,-4.883686184053137,-0.05283292551134381,-4.678090483855789]],[4,"Bip001 R Forearm",19,[-36],[1,"232rQqVTZT/a3NRcvD0KNF",null,null,null,1,0],[1,0.15924744307994843,0,7.629394360719743e-8],[3,1.4171622405368395e-17,4.3406712685104826e-18,-0.0615115136775642,0.998106373932706],[1,1.6640617539843948e-15,6.009011272576598e-16,-7.053152824002574]],[15,"Bip001 R Hand",20,[[28,"WeaponContainer",-37,[1,"a6S68w6Lha8ZBLTVopHbw4",null,null,null,1,0],[1,0.08682487159967422,0.009681015275418758,0.058159179985523224],[3,0.07951347495774536,0.6636559934753525,0.7431398598259328,0.03132855506211496],[1,-96.80771665888834,-175.55522297722828,8.748770928418296]]],[1,"9ckzs3mOZarYaWD5UFCf+Z",null,null,null,1,0],[1,0.13451938331127167,1.776356799695581e-17,-7.629394360719743e-8],[3,0.7068252124052276,2.306085595844923e-9,-2.9625327292760735e-9,0.7073882378922517],[1,89.95437890588063,4.268868636040652e-7,-5.336086190280782e-8]],[4,"Bip001 L Thigh",4,[-38],[1,"40m3LGo5NZEbjaA/6RE3UN",null,null,null,1,0],[1,-1.1444091541079615e-7,1.2516974834397843e-7,0.07466395199298859],[3,0.018307237243421235,0.999761299171899,-0.0005939877685746522,-0.011909530685995871],[1,0.04309417898204713,-178.63579635154264,2.09863395998742]],[4,"Bip001 L Calf",22,[-39],[1,"e09EMcvZlZzIaUBH51t0li",null,null,null,1,0],[1,0.23993217945098877,0,0],[3,-1.9135070445383419e-19,-2.632967114808625e-18,-0.05198767289971633,0.9986477266115776],[1,-3.778728342000386e-17,-3.040914943161604e-16,-5.960035262353657]],[4,"Bip001 L Foot",23,[-40],[1,"70YL49wyRTz78DeHzNucG9",null,null,null,1,0],[1,0.16850009560585022,4.440891999238953e-18,9.53674295089968e-9],[3,0.00002668103463277201,-0.011924974547102866,0.03369276949931899,0.9993610916748956],[1,0.04920839647513726,-1.3689689338390039,3.8613259886719686]],[15,"Bip001 L Toe0",24,[[51,"Bip001 L Toe0Nub",-41,[1,"fdG0QFAdRZ67wbHSb8bcY0",null,null,null,1,0],[1,0.0584682933986187,-2.98023217215615e-10,0],[3,-5.910146639665284e-14,1.776806190378769e-15,1,-6.123234262925839e-17],[1,-1,-0.9999999403953552,-0.9999999403953552],[1,-179.9999999999998,179.99999999999324,-7.0167096047230345e-15]]],[1,"53/PUyh/5fiqkhQjUqDtSK",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,1.5454350301197766e-8,1.5454268588785198e-8,0.7071067513842251,0.7071068109888683],[1,0,0.0000025044845661635244,90]],[4,"Bip001 R Thigh",4,[-42],[1,"1fNDbbfV5Z4JD3zQ9S3rgd",null,null,null,1,0],[1,1.1444091541079615e-7,-8.225440950582197e-8,-0.07466395199298859],[3,0.018307220172854872,0.9997612824196819,0.0005926282604946994,0.01191103084710343],[1,-0.042935196277668404,178.6356214928802,2.09863021316722]],[4,"Bip001 R Calf",26,[-43],[1,"acyZTbi0NVxo022688GDjX",null,null,null,1,0],[1,0.23993214964866638,0,0],[3,1.3034441181491747e-20,2.503826801162521e-19,-0.051987676614938125,0.9986477264181702],[1,2.9994474418916213e-18,2.8886738744973417e-17,-5.9600356886632015]],[4,"Bip001 R Foot",27,[-44],[1,"0aFhksJ+JbwKKADX+yfyLV",null,null,null,1,0],[1,0.16850009560585022,0,9.53674295089968e-9],[3,-0.000026684054124251007,0.011925061146287096,0.033692773185577625,0.9993610905171781],[1,-0.04920908323064725,1.3689788872170112,3.861326402895733]],[15,"Bip001 R Toe0",28,[[38,"Bip001 R Toe0Nub",-45,[1,"94etp5c7xRRZXaUtu8JEQc",null,null,null,1,0],[1,0.0584682859480381,0,1.776356799695581e-17]]],[1,"49fbrLHzhSe70YYdZ7iJ2Z",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,-1.5454308319985075e-8,-1.5454308319985075e-8,0.7071067811865474,0.7071067811865474],[1,0,-0.0000025044778683729144,90]]],0,[0,-1,8,0,4,1,0,14,7,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,-2,7,0,-1,9,0,-2,10,0,-3,11,0,-4,12,0,-5,6,0,-1,5,0,-2,22,0,-3,26,0,-1,13,0,-2,15,0,-3,18,0,6,6,0,-1,8,0,4,8,0,0,9,0,0,10,0,0,11,0,0,12,0,-1,14,0,6,14,0,-1,16,0,-1,17,0,6,17,0,-1,19,0,-1,20,0,-1,21,0,6,21,0,-1,23,0,-1,24,0,-1,25,0,6,25,0,-1,27,0,-1,28,0,-1,29,0,6,29,0,5,1,4,6,6,45],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,3,10,-1,3,10,-1,3,10,-1,3,10,13,-1,-2,-3,-4,-5,-6,-7,-8,17,-1,-2],[4,155,156,4,61,62,4,63,64,4,42,43,21,9,10,11,5,12,6,13,14,5,8,3]],[[[22,"HERO1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0.645,"metallic":0.109,"specularIntensity":0.136},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[54,2]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["11SzFFyPVD/6Zpzr4e7V3t"]}],[2],0,[],[],[]],[[[9,"npc1"],[34,"npc1",[-9,-10],[[69,true,false,-4,[0,"c2ovL2/v5ZF5MoWVegEgeJ"],[13,14,15,16,17,18,19,20],[[70,"group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm/Bip001 R Hand",-3]],21],[104,-5,[0,"5bCqg5frdHZI6QpDAkIj2f"],[22,23]],[105,0.3,-6,[0,"d562Ne2lBJHJtXbR80W+TG"],[1,0,2.3,0.05]],[106,0.35,1.5,-7,[0,"c2ZB2buDlOuKjggsO9+275"],[1,0,1,0]],[102,2,false,-8,[0,"a9eu7b4KpA3K0S4D63U3R0"],[1,0,1,1]]],[64,"98L6Qz/fpRkKOUAtG2zw7L",null,null,-2,0,[-1]]],[48,"group1",1,[-11,-12,-13,-14,-15],[1,"43VdW9GuJe3KU00e1qrPWu",null,null,null,1,0]],[31,["61w+jJ2RdTMKeJA84fbFSH"]],[62,"Bip001 Pelvis",[-16,-17,-18],[1,"da4pFHR09asb8UBfi3SjdH",null,null,null,1,0],[3,-0.49999999254917427,-0.49999999254917427,-0.49999930709576956,0.5000007078049009],[1,-89.99991974527727,-89.99991974527727,-0.0000017074910602964197]],[4,"Bip001 Spine",4,[-19,-20,-21],[1,"3dHriYAgRawIKAq3bsC/av",null,null,null,1,0],[1,0.06345447897911072,-0.00018557309522293508,8.825598030171022e-8],[3,-0.0000020895975280582397,-7.029299899061134e-7,0.013839598922637322,0.9999042281622775],[1,-0.00023840385348735112,-0.00007725782883960567,1.5859518471693235]],[63,"Bip001",2,[[[28,"Bip001 Footsteps",-22,[1,"3b93I5JdZZY7YrnjfNLlkt",null,null,null,1,0],[1,2.2204459996194763e-18,-4.235164641608193e-24,-0.48366937041282654],[3,-5.855533932713747e-36,8.721625300910364e-33,0.7071063043492204,0.7071072580235531],[1,0,-9.489292531882443e-34,90]],4],4,1],[1,"60una63sJeh6qV108eUTCK",null,null,null,1,0],[1,1.5575574163761985e-9,1.223509669303894,-0.03563276305794716],[3,-0.5000003576277408,-0.49999964237200345,-0.49999964237200345,0.5000003576277408],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90,-89.99991803772996,0]],[93,"Bip001 R Hand Socket",1,[-23],[1,"67AB48hxdBda005ofsR7KA",null,null,null,1,0],[1,-1.1131373801939857,1.838145354003317,-0.02885021111468119],[3,0.048865442948463636,-0.04720239446017907,0.9958501437579962,-0.060552403516946525],[1,2.540000116945136,2.5400002612904107,2.5400001129065592],[1,174.9057677591496,-174.70201326474557,-7.19319336926635]],[43,0,{},7,[44,"61w+jJ2RdTMKeJA84fbFSH",null,null,-24,[50,"51YGOmEg5KvrwYj9z9oyBy",1,[[14,"weapon5",["_name"],3],[11,["_lpos"],3,[1,0.085,0.011,0.041]],[11,["_lrot"],3,[3,-4.329780281177466e-17,0.7071067811865476,0.7071067811865475,4.329780281177467e-17]],[11,["_euler"],3,[1,-90,180,0]],[11,["_lscale"],3,[1,0.5,0.5,0.5]]]],12]],[19,"head_F",2,[[18,1,-25,[0,"d0qc30AC5Txq0X9FSBk1JL"],[0],[8,true,true],1,1,2]],[1,"22lBJfj9pbhLWe148VZtx2",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[4,"Bip001 Neck",5,[-26],[1,"29e5rkDpFQU6M34+6mXMqZ",null,null,null,1,0],[1,0.24925068020820618,0.002057993318885565,2.225801765121105e-9],[3,-2.5382543063059532e-14,-3.4013390465250123e-7,0.12263263619889618,0.9924521331221942],[1,0.00000492800718908746,-0.00003988183168096121,14.088127942062796]],[15,"Bip001 Head",10,[[38,"Bip001 HeadNub",-27,[1,"c0DDt+8c9cAZN4HfLr2GlV",null,null,null,1,0],[1,0.14218726754188538,0,-1.3552526853146218e-22]]],[1,"7e0R6njY1ZyIbfI16jkdXN",null,null,null,1,0],[1,0.04924758896231651,1.907348590179936e-8,0],[3,-3.4882480159419137e-13,3.7819707678111146e-7,-0.13635667822804998,0.9906598085631964],[1,0.000006137648761566025,0.00004459159608868198,-15.674154664616246]],[4,"Bip001 L Clavicle",5,[-28],[1,"94n3euuR9WRZQD6k3f5+29",null,null,null,1,0],[1,0.22444087266921997,0.000241467947489582,0.05013936385512352],[3,0.6646332882242292,-0.041312624648330666,0.7451421777055485,-0.036317960200814375],[1,179.23387337832077,-96.57884308222117,-6.259954481230718]],[4,"Bip001 L UpperArm",12,[-29],[1,"3awekmEb9WcZTL/koi9JbS",null,null,null,1,0],[1,0.09830138832330704,-2.38418573772492e-9,1.4210854397564648e-16],[3,0.04255099175736575,-0.0012785928417488632,-0.040795269909396685,0.9982602487597254],[1,4.883685295492153,0.05283206706572578,-4.678090947669645]],[15,"Bip001 L Forearm",13,[[28,"Bip001 L Hand",-30,[1,"0bcOT+gcFe46aSSyJ2AqWQ",null,null,null,1,0],[1,0.13451942801475525,0,0],[3,-0.7068251826029146,1.3165644977296043e-9,-1.3176133253999859e-9,0.7073882676708432],[1,-89.95437407813083,0,-2.1344341156289847e-7]]],[1,"d4UXRs7HxamLMte0Vw46fu",null,null,null,1,0],[1,0.159247487783432,-9.53674295089968e-9,-7.629394360719743e-8],[3,-1.3211275627375078e-17,1.1242273068600845e-17,-0.0615115136775642,0.998106373932706],[1,-1.4427079470210262e-15,1.2018022123098817e-15,-7.053152824002574]],[4,"Bip001 R Clavicle",5,[-31],[1,"8cuTkfJBRZ/I0e52dpeC5c",null,null,null,1,0],[1,0.22444087266921997,0.0002417469077045098,-0.05013935640454292],[3,-0.6646333971699345,0.04131056392481429,0.7451422854079972,-0.036316100720105285],[1,-179.23390833343123,96.57883794429625,-6.259637834225308]],[4,"Bip001 R UpperArm",15,[-32],[1,"6akMWcUxdTrLbRzBMwFoJo",null,null,null,1,0],[1,0.09830138087272644,2.38418573772492e-9,1.4210854397564648e-16],[3,-0.042550999201322014,0.0012785855073846203,-0.04079526617775551,0.9982602486043184],[1,-4.883686184053137,-0.05283292551134381,-4.678090483855789]],[4,"Bip001 R Forearm",16,[-33],[1,"232rQqVTZT/a3NRcvD0KNF",null,null,null,1,0],[1,0.15924744307994843,0,7.629394360719743e-8],[3,1.4171622405368395e-17,4.3406712685104826e-18,-0.0615115136775642,0.998106373932706],[1,1.6640617539843948e-15,6.009011272576598e-16,-7.053152824002574]],[15,"Bip001 R Hand",17,[[28,"WeaponContainer",-34,[1,"a6S68w6Lha8ZBLTVopHbw4",null,null,null,1,0],[1,0.08682487159967422,0.009681015275418758,0.058159179985523224],[3,0.07951347495774536,0.6636559934753525,0.7431398598259328,0.03132855506211496],[1,-96.80771665888834,-175.55522297722828,8.748770928418296]]],[1,"9ckzs3mOZarYaWD5UFCf+Z",null,null,null,1,0],[1,0.13451938331127167,1.776356799695581e-17,-7.629394360719743e-8],[3,0.7068252124052276,2.306085595844923e-9,-2.9625327292760735e-9,0.7073882378922517],[1,89.95437890588063,4.268868636040652e-7,-5.336086190280782e-8]],[4,"Bip001 L Thigh",4,[-35],[1,"40m3LGo5NZEbjaA/6RE3UN",null,null,null,1,0],[1,-1.1444091541079615e-7,1.2516974834397843e-7,0.07466395199298859],[3,0.018307237243421235,0.999761299171899,-0.0005939877685746522,-0.011909530685995871],[1,0.04309417898204713,-178.63579635154264,2.09863395998742]],[4,"Bip001 L Calf",19,[-36],[1,"e09EMcvZlZzIaUBH51t0li",null,null,null,1,0],[1,0.23993217945098877,0,0],[3,-1.9135070445383419e-19,-2.632967114808625e-18,-0.05198767289971633,0.9986477266115776],[1,-3.778728342000386e-17,-3.040914943161604e-16,-5.960035262353657]],[4,"Bip001 L Foot",20,[-37],[1,"70YL49wyRTz78DeHzNucG9",null,null,null,1,0],[1,0.16850009560585022,4.440891999238953e-18,9.53674295089968e-9],[3,0.00002668103463277201,-0.011924974547102866,0.03369276949931899,0.9993610916748956],[1,0.04920839647513726,-1.3689689338390039,3.8613259886719686]],[15,"Bip001 L Toe0",21,[[51,"Bip001 L Toe0Nub",-38,[1,"fdG0QFAdRZ67wbHSb8bcY0",null,null,null,1,0],[1,0.0584682933986187,-2.98023217215615e-10,0],[3,-5.910146639665284e-14,1.776806190378769e-15,1,-6.123234262925839e-17],[1,-1,-0.9999999403953552,-0.9999999403953552],[1,-179.9999999999998,179.99999999999324,-7.0167096047230345e-15]]],[1,"53/PUyh/5fiqkhQjUqDtSK",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,1.5454350301197766e-8,1.5454268588785198e-8,0.7071067513842251,0.7071068109888683],[1,0,0.0000025044845661635244,90]],[4,"Bip001 R Thigh",4,[-39],[1,"1fNDbbfV5Z4JD3zQ9S3rgd",null,null,null,1,0],[1,1.1444091541079615e-7,-8.225440950582197e-8,-0.07466395199298859],[3,0.018307220172854872,0.9997612824196819,0.0005926282604946994,0.01191103084710343],[1,-0.042935196277668404,178.6356214928802,2.09863021316722]],[4,"Bip001 R Calf",23,[-40],[1,"acyZTbi0NVxo022688GDjX",null,null,null,1,0],[1,0.23993214964866638,0,0],[3,1.3034441181491747e-20,2.503826801162521e-19,-0.051987676614938125,0.9986477264181702],[1,2.9994474418916213e-18,2.8886738744973417e-17,-5.9600356886632015]],[4,"Bip001 R Foot",24,[-41],[1,"0aFhksJ+JbwKKADX+yfyLV",null,null,null,1,0],[1,0.16850009560585022,0,9.53674295089968e-9],[3,-0.000026684054124251007,0.011925061146287096,0.033692773185577625,0.9993610905171781],[1,-0.04920908323064725,1.3689788872170112,3.861326402895733]],[15,"Bip001 R Toe0",25,[[38,"Bip001 R Toe0Nub",-42,[1,"94etp5c7xRRZXaUtu8JEQc",null,null,null,1,0],[1,0.0584682859480381,0,1.776356799695581e-17]]],[1,"49fbrLHzhSe70YYdZ7iJ2Z",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,-1.5454308319985075e-8,-1.5454308319985075e-8,0.7071067811865474,0.7071067811865474],[1,0,-0.0000025044778683729144,90]],[19,"Legs_C",2,[[18,1,-43,[0,"96aZoGzXJcBZ79yx1KfRwt"],[3],[8,true,true],1,4,5]],[1,"6dqanZ5GBThavZfpngXw/s",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"Body_G",2,[[18,1,-44,[0,"b0GQG91WdXEYwfjnIwgfuT"],[6],[8,true,true],1,7,8]],[1,"ff8lsmZltZI5PMlwDYx6QE",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"extra_equip_A",2,[[18,1,-45,[0,"5aQYtAZmRWTI4eEtl4wGJi"],[9],[8,true,true],1,10,11]],[1,"a8thKLQ8NWPZmF/mqNMHbW",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]]],0,[0,-1,8,0,4,1,0,14,7,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,-2,7,0,-1,9,0,-2,6,0,-3,27,0,-4,28,0,-5,29,0,-1,5,0,-2,19,0,-3,23,0,-1,10,0,-2,12,0,-3,15,0,6,6,0,-1,8,0,4,8,0,0,9,0,-1,11,0,6,11,0,-1,13,0,-1,14,0,6,14,0,-1,16,0,-1,17,0,-1,18,0,6,18,0,-1,20,0,-1,21,0,-1,22,0,6,22,0,-1,24,0,-1,25,0,-1,26,0,6,26,0,0,27,0,0,28,0,0,29,0,5,1,4,6,6,45],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,3,10,-1,3,10,-1,3,10,-1,3,10,13,-1,-2,-3,-4,-5,-6,-7,-8,17,-1,-2],[4,55,56,4,44,45,4,157,158,4,40,41,21,9,10,11,5,12,6,13,14,5,8,3]],[[{"name":"homebg8","rect":{"x":523,"y":299,"width":112,"height":101},"offset":{"x":0,"y":-0.5},"originalSize":{"width":160,"height":116},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,2,2,0,0","mipmaps":["11oa1UNa9M3oBIdLF1S50T"]}],[2],0,[],[],[]],[[{"name":"shock22","rect":{"x":605,"y":745,"width":35,"height":34},"offset":{"x":0.5,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"sureadbg3","rect":{"x":964,"y":811,"width":166,"height":76},"offset":{"x":0,"y":-2},"originalSize":{"width":176,"height":86},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"weaponbg6","rect":{"x":331,"y":1229,"width":200,"height":200},"offset":{"x":0,"y":0},"originalSize":{"width":200,"height":200},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[47,"tree2",1,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true,"USE_ALBEDO_MAP":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[159,2]],[[[22,"weapons",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"occlusion":0.279,"roughness":0.421,"metallic":0.359,"specularIntensity":0.609},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[160,2]],[[[10,".bin",3219909449,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":6776,"length":2400,"count":600,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":6776,"count":121,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-5,0,-5],"maxPosition",8,[1,5,0,5]]],-1],0,0,[],[],[]],[[[10,".bin",3434579268,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1344,"length":144,"count":36,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":1344,"count":24,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,-0.5,-0.5],"maxPosition",8,[1,0.5,0.5,0.5]]],-1],0,0,[],[],[]],[[[9,"weapon5"],[71,"weapon5",[-2,-3],[1,"61w+jJ2RdTMKeJA84fbFSH",null,null,null,-1,0]],[48,"weapon",1,[-4,-5],[1,"f3O1gjwCNerYcZ0yNDETJp",null,null,null,1,0]],[27,"weapon_1",2,[[21,1,-6,[0,"3db5aHeh9bLqPARgjoZzph"],[0],[8,true,true],1]],[1,"109SjUh+pX1rfsfdLvGFi0",null,null,null,1,0]],[27,"weapon_2",2,[[21,1,-7,[0,"40FRbyrIlXZJkb2ejHLunw"],[2],[8,true,true],3]],[1,"cahukOe/VTyYOl4Y4ocxoe",null,null,null,1,0]],[72,"bulletstart",1,[[92,"Cube<ModelComponent>",false,1,[null],-8,[0,"c4L8GKsbBJOZH0SxPVaP7r"],[8,true,true],4]],[1,"b8llp2S4hHyoTSYCs0n+sp",null,null,null,1,0],[1,-0.978,0.107,0]]],0,[0,4,1,0,-1,2,0,-2,5,0,-1,3,0,-2,4,0,0,3,0,0,4,0,0,5,0,5,1,8],[0,0,0,0,0],[-1,3,-1,3,3],[161,162,163,164,22]],[[{"name":"shopbg5","rect":{"x":925,"y":1579,"width":128,"height":128},"offset":{"x":0,"y":0},"originalSize":{"width":128,"height":128},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"WeaponPage"],[42,"WeaponPage",33554432,[-7,-8,-9,-10,-11,-12,-13,-14],[[3,-2,[0,"47phGvI6pIdpbGhxuHmH9l"],[5,640,1136]],[29,45,100,100,-3,[0,"51SFOuDEdIVb5zW8MjFa7U"]],[56,-4,[0,"4bWBdZ+AlDbJzl9fmUhqI3"]],[137,true,-5,[0,"3amxXANWJHO6P0GRBA3fM2"],27],[206,-6,[0,"21sgcyQ49Nc76SoFiedcLQ"],[28,29,30,31,32,33]]],[85,"a7ERIEEwRNP6aVz0LcK2NL",null,null,[],-1,0]],[16,"weaponnature",33554432,1,[-18,-19,-20,-21,-22],[[3,-15,[0,"79STBA7OJMIpzGQI0zcemV"],[5,640,160]],[24,0,-16,[0,"643nu+OVBBY74udY64DIYm"],20],[83,44,400,128,-17,[0,"66gEvg97pBAbQcANNxGf+z"]]],[1,"90Qj3LyolDXYS10MQLS8Ea",null,null,null,1,0],[1,0,-88,0]],[16,"btnfree",33554432,1,[-28,-29],[[3,-23,[0,"3cuT6JGqlEhZh6kXL3AJND"],[5,66,65]],[24,0,-24,[0,"2bWQCMhrdPDoIsRff4WKNL"],25],[99,1,-26,[0,"ada6OJtG5Nk5/Q6d5Ez8NZ"],[4,4292072403],-25,26],[73,32,41.94999999999999,-27,[0,"74PvXaXWBPU426RLyBb6hz"]]],[1,"9clfoupmhGKKB9cNMzlPd0",null,null,null,1,0],[1,245.05,111.747,0]],[16,"btnunlock",33554432,2,[-34],[[3,-30,[0,"easToQhYRDmbSwerjhNZMz"],[5,226,96]],[7,-31,[0,"5fLM/SMn9Cj6GCAK8He9Kj"],12],[30,1,-32,[0,"d6YBPA/TlBvahnoMO2ihSZ"],[4,4292072403],13],[73,32,27,-33,[0,"d2IaIpCMFFI64SXTdO0DgZ"]]],[1,"69yMoI4vVKPYxqdtWmHU+c",null,null,null,1,0],[1,180,0,0]],[16,"nature1",33554432,2,[-37,-38,-39],[[3,-35,[0,"a40P8Ch11CNKdQrgrvLpQN"],[5,220,10]],[98,8,45,-36,[0,"1ej9kWkMtJCLR21kV6qMD6"]]],[1,"6dfWSGWNlLr7zeWAg7TJIU",null,null,null,1,0],[1,-165,30,0]],[16,"nature2",33554432,2,[-42,-43,-44],[[3,-40,[0,"50OXnl741DJ4jU4m16+Mw+"],[5,220,10]],[98,8,45,-41,[0,"59A6OdEX1I+59a22/MUaQI"]]],[1,"9dv0V1zhFBvICgSiQ+l5+F",null,null,null,1,0],[1,-165,-18,0]],[17,"bg",33554432,1,[[3,-45,[0,"a9Ruvi3DhPYaAsATASdYCh"],[5,640,1136]],[24,0,-46,[0,"d0fu8hRw5AsbLtegRAcvDw"],0],[29,45,120,120,-47,[0,"20NUPDTOBJNoxDNuVw2HL+"]],[37,-48,[0,"feDwZ+VfFO45HfXr2vvMO3"]]],[1,"2c/Si+Av5Ep6ywERBBm++L",null,null,null,1,0]],[6,"btnhome",33554432,1,[[3,-49,[0,"d8gLYkTkZNK7j7uC6hX3Fc"],[5,60,60]],[7,-50,[0,"5b7ncbQ+ZLi7cYnQrVg2sp"],1],[84,9,15,15,-51,[0,"7cYUiIX+RBC5gnEfUisokJ"]],[30,1,-52,[0,"3fwpLGRbJF9ZTMp9iXls7Q"],[4,4292072403],2]],[1,"2eijIayQFAhIwt3mRK9bq1",null,null,null,1,0],[1,-275,523,0]],[16,"NumGoldTT",33554432,1,[-56],[[3,-53,[0,"a7aT/BYftFGKrRDN6gGVhZ"],[5,140,50]],[36,1,0,-54,[0,"ffk/sOHHxGG451sVAu9e+w"],4],[79,33,15,20,-55,[0,"77Y/85sCxFV6CRt1Kmr3cD"]]],[1,"cbhcIhii9Nt7B7bUhdojYZ",null,null,null,1,0],[1,235,523,0]],[6,"btnuse",33554432,2,[[3,-57,[0,"a3jdPivcdNdoTQRv52TmZE"],[5,226,96]],[7,-58,[0,"dbe9r1PTBHJp3DRE9IYoYw"],9],[30,1,-59,[0,"d5Z+ET/rdKMrB8wsbgbjAX"],[4,4292072403],10],[73,32,27,-60,[0,"c74kOzzDtHc7I3zf2mXBGr"]]],[1,"a7pIFbJG5BNKCpZokz0gUG",null,null,null,1,0],[1,180,0,0]],[16,"progress",33554432,5,[-65],[[3,-61,[0,"48/Tol9DZEN4Ake89IVRo2"],[5,220,10]],[7,-62,[0,"2fh+BfLZ5M6rCGJeCrTgFU"],14],[86,218,0.3,-64,[0,"81eOYNqd9NsKzwtAPVB/bh"],-63]],[1,"fe9JnOs+JO1opEmwJ0kXzn",null,null,null,1,0],[1,0,-18,0]],[16,"progress",33554432,6,[-70],[[3,-66,[0,"37N9kHfVBIN6kYWARTEfoz"],[5,220,10]],[7,-67,[0,"94kizDhTFN1KooWbqAU/wa"],17],[86,218,0.7,-69,[0,"d2peE0W+ZDx7u8aEl1Xk4K"],-68]],[1,"2db8zBzStFs5QdtNgeWTqN",null,null,null,1,0],[1,0,-18,0]],[16,"weaponlist",33554432,1,[-74],[[3,-71,[0,"006LwOgpVMz6elAqTJoHOY"],[5,640,300]],[24,0,-72,[0,"9db4g6f1tOb62SKwQo9t7Z"],21],[83,44,90,80,-73,[0,"beaS81grRF3aGnlJ1pBJgN"]]],[1,"24Df8KnsdLUaAFBIRnN4D7",null,null,null,1,0],[1,0,-328,0]],[77,"ScrollView",33554432,13,[-79],[[3,-75,[0,"1a4H0v4GhPCZqiKtDt6y+l"],[5,640,300]],[139,0.23,0.75,false,-77,[0,"a4SJbnteRMOpOVvk/eWCsJ"],-76],[29,45,240,250,-78,[0,"bd3hT4GslKx4hxkC9r6msE"]]],[1,"10lkiR1u1G6YZjRKMMwbJ1",null,null,null,1,0]],[6,"content",33554432,14,[[20,-80,[0,"a2jh87n3xEZ4pJfkCgXClB"],[5,220,300],[0,0,0.5]],[133,13,400,-81,[0,"41QiXvc1lLbKMSB63HhY+0"]],[140,1,25,25,25,-82,[0,"b2b7ArNd1LHIRRDKHBOLkw"]]],[1,"2d2pKM5TNL15AKlDT0xtLQ",null,null,null,1,0],[1,-320,0,0]],[117,"point",33554432,1,[[-83,[111,-84,[0,"e6OsPfqZxE3JmaQ8GLTnNt"]],[78,-85,[0,"37wMg3x4dGTJkMqPrkQqAS"]]],1,4,4],[1,"5dmaXhiwFBTIGzwL4+nWOZ",null,null,null,1,0],[1,0,220,30.288],[1,500,500,10]],[6,"bom",33554432,2,[[3,-86,[0,"90ejfh4l1ID427GNqZxOa/"],[5,640,10]],[24,0,-87,[0,"ffu1o3CidCH5rrw5OX7MTp"],8],[83,44,-10,220,-88,[0,"ccmiba6xZIvrBvv7p6VKE5"]]],[1,"e46dPo32NETZXdpwrAm3+Q",null,null,null,1,0],[1,0,-85,0]],[6,"text",33554432,5,[[20,-89,[0,"a2puhffjlCu5OCTCuH1W5a"],[5,27,26],[0,1,0.5]],[65,"25",26,26,26,false,1,-90,[0,"3dTHZgjwBOwrJ+ExJ3Owhf"],15],[53,33,-10,-91,[0,"3e8Ba6xDpJSpN1Q/zgVxeY"]]],[1,"a8JDaOQC1AG6aaOGX/fj5o",null,null,null,1,0],[1,110,2,0]],[6,"icon",33554432,5,[[3,-92,[0,"fewAM7UvZMeoGUp15/7gxn"],[5,99,19]],[7,-93,[0,"c7sH3CVtJAopDjS6i0T0dK"],16],[53,9,-5,-94,[0,"93qTLsE/NG/a9thVqx6zaM"]]],[1,"a34Z9nJ8NGOp/zLz0bKYeH",null,null,null,1,0],[1,-60.5,0.5,0]],[6,"text",33554432,6,[[20,-95,[0,"18Lp2MEM1EZYxVxzmoAoGj"],[5,27,26],[0,1,0.5]],[65,"25",26,26,26,false,1,-96,[0,"1fHIRSgdhCToaVFw1JbLQe"],18],[53,33,-10,-97,[0,"80PEeHbIRE6JM73k3BDe3A"]]],[1,"7aOTItFH1F6ZaPP/9H7KJL",null,null,null,1,0],[1,110,2,0]],[6,"icon",33554432,6,[[3,-98,[0,"a8dIhhd2xOgIJ45BmRQRZm"],[5,161,19]],[7,-99,[0,"86Cz9Hf4ZKgrKeZHqz++YZ"],19],[53,9,-5,-100,[0,"b7j7DGGHtOA6wWPtzUE+lu"]]],[1,"bfNYhzhPJOEpeP8m74VYyn",null,null,null,1,0],[1,-29.5,0.5,0]],[6,"icon",33554432,3,[[3,-101,[0,"89xhHpB61IIJR1anpOBozP"],[5,100,40]],[36,1,0,-102,[0,"abZhV2GUtI6rGU/qqArmSu"],22],[30,1,-103,[0,"570G5U9u9EY6lIPZ5+o5Pp"],[4,4292072403],23]],[1,"92JEzKQVFOYps4g8v7gIJ3",null,null,null,1,0],[1,0,-60,0]],[6,"text",33554432,9,[[3,-104,[0,"c1b85H1W1PqYqgEd/yPbNe"],[5,70.34,30]],[35,"10000",30,30,30,false,-105,[0,"53H2JWWgZNtJ538g51BNuw"],3]],[1,"90BrHBV01C7KsEtJURI7U+",null,null,null,1,0],[1,12,1,0]],[6,"text",33554432,4,[[3,-106,[0,"a152u6BJ1AB4e4Q3NcW2Yf"],[5,172.07,50]],[65,"F30000",50,50,50,false,2,-107,[0,"e0OyA8by5GHZ56y9lXSQGQ"],11]],[1,"21YnG+AfJI0o6ej4X1vWP/",null,null,null,1,0],[1,0,2,0]],[81,"icon",33554432,11,[[[20,-108,[0,"5bo6gSNZdCa77itgh6UNCe"],[5,65.39999999999999,8],[0,0,0.5]],-109],4,1],[1,"ca5wKt/cVBFoRPi8lfYUG2",null,null,null,1,0],[1,-109,0,0]],[81,"icon",33554432,12,[[[20,-110,[0,"d6wr5tXlBIV7EDpH+6AOtJ"],[5,152.6,8],[0,0,0.5]],-111],4,1],[1,"08IBjqwIVB/byO3xl6YNoc",null,null,null,1,0],[1,-109,0,0]],[6,"text",33554432,3,[[3,-112,[0,"e1zEbcXORCNrtDzTB1TEJq"],[5,86.9,26]],[65,"FB500",26,26,26,false,2,-113,[0,"28yLKEzMhLKbcl18TRv5Md"],24]],[1,"28yc1pZPxCB4TsDbEPwrcB",null,null,null,1,0],[1,0,-59,0]],[119,0,3,16,[0,"25aF5ypBVEZr04srZXyjvl"],[[5,null],6,0],[12],[32,3,0.05,0.01],[2],[2],[32,3,0.05,0.1],[2],[2],[2],[2],[5,3],[2],[5,10],[2],[46,true,[45,1,[52,[[23,255,0.8325892857142857],[23,0,1]]]]],[120,true,0,[5,1],[1,90,0,0]],[101,true,[39,1,[25,[0,0.20512820512820512,0.4948717948717949,1],[[13,2,0.7296296296296296],[13,2,0.8629629629629629],[13,2,0.662962962962963],[13,2,0.8074074074074075]]]],[2],[2],[2]],[59,[2],[2],[2],[5,1]],[122,true,[32,3,-0.08,0.05],[2],[32,3,0.02,-0.05]],[40,[2],[2],[2],[2]],[67,[2],[2],[2]],[61,[39,1,[25,[0,1],[[13,2,1],[13,2,1]]]],[2]],[41],[60,[5,1],[2],[12],[12],-114],[68,6,7]],[110,0,25,[0,"ddhnlmNnpEibB2eybz3bMz"]],[110,0,26,[0,"daOsI1+DJHa5H2yP9oKiWT"]],[17,"showWeaponBox",33554432,1,[[78,-115,[0,"b2fObLf5BGG57ksqNtNsAH"]]],[1,"653wdj9H9GsJoFfktP69+V",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,7,0,-2,8,0,-3,9,0,-4,16,0,-5,2,0,-6,13,0,-7,3,0,-8,31,0,0,2,0,0,2,0,0,2,0,-1,17,0,-2,10,0,-3,4,0,-4,5,0,-5,6,0,0,3,0,0,3,0,19,3,0,0,3,0,0,3,0,-1,22,0,-2,27,0,0,4,0,0,4,0,0,4,0,0,4,0,-1,24,0,0,5,0,0,5,0,-1,11,0,-2,18,0,-3,19,0,0,6,0,0,6,0,-1,12,0,-2,20,0,-3,21,0,0,7,0,0,7,0,0,7,0,0,7,0,0,8,0,0,8,0,0,8,0,0,8,0,0,9,0,0,9,0,0,9,0,-1,23,0,0,10,0,0,10,0,0,10,0,0,10,0,0,11,0,0,11,0,20,29,0,0,11,0,-1,25,0,0,12,0,0,12,0,20,30,0,0,12,0,-1,26,0,0,13,0,0,13,0,0,13,0,-1,14,0,0,14,0,22,15,0,0,14,0,0,14,0,-1,15,0,0,15,0,0,15,0,0,15,0,-1,28,0,0,16,0,0,16,0,0,17,0,0,17,0,0,17,0,0,18,0,0,18,0,0,18,0,0,19,0,0,19,0,0,19,0,0,20,0,0,20,0,0,20,0,0,21,0,0,21,0,0,21,0,0,22,0,0,22,0,0,22,0,0,23,0,0,23,0,0,24,0,0,24,0,0,25,0,-2,29,0,0,26,0,-2,30,0,0,27,0,0,27,0,12,28,0,0,31,0,5,1,115],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,30],[1,1,11,9,1,-1,15,16,1,1,11,9,1,11,1,9,1,1,9,1,1,1,1,11,9,1,11,23,-1,-2,-3,-4,-5,-6,1,1],[50,7,7,1,18,19,19,29,20,30,30,1,31,31,20,1,165,20,1,166,51,52,17,17,1,32,32,53,65,167,168,169,170,171,33,33]],[[{"name":"leader6","rect":{"x":363,"y":602,"width":258,"height":49},"offset":{"x":0,"y":0},"originalSize":{"width":258,"height":49},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[26,"soundfail2",".mp3",7.732245],-1],0,0,[],[],[]],[[[26,"soundbomb",".mp3",3.108571],-1],0,0,[],[],[]],[[{"name":"gamebg8","rect":{"x":1051,"y":765,"width":29,"height":28},"offset":{"x":0,"y":0},"originalSize":{"width":29,"height":28},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"shock21","rect":{"x":1085,"y":403,"width":38,"height":34},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"tree1"],[131,"tree1",[[103,"Plane<ModelComponent>",1,-2,[0,"56AVRrJuFBU6TVRGuQLC+4"],[0],[8,true,true],1]],[1,"46R90Jjx9ATpjKGYtqku2A",null,null,null,-1,0],[3,0.7071067811865475,0,0,0.7071067811865476],[1,90,0,0]]],0,[0,4,1,0,0,1,0,5,1,2],[0,0],[-1,3],[172,26]],[[[9,"npc3"],[34,"npc3",[-9,-10],[[69,true,false,-4,[0,"c2ovL2/v5ZF5MoWVegEgeJ"],[19,20,21,22,23,24,25,26],[[70,"group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm/Bip001 R Hand",-3]],27],[104,-5,[0,"10cMW4tS1O6phE3VWi2CCB"],[28,29]],[105,0.3,-6,[0,"e7yuEYH+JMPKwW8N17oZBS"],[1,0,2.3,0.05]],[106,0.35,1.5,-7,[0,"7eVU6WxuNGq5cQ5noG+odN"],[1,0,1,0]],[102,2,false,-8,[0,"70Dp6mYaVHWa432kjn8ZwC"],[1,0,1,1]]],[64,"98L6Qz/fpRkKOUAtG2zw7L",null,null,-2,0,[-1]]],[48,"group1",1,[-11,-12,-13,-14,-15,-16,-17],[1,"43VdW9GuJe3KU00e1qrPWu",null,null,null,1,0]],[31,["61w+jJ2RdTMKeJA84fbFSH"]],[62,"Bip001 Pelvis",[-18,-19,-20],[1,"da4pFHR09asb8UBfi3SjdH",null,null,null,1,0],[3,-0.49999999254917427,-0.49999999254917427,-0.49999930709576956,0.5000007078049009],[1,-89.99991974527727,-89.99991974527727,-0.0000017074910602964197]],[4,"Bip001 Spine",4,[-21,-22,-23],[1,"3dHriYAgRawIKAq3bsC/av",null,null,null,1,0],[1,0.06345447897911072,-0.00018557309522293508,8.825598030171022e-8],[3,-0.0000020895975280582397,-7.029299899061134e-7,0.013839598922637322,0.9999042281622775],[1,-0.00023840385348735112,-0.00007725782883960567,1.5859518471693235]],[63,"Bip001",2,[[[28,"Bip001 Footsteps",-24,[1,"3b93I5JdZZY7YrnjfNLlkt",null,null,null,1,0],[1,2.2204459996194763e-18,-4.235164641608193e-24,-0.48366937041282654],[3,-5.855533932713747e-36,8.721625300910364e-33,0.7071063043492204,0.7071072580235531],[1,0,-9.489292531882443e-34,90]],4],4,1],[1,"60una63sJeh6qV108eUTCK",null,null,null,1,0],[1,1.5575574163761985e-9,1.223509669303894,-0.03563276305794716],[3,-0.5000003576277408,-0.49999964237200345,-0.49999964237200345,0.5000003576277408],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90,-89.99991803772996,0]],[93,"Bip001 R Hand Socket",1,[-25],[1,"4dz5BqxqZJKpd4utlieqZ0",null,null,null,1,0],[1,-1.1131373801939857,1.838145354003317,-0.02885021111468119],[3,0.048865442948463636,-0.04720239446017907,0.9958501437579962,-0.060552403516946525],[1,2.540000116945136,2.5400002612904107,2.5400001129065592],[1,174.9057677591496,-174.70201326474557,-7.19319336926635]],[43,0,{},7,[44,"61w+jJ2RdTMKeJA84fbFSH",null,null,-26,[50,"1be1NQQBREGpnJ/9DNGfkb",1,[[14,"weapon5",["_name"],3],[11,["_lpos"],3,[1,0.085,0.011,0.041]],[11,["_lrot"],3,[3,-4.329780281177466e-17,0.7071067811865476,0.7071067811865475,4.329780281177467e-17]],[11,["_euler"],3,[1,-90,180,0]],[11,["_lscale"],3,[1,0.5,0.5,0.5]]]],18]],[19,"head_D",2,[[18,1,-27,[0,"92WcK5+3JXtLHAldPRBwdL"],[0],[8,true,true],1,1,2]],[1,"6b1lm8teZQQZF/CP+5D3qo",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"extra_scarf_A",2,[[18,1,-28,[0,"7csNn5CrVXwrUjFiOfy6ON"],[3],[8,true,true],1,4,5]],[1,"91OrB+lnlR8I2OBO0EBq6U",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"Body_E",2,[[18,1,-29,[0,"b2wOX8NstXcKu+0KJnlI9j"],[6],[8,true,true],1,7,8]],[1,"dcXCPbB1Ve55VTpFBFhm+i",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"Legs_A",2,[[18,1,-30,[0,"56h6C/Pi1WUJFm1W+YoGZ0"],[9],[8,true,true],1,10,11]],[1,"33YYcU53JZh4sv0pTT1Rc0",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[4,"Bip001 Neck",5,[-31],[1,"29e5rkDpFQU6M34+6mXMqZ",null,null,null,1,0],[1,0.24925068020820618,0.002057993318885565,2.225801765121105e-9],[3,-2.5382543063059532e-14,-3.4013390465250123e-7,0.12263263619889618,0.9924521331221942],[1,0.00000492800718908746,-0.00003988183168096121,14.088127942062796]],[15,"Bip001 Head",13,[[38,"Bip001 HeadNub",-32,[1,"c0DDt+8c9cAZN4HfLr2GlV",null,null,null,1,0],[1,0.14218726754188538,0,-1.3552526853146218e-22]]],[1,"7e0R6njY1ZyIbfI16jkdXN",null,null,null,1,0],[1,0.04924758896231651,1.907348590179936e-8,0],[3,-3.4882480159419137e-13,3.7819707678111146e-7,-0.13635667822804998,0.9906598085631964],[1,0.000006137648761566025,0.00004459159608868198,-15.674154664616246]],[4,"Bip001 L Clavicle",5,[-33],[1,"94n3euuR9WRZQD6k3f5+29",null,null,null,1,0],[1,0.22444087266921997,0.000241467947489582,0.05013936385512352],[3,0.6646332882242292,-0.041312624648330666,0.7451421777055485,-0.036317960200814375],[1,179.23387337832077,-96.57884308222117,-6.259954481230718]],[4,"Bip001 L UpperArm",15,[-34],[1,"3awekmEb9WcZTL/koi9JbS",null,null,null,1,0],[1,0.09830138832330704,-2.38418573772492e-9,1.4210854397564648e-16],[3,0.04255099175736575,-0.0012785928417488632,-0.040795269909396685,0.9982602487597254],[1,4.883685295492153,0.05283206706572578,-4.678090947669645]],[15,"Bip001 L Forearm",16,[[28,"Bip001 L Hand",-35,[1,"0bcOT+gcFe46aSSyJ2AqWQ",null,null,null,1,0],[1,0.13451942801475525,0,0],[3,-0.7068251826029146,1.3165644977296043e-9,-1.3176133253999859e-9,0.7073882676708432],[1,-89.95437407813083,0,-2.1344341156289847e-7]]],[1,"d4UXRs7HxamLMte0Vw46fu",null,null,null,1,0],[1,0.159247487783432,-9.53674295089968e-9,-7.629394360719743e-8],[3,-1.3211275627375078e-17,1.1242273068600845e-17,-0.0615115136775642,0.998106373932706],[1,-1.4427079470210262e-15,1.2018022123098817e-15,-7.053152824002574]],[4,"Bip001 R Clavicle",5,[-36],[1,"8cuTkfJBRZ/I0e52dpeC5c",null,null,null,1,0],[1,0.22444087266921997,0.0002417469077045098,-0.05013935640454292],[3,-0.6646333971699345,0.04131056392481429,0.7451422854079972,-0.036316100720105285],[1,-179.23390833343123,96.57883794429625,-6.259637834225308]],[4,"Bip001 R UpperArm",18,[-37],[1,"6akMWcUxdTrLbRzBMwFoJo",null,null,null,1,0],[1,0.09830138087272644,2.38418573772492e-9,1.4210854397564648e-16],[3,-0.042550999201322014,0.0012785855073846203,-0.04079526617775551,0.9982602486043184],[1,-4.883686184053137,-0.05283292551134381,-4.678090483855789]],[4,"Bip001 R Forearm",19,[-38],[1,"232rQqVTZT/a3NRcvD0KNF",null,null,null,1,0],[1,0.15924744307994843,0,7.629394360719743e-8],[3,1.4171622405368395e-17,4.3406712685104826e-18,-0.0615115136775642,0.998106373932706],[1,1.6640617539843948e-15,6.009011272576598e-16,-7.053152824002574]],[15,"Bip001 R Hand",20,[[28,"WeaponContainer",-39,[1,"a6S68w6Lha8ZBLTVopHbw4",null,null,null,1,0],[1,0.08682487159967422,0.009681015275418758,0.058159179985523224],[3,0.07951347495774536,0.6636559934753525,0.7431398598259328,0.03132855506211496],[1,-96.80771665888834,-175.55522297722828,8.748770928418296]]],[1,"9ckzs3mOZarYaWD5UFCf+Z",null,null,null,1,0],[1,0.13451938331127167,1.776356799695581e-17,-7.629394360719743e-8],[3,0.7068252124052276,2.306085595844923e-9,-2.9625327292760735e-9,0.7073882378922517],[1,89.95437890588063,4.268868636040652e-7,-5.336086190280782e-8]],[4,"Bip001 L Thigh",4,[-40],[1,"40m3LGo5NZEbjaA/6RE3UN",null,null,null,1,0],[1,-1.1444091541079615e-7,1.2516974834397843e-7,0.07466395199298859],[3,0.018307237243421235,0.999761299171899,-0.0005939877685746522,-0.011909530685995871],[1,0.04309417898204713,-178.63579635154264,2.09863395998742]],[4,"Bip001 L Calf",22,[-41],[1,"e09EMcvZlZzIaUBH51t0li",null,null,null,1,0],[1,0.23993217945098877,0,0],[3,-1.9135070445383419e-19,-2.632967114808625e-18,-0.05198767289971633,0.9986477266115776],[1,-3.778728342000386e-17,-3.040914943161604e-16,-5.960035262353657]],[4,"Bip001 L Foot",23,[-42],[1,"70YL49wyRTz78DeHzNucG9",null,null,null,1,0],[1,0.16850009560585022,4.440891999238953e-18,9.53674295089968e-9],[3,0.00002668103463277201,-0.011924974547102866,0.03369276949931899,0.9993610916748956],[1,0.04920839647513726,-1.3689689338390039,3.8613259886719686]],[15,"Bip001 L Toe0",24,[[51,"Bip001 L Toe0Nub",-43,[1,"fdG0QFAdRZ67wbHSb8bcY0",null,null,null,1,0],[1,0.0584682933986187,-2.98023217215615e-10,0],[3,-5.910146639665284e-14,1.776806190378769e-15,1,-6.123234262925839e-17],[1,-1,-0.9999999403953552,-0.9999999403953552],[1,-179.9999999999998,179.99999999999324,-7.0167096047230345e-15]]],[1,"53/PUyh/5fiqkhQjUqDtSK",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,1.5454350301197766e-8,1.5454268588785198e-8,0.7071067513842251,0.7071068109888683],[1,0,0.0000025044845661635244,90]],[4,"Bip001 R Thigh",4,[-44],[1,"1fNDbbfV5Z4JD3zQ9S3rgd",null,null,null,1,0],[1,1.1444091541079615e-7,-8.225440950582197e-8,-0.07466395199298859],[3,0.018307220172854872,0.9997612824196819,0.0005926282604946994,0.01191103084710343],[1,-0.042935196277668404,178.6356214928802,2.09863021316722]],[4,"Bip001 R Calf",26,[-45],[1,"acyZTbi0NVxo022688GDjX",null,null,null,1,0],[1,0.23993214964866638,0,0],[3,1.3034441181491747e-20,2.503826801162521e-19,-0.051987676614938125,0.9986477264181702],[1,2.9994474418916213e-18,2.8886738744973417e-17,-5.9600356886632015]],[4,"Bip001 R Foot",27,[-46],[1,"0aFhksJ+JbwKKADX+yfyLV",null,null,null,1,0],[1,0.16850009560585022,0,9.53674295089968e-9],[3,-0.000026684054124251007,0.011925061146287096,0.033692773185577625,0.9993610905171781],[1,-0.04920908323064725,1.3689788872170112,3.861326402895733]],[15,"Bip001 R Toe0",28,[[38,"Bip001 R Toe0Nub",-47,[1,"94etp5c7xRRZXaUtu8JEQc",null,null,null,1,0],[1,0.0584682859480381,0,1.776356799695581e-17]]],[1,"49fbrLHzhSe70YYdZ7iJ2Z",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,-1.5454308319985075e-8,-1.5454308319985075e-8,0.7071067811865474,0.7071067811865474],[1,0,-0.0000025044778683729144,90]],[19,"extra_backpack",2,[[18,1,-48,[0,"30Gp+L+9JX9Iaaa8eBnNco"],[12],[8,true,true],1,13,14]],[1,"a1gHUUK6tW5o/uH067IhLi",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"extra_equip_A",2,[[18,1,-49,[0,"5aQYtAZmRWTI4eEtl4wGJi"],[15],[8,true,true],1,16,17]],[1,"a8thKLQ8NWPZmF/mqNMHbW",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]]],0,[0,-1,8,0,4,1,0,14,7,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,-2,7,0,-1,9,0,-2,10,0,-3,11,0,-4,12,0,-5,6,0,-6,30,0,-7,31,0,-1,5,0,-2,22,0,-3,26,0,-1,13,0,-2,15,0,-3,18,0,6,6,0,-1,8,0,4,8,0,0,9,0,0,10,0,0,11,0,0,12,0,-1,14,0,6,14,0,-1,16,0,-1,17,0,6,17,0,-1,19,0,-1,20,0,-1,21,0,6,21,0,-1,23,0,-1,24,0,-1,25,0,6,25,0,-1,27,0,-1,28,0,-1,29,0,6,29,0,0,30,0,0,31,0,5,1,4,6,6,49],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,3,10,-1,3,10,-1,3,10,-1,3,10,-1,3,10,-1,3,10,13,-1,-2,-3,-4,-5,-6,-7,-8,17,-1,-2],[4,66,67,4,38,39,4,57,58,4,42,43,4,59,60,4,40,41,21,9,10,11,5,12,6,13,14,5,8,3]],[[[9,"broken2"],[172,"broken2",[-2],[1,"437aiUVSVPFasLmUhR49Sr",null,null,null,-1,0],[1,0,0,-0.928],[3,0.7071067811865475,0,0,0.7071067811865476],[1,90,0,0]],[190,1,1,[0,"78NuGFOUNLCZSWViTZQ9Rz"],[[0,null],6,0],[12],[32,3,0.03,0.05],[2],[2],[32,3,6,3],[2],[2],[2],[2],[32,3,0.4,0.2],[5,1],[2],[2],[[55,[5,30]]],[46,true,[45,1,[145,[[150,0.6227678571428571]],[[23,255,0.7366071428571429],[23,0,1]]]]],[121,true,3,0.5,[5,1]],[54,[2],[2],[2],[2]],[59,[2],[2],[2],[5,1]],[49,[2],[2],[2]],[40,[2],[2],[2],[2]],[67,[2],[2],[2]],[148,4,4,1,[39,1,[25,[0,1],[[13,2,1],[13,2,1]]]],[144,3,15,16]],[41],[60,[5,1],[2],[12],[12],-3],[203,1,0.05,1,2]]],0,[0,4,1,0,-1,2,0,12,2,0,5,1,3],[0,0,0],[-1,15,16],[68,68,69]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["1cO8I2hEZDya2jVdc0lMwG"]}],[2],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["1c1D9aNq9B7ZazD+ndtyUv"]}],[2],0,[],[],[]],[[{"name":"homebg1","rect":{"x":363,"y":653,"width":190,"height":240},"offset":{"x":0,"y":0},"originalSize":{"width":190,"height":240},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[26,"soundhit1",".mp3",0.862041],-1],0,0,[],[],[]],[[[9,"blood"],[97,"blood",[-2],[1,"bdU2D0f+JKlq5T5UIZI8T7",null,null,null,-1,0]],[193,0,1,false,0,1,[0,"7aXvGSFOJHHpuYAOAOxQEp"],[0],[196,[4,3456106751]],[5,3],[2],[2],[2],[5,1.5707963267948966],[5,1.5707963267948966],[5,1.5707963267948966],[2],[5,1],[2],[2],[2],[[55,[5,10]]],[46,true,[45,1,[52,[[112,0],[23,255,0.07366071428571429],[23,255,0.8616071428571429],[23,0,1]]]]],[146,true,3,0.01,[5,1],[1,0,1.1,0]],[54,[39,1,[25,[0,0.4948717948717949,1],[[74,2,0.3925925925925926,0.525252525252526,0.525252525252526],[74,2,0.8185185185185185,0.6138888888888894,0.6138888888888894],[13,2,1]]]],[2],[2],[2]],[59,[2],[2],[2],[5,1]],[49,[2],[2],[2]],[40,[2],[2],[2],[2]],[67,[2],[2],[32,3,-0.7853981633974483,0.7853981633974483]],[113,true,4,8,1,[39,1,[25,[0,1],[[13,2,1],[13,2,1]]]],[57,1,32,[25,[0,1],[[58,2],[13,2,1]]]]],[41],[60,[5,1],[2],[12],[12],-3],[68,1,2]]],0,[0,4,1,0,-1,2,0,12,2,0,5,1,3],[0,0,0],[-1,15,16],[70,70,71]],[[{"name":"homebg3","rect":{"x":585,"y":1198,"width":80,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":80,"height":40},"rotated":true,"capInsets":[20,15,20,15],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[47,"explode",1,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainTexture",6,0]],11]]],0,0,[0,0],[8,7],[72,15]],[[{"fmt":"0","w":1146,"h":2044},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["1f59e12c6"]}],[2],0,[],[],[]],[[{"name":"weaponbg2","rect":{"x":1,"y":1426,"width":200,"height":200},"offset":{"x":0,"y":0},"originalSize":{"width":200,"height":200},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[26,"soundshoot3",".mp3",0.684],-1],0,0,[],[],[]],[[{"name":"trybg3","rect":{"x":1116,"y":997,"width":226,"height":27},"offset":{"x":0,"y":0},"originalSize":{"width":226,"height":27},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"weapon6"],[71,"weapon6",[-2,-3],[1,"1cZepOH8Fc8qhWXscOlC+Q",null,null,null,-1,0]],[48,"weapon",1,[-4,-5],[1,"0dZTd80+5SOpWXmTEnb3t3",null,null,null,1,0]],[27,"barret_optimaze1",2,[[21,1,-6,[0,"09H9woGERfHIqHFSyoht2L"],[0],[8,true,true],1]],[1,"a8JeyZaGxZt7bGRTFka/+p",null,null,null,1,0]],[72,"barret_optimaze2",2,[[21,1,-7,[0,"f1Em9zq4Vb+YtZ21kJhQdQ"],[2],[8,true,true],3]],[1,"c0CBloaJ5darE1juJXHyfN",null,null,null,1,0],[1,-0.23999999463558197,0.17000000178813934,0]],[72,"bulletstart",1,[[92,"Cube<ModelComponent>",false,1,[null],-8,[0,"2cCdJB2TZPWJk+SClbWkG2"],[8,true,true],4]],[1,"32cEh0Yf9JhaEURSRdqA19",null,null,null,1,0],[1,-1.625,0.114,0]]],0,[0,4,1,0,-1,2,0,-2,5,0,-1,3,0,-2,4,0,0,3,0,0,4,0,0,5,0,5,1,8],[0,0,0,0,0],[-1,3,-1,3,3],[173,174,175,176,22]],[[[26,"soundshoot2",".mp3",0.72],-1],0,0,[],[],[]],[[{"name":"hp2","rect":{"x":605,"y":653,"width":60,"height":10},"offset":{"x":0,"y":0},"originalSize":{"width":60,"height":10},"rotated":true,"capInsets":[5,0,5,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"oil_tank2"],[34,"oil_tank2",[-4],[[152,5.2,6.383,-2,[0,"41AdQGMdhNN6raddVqFw3s"],[1,0,3.2,0]],[76,2,-3,[0,"9dt6m+P51FUrpAJJUg10ck"]]],[1,"35i9kcjUBTvJ+FTTwsGHyX",null,null,null,-1,0]],[48,"oil_tank2",1,[-5,-6],[1,"20hOZd27ZUzYtbc4ow5bIp",null,null,null,1,0]],[27,"oil_tank2_1",2,[[21,1,-7,[0,"59KPO52pBRD6B9J0XiIXL1"],[0],[8,true,true],1]],[1,"49KXY1+9ZVPZDhNkkO6fkF",null,null,null,1,0]],[27,"oil_tank2_2",2,[[21,1,-8,[0,"cbDGMR/A5a7K02vduW0x7j"],[2],[8,true,true],3]],[1,"f3OkcjcqpXILXLR2cZqZ5r",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,2,0,-1,3,0,-2,4,0,0,3,0,0,4,0,5,1,8],[0,0,0,0],[-1,3,-1,3],[177,178,179,180]],[[[22,"oil_tank2_1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true,"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0,"specularIntensity":0},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[181,2]],[[[22,"oil_tank2_2",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true,"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0,"specularIntensity":0},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[182,2]],[[{"name":"shopbtn3","rect":{"x":1060,"y":1500,"width":66,"height":65},"offset":{"x":0,"y":0},"originalSize":{"width":66,"height":65},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"resultbg13","rect":{"x":592,"y":565,"width":35,"height":36},"offset":{"x":1.5,"y":-0.5},"originalSize":{"width":42,"height":37},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["25vMeof+dNE4EF1JEFLBuR"]}],[2],0,[],[],[]],[[{"name":"shopbg1","rect":{"x":0,"y":0,"width":40,"height":1020},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":1020},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-20,-510,0,20,-510,0,-20,510,0,20,510,0],"indexes":[0,1,2,2,1,3],"uv":[0,1020,40,1020,0,0,40,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-20,"y":-510,"z":0},"maxPos":{"x":20,"y":510,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[183]],[[[10,".bin",4237399051,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":38832,"length":10584,"count":2646,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":38832,"count":809,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.8432292342185974,-0.2826331555843353,-0.032446764409542084],"maxPosition",8,[1,0.8441531658172607,0.3215782940387726,1.0072633028030396]]],-1],0,0,[],[],[]],[[[10,".bin",2908134577,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":10128,"length":2784,"count":696,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":10128,"count":211,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.8659080266952515,0.0015357971424236894,-0.4796178340911865],"maxPosition",8,[1,0.8677135705947876,0.5923851132392883,0.5140486359596252]]],-1],0,0,[],[],[]],[[{"name":"failbg2","rect":{"x":1,"y":1,"width":640,"height":80},"offset":{"x":0,"y":-0.5},"originalSize":{"width":640,"height":191},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["29R2ZMO7FPFZHg/zGTKa9X"]}],[2],0,[],[],[]],[[{"name":"music1","rect":{"x":605,"y":781,"width":33,"height":37},"offset":{"x":-3.5,"y":0.5},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"gamebg4","rect":{"x":333,"y":957,"width":10,"height":31},"offset":{"x":0,"y":0},"originalSize":{"width":10,"height":31},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[10,".bin",1636843992,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":384,"length":48,"count":12,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":384,"count":8,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,0,1.0725548267364502,-2.836238145828247],"maxPosition",8,[1,0,2.5067832469940186,2.836238145828247]]],-1],0,0,[],[],[]],[[[10,".bin",1476309089,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":6336,"length":792,"count":198,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":6336,"count":132,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.2690248489379883,-0.0008891868637874722,-2.836239814758301],"maxPosition",8,[1,0.2690248489379883,2.564634323120117,2.836239814758301]]],-1],0,0,[],[],[]],[[[47,"bulletrotate",1,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainTexture",6,0]],11]]],0,0,[0,0],[8,7],[73,15]],[[{"name":"leader2","rect":{"x":1,"y":1375,"width":225,"height":49},"offset":{"x":0,"y":0},"originalSize":{"width":225,"height":49},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"settingbg4","rect":{"x":603,"y":942,"width":56,"height":30},"offset":{"x":0,"y":0},"originalSize":{"width":56,"height":30},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[26,"soundwind",".mp3",2.716735],-1],0,0,[],[],[]],[[{"name":"resultbtn1","rect":{"x":627,"y":1249,"width":226,"height":96},"offset":{"x":0,"y":-2},"originalSize":{"width":236,"height":106},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"barrel1"],[34,"barrel1",[-4],[[124,-2,[0,"7a6RXVaWZJ+aVqLmOlRvh8"]],[153,0.648,2.151,-3,[0,"14mGqi70BNCrynUa35Lll2"]]],[1,"596/0WhQxWW4Q2bIUdIzG/",null,null,null,-1,0]],[27,"barrel1",1,[[21,1,-5,[0,"3dNrOZdj9dNbkFGYSViCD5"],[0],[8,true,true],1]],[1,"acUHwzAv1VhpV0HSPys58+",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,2,0,0,2,0,5,1,5],[0,0],[-1,3],[184,185]],[[[10,".bin",3243278550,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":98208,"length":19728,"count":4932,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":98208,"count":2046,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-3.1512703895568848,-1.296034781717026e-7,-3.1545040607452393],"maxPosition",8,[1,3.165576219558716,9.712173461914062,2.964982271194458]]],-1],0,0,[],[],[]],[[{"name":"resultbg2","rect":{"x":1,"y":83,"width":640,"height":80},"offset":{"x":0,"y":-0.5},"originalSize":{"width":640,"height":191},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["34kLW9lIdNM6Qdg4QVZ9fW"]}],[2],0,[],[],[]],[[[22,"bullet1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"occlusion":0.279,"roughness":0.421,"metallic":0.359,"specularIntensity":0.609},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[186,2]],[[[9,"nature"],[171,"nature",33554432,[[-2,[111,-3,[0,"10PI3hWvZCb5RJFfA4e/2J"]],[78,-4,[0,"54fmX16R1F7aADJgfdFS16"]]],1,4,4],[1,"4bC3iH81FOVpDZpKdJw3gw",null,null,null,-1,0],[1,0,-120,0],[3,0.7071067811865475,0,0,0.7071067811865476],[1,100,100,100],[1,90,0,0]],[191,1,false,1,[0,"a6aT7NJmFOHrmSr9257IgX"],[[0,null],6,0],[12],[32,3,0.3,0.4],[2],[2],[5,3],[2],[2],[2],[2],[32,3,0.25,0.4],[2],[5,20],[2],[46,true,[45,1,[200,[[151,0.3013392857142857,[4,4294958848]],[151,1,[4,4294923776]]]]]],[201,true,2.2,0.017453292519943295,[5,1]],[101,true,[39,1,[25,[0,0.4666666666666667,1],[[13,2,0.22962962962962963],[13,2,0.9851851851851852],[13,2,0.24074074074074073]]]],[2],[2],[2]],[59,[2],[2],[2],[5,1]],[49,[2],[2],[2]],[40,[2],[2],[2],[2]],[67,[2],[2],[2]],[61,[39,1,[25,[0,1],[[13,2,1],[13,2,1]]]],[2]],[41],[60,[5,1],[2],[12],[12],-5],[68,1,2]]],0,[0,4,1,0,-1,2,0,0,1,0,0,1,0,12,2,0,5,1,5],[0,0,0],[-1,15,16],[74,74,75]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,2,2,0,0","mipmaps":["37flclrQpJ1Ll+Vi1JdC+j"]}],[2],0,[],[],[]],[[{"name":"pro1","rect":{"x":2,"y":2,"width":108,"height":36},"offset":{"x":0,"y":0},"originalSize":{"width":112,"height":40},"rotated":false,"capInsets":[15,0,15,0],"vertices":{"rawPosition":[-54,-18,0,54,-18,0,-54,18,0,54,18,0],"indexes":[0,1,2,2,1,3],"uv":[2,38,110,38,2,2,110,2],"nuv":[0.017857142857142856,0.05,0.9821428571428571,0.05,0.017857142857142856,0.95,0.9821428571428571,0.95],"minPos":{"x":-54,"y":-18,"z":0},"maxPos":{"x":54,"y":18,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[187]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["37lGYRvBRM/bfsEKqSQP9k"]}],[2],0,[],[],[]],[[{"name":"resultbg11","rect":{"x":515,"y":506,"width":71,"height":14},"offset":{"x":0,"y":0},"originalSize":{"width":71,"height":14},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["38bPUwvGpI35vfg2FHWjLT"]}],[2],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["3axsZa9idMWIEE1OGkuYLv"]}],[2],0,[],[],[]],[[{"name":"audio11","rect":{"x":1085,"y":439,"width":38,"height":32},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"GameLayer"],[42,"GameLayer",33554432,[-8,-9,-10,-11,-12,-13,-14,-15],[[3,-3,[0,"39wPHAVSFO/LToePc+CDq7"],[5,640,1136]],[29,45,100,100,-4,[0,"b7B67AXkJGc425n/XheAre"]],[56,-5,[0,"a0kzZVW0lPn6GL0LUk3wfL"]],[207,-6,[0,"c6rLg8k0FIK5j4yS/iJ7Yz"],[21,22,23,24],[25,26,27,28,29,30,31],[32,33,34,35,36,37,38],[39,40],[41,42,43],[44,45],[47,48],[49,50,51,52],46,53],[37,-7,[0,"40NnWGlBpOj6N/7A/BOq2S"]]],[64,"503jyUsztLQ5i9DtJ8t+7k",null,null,-2,0,[-1]]],[16,"btnrpg",33554432,1,[-21,-22],[[3,-16,[0,"43phAf0hNBEp3C4RVD/v6B"],[5,98,98]],[7,-17,[0,"3brI9QT3RC9r+zdfV6W/NJ"],5],[73,32,15,-18,[0,"18vfNnDwxJbLGqjXZbfb7u"]],[99,1,-20,[0,"51umH2+7RJ9bj1SP0QYWJ9"],[4,4292072403],-19,6]],[1,"03Ei/kQcVA96tXSW991hvE",null,null,null,1,0],[1,256,160,0]],[160,"bulletBox",33554432,1,[-25,-26,-27,-28],[[3,-23,[0,"cbbn161TFKv7bfjS0VooYo"],[5,150,50]],[53,9,252.5,-24,[0,"43wBins1pN05ezKTuqSgDD"]]],[1,"5d2MKV335NYpK5WkBHkjhQ",null,null,null,1,0],[1,-252.5,293,0],[1,0.9,0.9,0.9]],[6,"btnhome",33554432,1,[[3,-29,[0,"7cw8he3PdA7IgEA37e9IKE"],[5,60,60]],[7,-30,[0,"7aRXelY35IipdMJ+z1YA6r"],0],[84,9,15,15,-31,[0,"09QVNtdrhFlJbuH4ZVtegk"]],[30,1,-32,[0,"2auTekcUxCc5w18JXc6HRl"],[4,4292072403],1],[37,-33,[0,"085afRtMVFPpfQI7VvAtCH"]]],[1,"e1erG8ZHpBVJIABduJnacu",null,null,null,1,0],[1,-275,523,0]],[16,"bom",33554432,3,[-36,-37,-38],[[3,-34,[0,"b2ho7b2uVGQphyvP6ONz/W"],[5,150,50]],[7,-35,[0,"f6f8/0EghLML1F4hdy4UnI"],12]],[1,"4cnAUUDQ1OgJJ+G8zVVbtO",null,null,null,1,0],[1,0,-50,0]],[16,"killshow",33554432,3,[-41,-42],[[3,-39,[0,"3fYyxtNz9Kt67/ShW5YsZT"],[5,150,50]],[7,-40,[0,"b6+tEgBzFP3K2nB121Bzzw"],15]],[1,"75GaVHh/BO1IrkQaIW8PYz",null,null,null,1,0],[1,0,-100,0]],[77,"follow",33554432,1,[-45,-46],[[3,-43,[0,"49LhGWpfdJx7sbzuL05Pli"],[5,740,1236]],[134,45,-50,-50,-50,-50,640,640,-44,[0,"a5KW+SDdhLZJ0i9XFm3CRR"]]],[1,"84GU/0BI1KupQCogblrXQy",null,null,null,1,0]],[17,"follow1",33554432,7,[[3,-47,[0,"07HbdNFUZGsod2YLZHPuD6"],[5,740,1236]],[24,0,-48,[0,"9fXTnEA59DxLNJ97yKPjAO"],17],[29,45,640,640,-49,[0,"c1jUI98EtCkrKKYQlMb2Nz"]],[37,-50,[0,"darS+/NkROUIsOTdLMMdt4"]]],[1,"b1itbudRBJga1T93yhMPZ6",null,null,null,1,0]],[161,"follow2",33554432,7,[[3,-51,[0,"561wRmt35BRJ2f7DPS/Plt"],[5,740,1236]],[24,0,-52,[0,"cb/XpwRQVGSaCBLM73UkV4"],18],[29,45,640,640,-53,[0,"7c0ZFzbMlAcoaHuW+95V5d"]],[37,-54,[0,"c6nQW45z9AjqpA2QEjgJAb"]]],[1,"e6C3aNyUVKgbhVayC43kXb",null,null,null,1,0],[3,0,0,1,6.123233995736766e-17],[1,0,0,180]],[16,"NumGold",33554432,1,[-58],[[3,-55,[0,"238Amy6V9Gyrzn/4j2sxQ0"],[5,140,50]],[36,1,0,-56,[0,"e8DZB8b0tGPa7DNBjP0pK1"],20],[79,33,15,20,-57,[0,"18bcx3delBXLWWvv5Pj1r1"]]],[1,"d6m07xAaJGXKAfX+hs1yV/",null,null,null,1,0],[1,235,523,0]],[16,"ad",33554432,2,[-61],[[3,-59,[0,"bdAGld1AdPH4Z6qWPSMYae"],[5,84,44]],[24,0,-60,[0,"492L3707dDYbkq/n62Shki"],4]],[1,"b031gRJr5FDaZKlXTEgFqw",null,null,null,1,0],[1,0,-44,0]],[6,"NumGateTT",33554432,1,[[3,-62,[0,"17sKm+JehP9rX70dgtJxdx"],[5,126.9,40]],[187,"A1",40,false,-63,[0,"27dwfwOFlM7r9931D7ufvZ"],[4,4278190080],7],[53,17,24.495000000000005,-64,[0,"03GHcfmppH8LKag4A4dPkF"]]],[1,"d6ZtGN9blNqIYYgOaxLeKo",null,null,null,1,0],[1,0,523.505,0]],[31,["d3XOQyu5dGHbNB1ijYpaiG"]],[17,"Map",33554432,1,[[3,-65,[0,"965d8ERAFI7qJ3V5rNbpC5"],[5,640,1136]],[29,45,100,100,-66,[0,"99JfOrimtL1pkZV9EWUdmv"]]],[1,"53GRCMATxG0K4xRsegbpt4",null,null,null,1,0]],[17,"icon",33554432,2,[[3,-67,[0,"33C7Mol+lMWJ6YLJllwFBd"],[5,135,61]],[7,-68,[0,"7ermTpW8xCqaf3SAPCiQqL"],2]],[1,"16C3gwAd9ILqHv1NHbUYbZ",null,null,null,1,0]],[162,"icon",33554432,11,[[3,-69,[0,"3d1kk6phJJ3IBONhU+Ii71"],[5,112,101]],[7,-70,[0,"bd35G6Q+JIY6eg3vkmL5H8"],3]],[1,"4aTyh7KEZGfYq52+7TMu4N",null,null,null,1,0],[1,0.35,0.35,0.35]],[17,"bg",33554432,3,[[3,-71,[0,"90hLtcICVFkYXu1vsWKTR3"],[5,150,50]],[7,-72,[0,"8ayBjgYQVK5o6gPCbzWCB+"],8]],[1,"77PMFW4FNAy51YBcanwqK5",null,null,null,1,0]],[17,"bulletshow",33554432,3,[[3,-73,[0,"eb2zpnAmJCYYYURIukR50j"],[5,150,50]],[185,1,7,4,true,-74,[0,"efI3wd9H5Jb5/FfxE1qPOH"]]],[1,"55VqGE4AdKNa2qCXGkOv1G",null,null,null,1,0]],[17,"gun",33554432,5,[[3,-75,[0,"1dL5TW5RhMqKU/pcxiy+1/"],[5,150,50]],[7,-76,[0,"42kzghTPFLr4bGxafhsUtj"],9]],[1,"cbKOXVWq1KDIG/3oFPm4fM",null,null,null,1,0]],[94,"bulleticon",33554432,5,[[20,-77,[0,"71GXfg31VBzKLEtMqOr72r"],[5,10,31],[0,1,0.5]],[182,-78,[0,"25oe1CwJJACbKcxfWLkr2D"],[4,4278321666],10]],[1,"40QvSs2IJKo4GQJRdhMGKV",null,null,null,1,0],[1,35,-11.557,0],[1,0.6,0.6,0.6]],[6,"bullettext",33554432,5,[[20,-79,[0,"9bFTEtGSpBEKHRCZv7VROI"],[5,32.34,20],[0,1,0.5]],[66,"C20",20,20,20,false,1,-80,[0,"646nsW1LhDzJEpig71G+Ca"],[4,4278190080],11]],[1,"40lrs9YFxBt7WRLxmOiSTv",null,null,null,1,0],[1,70,-11.557,0]],[6,"icon",33554432,6,[[3,-81,[0,"0bBJwO1upILqnrmTv4QH2z"],[5,40,40]],[7,-82,[0,"9fRIKhr/FEAa02ZLo8ybUf"],13]],[1,"4dMY/JTXZFVoVi6sVHkmcn",null,null,null,1,0],[1,-50,0,0]],[6,"text",33554432,6,[[3,-83,[0,"db7OPzs7BLwb8QlV8ZXbLH"],[5,48.34,30]],[65,"0E0",30,30,30,false,4,-84,[0,"35Pwg02ENOaJ50TST+WqCe"],14]],[1,"91GpncsqxCkKZ0vCHbZq4L",null,null,null,1,0],[1,5,0,0]],[43,0,{},1,[44,"d3XOQyu5dGHbNB1ijYpaiG",null,null,-85,[50,"24FUDXcIZM0rAF3ziyynou",1,[[14,"headShoot",["_name"],13],[11,["_lpos"],13,[1,0,400,0]],[11,["_lrot"],13,[3,0,0,0,1]],[11,["_euler"],13,[1,0,0,0]]]],16]],[6,"text",33554432,10,[[3,-86,[0,"6ajdcdezpKer+dTNBQuMaT"],[5,55.86,30]],[35,"1000",30,30,30,false,-87,[0,"b2dyuuHqxEX7D6jRZCxeJw"],19]],[1,"bemGIV0uJKMol31r0CEHmY",null,null,null,1,0],[1,12,1,0]]],0,[0,-1,24,0,4,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,14,0,-2,4,0,-3,2,0,-4,12,0,-5,3,0,-6,24,0,-7,7,0,-8,10,0,0,2,0,0,2,0,0,2,0,19,2,0,0,2,0,-1,15,0,-2,11,0,0,3,0,0,3,0,-1,17,0,-2,18,0,-3,5,0,-4,6,0,0,4,0,0,4,0,0,4,0,0,4,0,0,4,0,0,5,0,0,5,0,-1,19,0,-2,20,0,-3,21,0,0,6,0,0,6,0,-1,22,0,-2,23,0,0,7,0,0,7,0,-1,8,0,-2,9,0,0,8,0,0,8,0,0,8,0,0,8,0,0,9,0,0,9,0,0,9,0,0,9,0,0,10,0,0,10,0,0,10,0,-1,25,0,0,11,0,0,11,0,-1,16,0,0,12,0,0,12,0,0,12,0,0,14,0,0,14,0,0,15,0,0,15,0,0,16,0,0,16,0,0,17,0,0,17,0,0,18,0,0,18,0,0,19,0,0,19,0,0,20,0,0,20,0,0,21,0,0,21,0,0,22,0,0,22,0,0,23,0,0,23,0,4,24,0,0,25,0,0,25,0,5,1,87],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,11,1,1,1,1,11,9,1,1,1,9,1,1,9,1,13,1,1,9,1,-1,-2,-3,-4,-1,-2,-3,-4,-5,-6,-7,-1,-2,-3,-4,-5,-6,-7,-1,-2,-1,-2,-3,-1,-2,26,-1,-2,-1,-2,-3,-4,27],[7,7,76,77,17,34,34,1,78,79,80,1,188,189,1,78,190,81,81,1,18,191,192,193,194,195,196,197,198,199,21,200,201,79,202,203,204,205,206,82,207,208,209,210,211,212,213,214,215,83,216,217,218,219]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["3cukh1As1Ir62KS2JXqDlf"]}],[2],0,[],[],[]],[[[9,"block"],[34,"block",[-4],[[127,-2,[0,"43+wsR9ipMSIb0dctIxP7g"],2],[76,2,-3,[0,"343r7nDNpIfrKv/ALDre+H"]]],[1,"2cFr2q1Q1SlKxPVJH+Mgmt",null,null,null,-1,0]],[27,"block",1,[[21,1,-5,[0,"13w14Ct/JSWJxY/RvoLvYT"],[0],[8,true,true],1]],[1,"b75XV88aJQD5RLgnIqUMLS",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,2,0,0,2,0,5,1,5],[0,0,0],[-1,3,3],[220,84,84]],[[[22,"heroplance",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0,"specularIntensity":0},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[221,2]],[[[22,"bullet3",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"occlusion":0.279,"roughness":0.421,"metallic":0.359,"specularIntensity":0.609},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[222,2]],[[[22,"NPC2",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_OUTLINE_PASS":true},{"USE_BASE_COLOR_MAP":true,"BASE_COLOR_MAP_AS_SHADE_MAP_1":true,"BASE_COLOR_MAP_AS_SHADE_MAP_2":true},{},{}],[[[{"lineWidth":50},"baseColor",8,[4,4278190335]],[{"baseStep":0.5,"baseFeather":1,"shadeStep":10,"shadeFeather":10},"mainColor",8,[4,4294967295],"specular",8,[4,16777215],"mainTexture",6,0],{},{}],11,11,0,0]]],0,0,[0,0],[8,7],[85,25]],[[[22,"weapons3_2",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"occlusion":0.279,"roughness":0.421,"metallic":0.359,"specularIntensity":0.609},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[223,2]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,2,2,0,0","mipmaps":["400uaqNhFB074JHPn5k2wT"]}],[2],0,[],[],[]],[[{"name":"numimage","rect":{"x":4,"y":10,"width":840,"height":327},"offset":{"x":-8.5,"y":63},"originalSize":{"width":865,"height":473},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-420,-163.5,0,420,-163.5,0,-420,163.5,0,420,163.5,0],"indexes":[0,1,2,2,1,3],"uv":[4,463,844,463,4,136,844,136],"nuv":[0.004624277456647399,0.28752642706131076,0.9757225433526011,0.28752642706131076,0.004624277456647399,0.9788583509513742,0.9757225433526011,0.9788583509513742],"minPos":{"x":-420,"y":-163.5,"z":0},"maxPos":{"x":420,"y":163.5,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[224]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["41RHwKl6RGFaSZL1gITJA9"]}],[2],0,[],[],[]],[[[10,".bin",1596453648,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":16176,"length":2244,"count":561,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":16176,"count":337,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-1.3682546615600586,-0.2050744891166687,-0.06115904822945595],"maxPosition",8,[1,0.526694655418396,0.3030645251274109,0.056280750781297684]]],-1],0,0,[],[],[]],[[{"name":"resultbtn2","rect":{"x":877,"y":1057,"width":220,"height":80},"offset":{"x":0,"y":-10},"originalSize":{"width":220,"height":100},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"mask","rect":{"x":1007,"y":1709,"width":120,"height":120},"offset":{"x":0,"y":0},"originalSize":{"width":120,"height":120},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"homebg10","rect":{"x":361,"y":845,"width":190,"height":240},"offset":{"x":0,"y":0},"originalSize":{"width":190,"height":240},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[26,"soundmainbgm",".mp3",18.648],-1],0,0,[],[],[]],[[[9,"TipsRemind"],[163,"TipsRemind",33554432,[-5],[[3,-2,[0,"d0oK6R6RpERpBjPkll3xeX"],[5,500,80]],[36,1,0,-3,[0,"c2wgOhgb1IOJiinkBuov0m"],0],[100,0,-4,[0,"cdraGL3T1L9otRIMRD5SV3"]]],[1,"5ag2md5SBHeZla+N1ZSlhd",null,null,null,-1,0],[1,0,100,0],[1,0.3,0.3,0.3]],[17,"remindText",33554432,1,[[3,-6,[0,"6bcBL6AyFIAoDl8dwIN2vD"],[5,45.58,50.4]],[188,20,20,true,-7,[0,"1185VmpWBLM5oSf3jvzYKf"]]],[1,"d1fHi3dHpJ6p9DKfb3/oJm",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,0,2,0,0,2,0,5,1,7],[0],[1],[17]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["45Pz+eoOtOyI/1EHnuEvbw"]}],[2],0,[],[],[]],[[[9,"bullet2"],[34,"bullet2",[-7,-8,-9],[[125,false,-5,[0,"abApgMunBGkJKBV/KTvbDt"]],[128,true,-6,[0,"6dnnPIEalBGaHq5KwNfMsr"],5]],[118,"18oOKgO79NR7Aj6gbUlZl6",null,-4,0,[[129,["_trailModule","_particleSystem"],-3,[31,["7aXvGSFOJHHpuYAOAOxQEp"]],-2,[31,["7aXvGSFOJHHpuYAOAOxQEp"]]]],[-1]]],[31,["7aXvGSFOJHHpuYAOAOxQEp"]],[31,["bdU2D0f+JKlq5T5UIZI8T7"]],[43,0,{},1,[44,"bdU2D0f+JKlq5T5UIZI8T7",null,null,-10,[50,"dbU4O/jNhEq67Z0BCvgzMQ",1,[[14,"bulletrotate",["_name"],3],[11,["_lpos"],3,[1,0,0,0.024]],[11,["_lrot"],3,[3,0,0,0,1]],[11,["_euler"],3,[1,0,0,0]],[14,true,["loop"],2],[11,["_lscale"],3,[1,1.4,1.4,2]],[14,1,["_simulationSpace"],2],[14,-6.283185307179586,["_rotationOvertimeModule","z","constant"],2],[14,1,["scaleSpace"],2],[14,1,["renderer","_alignSpace"],2],[14,true,["_rotationOvertimeModule","_separateAxes"],2],[14,4,["duration"],2],[14,2,["simulationSpeed"],2],[14,true,["_active"],3],[14,2,["startLifetime","constantMax"],2]]],4]],[109,"bullet",1,[-12,-13],[[21,1,-11,[0,"8d1czb9PRCWLsgTLrp3gB0"],[2],[8,true,true],3]],[1,"e4qT99MHNCjqIir33Jj7/u",null,null,null,1,0]],[82,"Trailing",5,[-14],[1,"7b4qVbS4NGJ7Q7H9p9qRHg",null,null,null,1,0]],[87,"New Particle<ParticleSystem>",4,1,1,6,[0,"e6e1DRmdNPyo2cGtROqIEy"],[[null,0],0,6],[12],[2],[2],[2],[2],[2],[2],[2],[2],[5,4],[2],[2],[2],[[55,[5,2]]],[46,true,[45,1,[52,[[23,255,0.4620535714285714],[23,0,1]]]]],[88,true,1,0.0001,0,8,0,0,[2],[1,-0.01,0,-0.45],[1,1,1,2]],[54,[2],[2],[2],[2]],[89,0,[2],[2],[2],[5,1]],[49,[2],[2],[2]],[40,[2],[2],[2],[2]],[75,true,[2],[2],[57,1,360,[25,[0,1],[[58,2],[13,2,1]]]]],[61,[2],[2]],[41],[90,true,0.0001,false,[5,0.05],[5,0.03],[12],[12],-15],[91]],[82,"Trailing",5,[-16],[1,"c1qKoF4mlF/LRqgJJI2FU5",null,null,null,1,0]],[87,"New Particle<ParticleSystem>",4,1,1,8,[0,"689wG0LGFEk4n/uWemi5/i"],[[null,1],0,6],[12],[2],[2],[2],[2],[2],[2],[2],[2],[5,4],[2],[2],[2],[[55,[5,2]]],[46,true,[45,1,[52,[[23,255,0.4620535714285714],[23,0,1]]]]],[88,true,1,0.0001,0,8,0,0,[2],[1,0.01,0,-0.45],[1,1,1,2]],[54,[2],[2],[2],[2]],[89,0,[2],[2],[2],[5,1]],[49,[2],[2],[2]],[40,[2],[2],[2],[2]],[75,true,[2],[2],[57,1,360,[25,[0,1],[[58,2],[13,2,1]]]]],[61,[2],[2]],[41],[90,true,0.0001,false,[5,0.05],[5,0.03],[12],[12],-17],[91]],[115,"bulletCamera",false,1,[[130,"Camera<CameraComponent>",1822425087,-18,[0,"c8Mnf5/dhDzKQ6qlVDJL9i"],[4,4286073907]]],[1,"358WqrrQBEsJh4cibxMNKI",null,null,null,1,0],[1,0.11,0.26,0.997],[3,-0.06969649700697517,0.04913469766453946,-0.0018968238840275076,0.9963556502823296],[1,-7.973,5.604,-0.609]]],0,[0,-1,4,0,14,4,0,21,4,0,4,1,0,0,1,0,0,1,0,-1,5,0,-2,4,0,-3,10,0,4,4,0,0,5,0,-1,6,0,-2,8,0,-1,7,0,12,7,0,-1,9,0,12,9,0,0,10,0,5,1,18],[0,0,0,0,0,0],[-2,-2,-1,3,13,3],[23,23,225,86,46,86]],[[[22,"weapons4_1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"occlusion":0.279,"roughness":0.421,"metallic":0.359,"specularIntensity":0.609},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[226,2]],[[{"name":"homebg9","rect":{"x":581,"y":1963,"width":120,"height":50},"offset":{"x":0,"y":0},"originalSize":{"width":120,"height":50},"rotated":false,"capInsets":[54,0,54,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"resultbg12","rect":{"x":345,"y":844,"width":134,"height":14},"offset":{"x":0,"y":0},"originalSize":{"width":134,"height":14},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"resultbg10","rect":{"x":623,"y":624,"width":119,"height":15},"offset":{"x":0,"y":0},"originalSize":{"width":119,"height":15},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[47,"broken2",1,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainTexture",6,0]],11]]],0,0,[0,0],[8,7],[69,15]],[[[26,"soundbreath",".mp3",2.977959],-1],0,0,[],[],[]],[[[9,"broken"],[97,"broken",[-2],[1,"437aiUVSVPFasLmUhR49Sr",null,null,null,-1,0]],[143,1,false,1,[0,"78NuGFOUNLCZSWViTZQ9Rz"],[[0,null],6,0],[12],[32,3,0.5,0.8],[2],[2],[32,3,2,3],[2],[2],[2],[2],[32,3,0.3,0.6],[5,1],[2],[2],[[55,[5,30]]],[46,true,[45,1,[145,[[150,0.6227678571428571]],[[23,255,0.7366071428571429],[23,0,1]]]]],[121,true,3,0.5,[5,1]],[54,[2],[2],[2],[2]],[59,[2],[2],[2],[5,1]],[49,[2],[2],[2]],[40,[2],[2],[2],[2]],[67,[2],[2],[2]],[113,true,4,4,1,[39,1,[25,[0,1],[[13,2,1],[13,2,1]]]],[144,3,15,16]],[41],[60,[5,1],[2],[12],[12],-3],[68,1,2]]],0,[0,4,1,0,-1,2,0,12,2,0,5,1,3],[0,0,0],[-1,15,16],[87,87,88]],[[[47,"bomb",1,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true,"USE_ALBEDO_MAP":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[227,2]],[[[9,"weapon2"],[71,"weapon2",[-2,-3],[1,"cfuzXHjaxXEK1mgv5V781s",null,null,null,-1,0]],[27,"weapon",1,[[21,1,-4,[0,"ab+FKMMrJawaM9zXp+kLUp"],[0],[8,true,true],1]],[1,"997EcI88tZw6ZK/dajE9v5",null,null,null,1,0]],[72,"bulletstart",1,[[92,"Cube<ModelComponent>",false,1,[null],-5,[0,"22BWqb2pBG9aW1jsaHKewU"],[8,true,true],2]],[1,"9355/zBjdGTIOfAXmuJaAt",null,null,null,1,0],[1,-1.414,0.027,0]]],0,[0,4,1,0,-1,2,0,-2,3,0,0,2,0,0,3,0,5,1,5],[0,0,0],[-1,3,3],[27,228,22]],[[[26,"soundKillTime",".mp3",5.364],-1],0,0,[],[],[]],[[{"name":"weapon5","rect":{"x":964,"y":1019,"width":150,"height":50},"offset":{"x":0,"y":0},"originalSize":{"width":150,"height":50},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"weapon2","rect":{"x":959,"y":1071,"width":150,"height":50},"offset":{"x":0,"y":0},"originalSize":{"width":150,"height":50},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"weapon4"],[71,"weapon4",[-2,-3],[1,"0aOylOnIVSuamQZ+sGH8cM",null,null,null,-1,0]],[48,"weapon",1,[-4,-5,-6],[1,"a11UFiGANUpJnwR3MwZo3m",null,null,null,1,0]],[27,"weapon_1",2,[[21,1,-7,[0,"10jmH4iWdag4j6J0Qjzngo"],[0],[8,true,true],1]],[1,"00h/u5ZAdfP6v/bQHfDXC3",null,null,null,1,0]],[27,"weapon_2",2,[[21,1,-8,[0,"4czsNtWP5bVKm0xvhL1cIB"],[2],[8,true,true],3]],[1,"caQHQfptVZVISmL3J/W5oS",null,null,null,1,0]],[27,"weapon_3",2,[[21,1,-9,[0,"8cbAyI8T5ajaTun9VX4XJ5"],[4],[8,true,true],5]],[1,"e4eFhNG9NfWqEiv+QQzI9G",null,null,null,1,0]],[72,"bulletstart",1,[[92,"Cube<ModelComponent>",false,1,[null],-10,[0,"03BwII2/FAib+Ydg/O8GM+"],[8,true,true],6]],[1,"99RdzpfnxFAJMuFDuAzU8A",null,null,null,1,0],[1,-1.306,0.135,0]]],0,[0,4,1,0,-1,2,0,-2,6,0,-1,3,0,-2,4,0,-3,5,0,0,3,0,0,4,0,0,5,0,0,6,0,5,1,10],[0,0,0,0,0,0,0],[-1,3,-1,3,-1,3,3],[229,230,89,231,89,232,22]],[[{"name":"leader4","rect":{"x":1125,"y":1,"width":307,"height":19},"offset":{"x":0,"y":0},"originalSize":{"width":307,"height":19},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"homebg6","rect":{"x":1,"y":712,"width":356,"height":130},"offset":{"x":0,"y":0},"originalSize":{"width":356,"height":130},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"homebg7","rect":{"x":1085,"y":635,"width":60,"height":60},"offset":{"x":0,"y":0},"originalSize":{"width":60,"height":60},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"hero2"],[107,"hero2",[-2],[85,"8enAhkha5LVpp79fLbYOch",null,null,[],-1,0],[1,-0.5,0,1.923],[3,0,-0.17364817766693033,0,0.984807753012208],[1,0,-20,0]],[108,"role",1,[-5,-6],[[69,true,false,-4,[0,"83/xpvDvFC9bXFVSx0xLdb"],[12,13,14,15,16,17,18,19],[[70,"group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm/Bip001 R Hand",-3]],20]],[1,"2fHTyq/BhM15XrGApYKwaM",null,null,null,1,0],[3,0,1,0,6.123233995736766e-17],[1,0,180,0]],[48,"group1",2,[-7,-8,-9,-10,-11],[1,"ba2ImJpdZDeqh2gA+g0kbA",null,null,null,1,0]],[62,"Bip001 Pelvis",[-12,-13,-14],[1,"c4qKnBVw5BIK9HTU5TlMkA",null,null,null,1,0],[3,-0.49999999254917427,-0.49999999254917427,-0.49999930709576956,0.5000007078049009],[1,-89.99991974527727,-89.99991974527727,-0.0000017074910602964197]],[4,"Bip001 Spine",4,[-15,-16,-17],[1,"2fDT6zLJBPOb+vcMrwZyie",null,null,null,1,0],[1,0.06345447897911072,-0.00018557309522293508,8.825598030171022e-8],[3,-0.0000020895975280582397,-7.029299899061134e-7,0.013839598922637322,0.9999042281622775],[1,-0.00023840385348735112,-0.00007725782883960567,1.5859518471693235]],[63,"Bip001",3,[[[28,"Bip001 Footsteps",-18,[1,"323v1lSclIBqjWu9iv9Ic4",null,null,null,1,0],[1,2.2204459996194763e-18,-4.235164641608193e-24,-0.48366937041282654],[3,-5.855533932713747e-36,8.721625300910364e-33,0.7071063043492204,0.7071072580235531],[1,0,-9.489292531882443e-34,90]],4],4,1],[1,"3f057Vgn9HD6/6hQXevBaE",null,null,null,1,0],[1,1.5575574163761985e-9,1.223509669303894,-0.03563276305794716],[3,-0.5000003576277408,-0.49999964237200345,-0.49999964237200345,0.5000003576277408],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90,-89.99991803772996,0]],[19,"head_D",3,[[18,1,-19,[0,"82nJxnSIdMGblseHWb6Rup"],[0],[8,true,true],2,1,2]],[1,"9b3TnMpe9EZIHfWiO+j03T",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"Body_C",3,[[18,1,-20,[0,"45JHdReltJV5OuVibrvrxw"],[3],[8,true,true],2,4,5]],[1,"72gwm1ZzlK6o8gmWP1rQjE",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"extra_equip_B",3,[[18,1,-21,[0,"4fCo28tClEIZdzMUED+/HY"],[6],[8,true,true],2,7,8]],[1,"5b5Jnl/vFKm6w13JOr7Qm+",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[4,"Bip001 Neck",5,[-22],[1,"29S8jCu0BHg6hQ6F0vwn+2",null,null,null,1,0],[1,0.24925068020820618,0.002057993318885565,2.225801765121105e-9],[3,-2.5382543063059532e-14,-3.4013390465250123e-7,0.12263263619889618,0.9924521331221942],[1,0.00000492800718908746,-0.00003988183168096121,14.088127942062796]],[15,"Bip001 Head",10,[[38,"Bip001 HeadNub",-23,[1,"576hoA519KCYD+yXdPp0/S",null,null,null,1,0],[1,0.14218726754188538,0,-1.3552526853146218e-22]]],[1,"75Mky6ibtBbqCBcYFq8pzx",null,null,null,1,0],[1,0.04924758896231651,1.907348590179936e-8,0],[3,-3.4882480159419137e-13,3.7819707678111146e-7,-0.13635667822804998,0.9906598085631964],[1,0.000006137648761566025,0.00004459159608868198,-15.674154664616246]],[4,"Bip001 L Clavicle",5,[-24],[1,"b5GCxL+kpLF5f66U0qt0KA",null,null,null,1,0],[1,0.22444087266921997,0.000241467947489582,0.05013936385512352],[3,0.6646332882242292,-0.041312624648330666,0.7451421777055485,-0.036317960200814375],[1,179.23387337832077,-96.57884308222117,-6.259954481230718]],[4,"Bip001 L UpperArm",12,[-25],[1,"c5hj0xih9Ay5QMO8dAKI4S",null,null,null,1,0],[1,0.09830138832330704,-2.38418573772492e-9,1.4210854397564648e-16],[3,0.04255099175736575,-0.0012785928417488632,-0.040795269909396685,0.9982602487597254],[1,4.883685295492153,0.05283206706572578,-4.678090947669645]],[15,"Bip001 L Forearm",13,[[28,"Bip001 L Hand",-26,[1,"37/DLILr5Je4Py9eMdZ/m+",null,null,null,1,0],[1,0.13451942801475525,0,0],[3,-0.7068251826029146,1.3165644977296043e-9,-1.3176133253999859e-9,0.7073882676708432],[1,-89.95437407813083,0,-2.1344341156289847e-7]]],[1,"2eLMPCD3FJtrY0xT5SGvPQ",null,null,null,1,0],[1,0.159247487783432,-9.53674295089968e-9,-7.629394360719743e-8],[3,-1.3211275627375078e-17,1.1242273068600845e-17,-0.0615115136775642,0.998106373932706],[1,-1.4427079470210262e-15,1.2018022123098817e-15,-7.053152824002574]],[4,"Bip001 R Clavicle",5,[-27],[1,"d61xyX+IhFaaYRo1HtOdaj",null,null,null,1,0],[1,0.22444087266921997,0.0002417469077045098,-0.05013935640454292],[3,-0.6646333971699345,0.04131056392481429,0.7451422854079972,-0.036316100720105285],[1,-179.23390833343123,96.57883794429625,-6.259637834225308]],[4,"Bip001 R UpperArm",15,[-28],[1,"c20VsC8w5CQrQGyjpFGbwQ",null,null,null,1,0],[1,0.09830138087272644,2.38418573772492e-9,1.4210854397564648e-16],[3,-0.042550999201322014,0.0012785855073846203,-0.04079526617775551,0.9982602486043184],[1,-4.883686184053137,-0.05283292551134381,-4.678090483855789]],[4,"Bip001 R Forearm",16,[-29],[1,"10TJLSuRhCCqdwv3WUOcZX",null,null,null,1,0],[1,0.15924744307994843,0,7.629394360719743e-8],[3,1.4171622405368395e-17,4.3406712685104826e-18,-0.0615115136775642,0.998106373932706],[1,1.6640617539843948e-15,6.009011272576598e-16,-7.053152824002574]],[15,"Bip001 R Hand",17,[[28,"WeaponContainer",-30,[1,"1cmy0ZIoxB5oX66bD2nXxM",null,null,null,1,0],[1,0.08682487159967422,0.009681015275418758,0.058159179985523224],[3,0.07951347495774536,0.6636559934753525,0.7431398598259328,0.03132855506211496],[1,-96.80771665888834,-175.55522297722828,8.748770928418296]]],[1,"0aKzZnOtZJZawkHTtD18T5",null,null,null,1,0],[1,0.13451938331127167,1.776356799695581e-17,-7.629394360719743e-8],[3,0.7068252124052276,2.306085595844923e-9,-2.9625327292760735e-9,0.7073882378922517],[1,89.95437890588063,4.268868636040652e-7,-5.336086190280782e-8]],[4,"Bip001 L Thigh",4,[-31],[1,"dbk6Dwo/pNvYJjER2YYxeF",null,null,null,1,0],[1,-1.1444091541079615e-7,1.2516974834397843e-7,0.07466395199298859],[3,0.018307237243421235,0.999761299171899,-0.0005939877685746522,-0.011909530685995871],[1,0.04309417898204713,-178.63579635154264,2.09863395998742]],[4,"Bip001 L Calf",19,[-32],[1,"fbLCLeXS5O2oay7+MxoXsJ",null,null,null,1,0],[1,0.23993217945098877,0,0],[3,-1.9135070445383419e-19,-2.632967114808625e-18,-0.05198767289971633,0.9986477266115776],[1,-3.778728342000386e-17,-3.040914943161604e-16,-5.960035262353657]],[4,"Bip001 L Foot",20,[-33],[1,"e9QHdYNQ5PFZQzdZvOeFUb",null,null,null,1,0],[1,0.16850009560585022,4.440891999238953e-18,9.53674295089968e-9],[3,0.00002668103463277201,-0.011924974547102866,0.03369276949931899,0.9993610916748956],[1,0.04920839647513726,-1.3689689338390039,3.8613259886719686]],[15,"Bip001 L Toe0",21,[[51,"Bip001 L Toe0Nub",-34,[1,"29w+nqkqdOg4zYBIIO7u8e",null,null,null,1,0],[1,0.0584682933986187,-2.98023217215615e-10,0],[3,-5.910146639665284e-14,1.776806190378769e-15,1,-6.123234262925839e-17],[1,-1,-0.9999999403953552,-0.9999999403953552],[1,-179.9999999999998,179.99999999999324,-7.0167096047230345e-15]]],[1,"99wqwJGmZJ3ZHgjWpNC21Q",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,1.5454350301197766e-8,1.5454268588785198e-8,0.7071067513842251,0.7071068109888683],[1,0,0.0000025044845661635244,90]],[4,"Bip001 R Thigh",4,[-35],[1,"4aXV3zk+BMwI4/A4IXfcIM",null,null,null,1,0],[1,1.1444091541079615e-7,-8.225440950582197e-8,-0.07466395199298859],[3,0.018307220172854872,0.9997612824196819,0.0005926282604946994,0.01191103084710343],[1,-0.042935196277668404,178.6356214928802,2.09863021316722]],[4,"Bip001 R Calf",23,[-36],[1,"f19rs2CRhGBKttcNgNeQGy",null,null,null,1,0],[1,0.23993214964866638,0,0],[3,1.3034441181491747e-20,2.503826801162521e-19,-0.051987676614938125,0.9986477264181702],[1,2.9994474418916213e-18,2.8886738744973417e-17,-5.9600356886632015]],[4,"Bip001 R Foot",24,[-37],[1,"e43s1Wn7dBMLQDIVhmlorj",null,null,null,1,0],[1,0.16850009560585022,0,9.53674295089968e-9],[3,-0.000026684054124251007,0.011925061146287096,0.033692773185577625,0.9993610905171781],[1,-0.04920908323064725,1.3689788872170112,3.861326402895733]],[15,"Bip001 R Toe0",25,[[38,"Bip001 R Toe0Nub",-38,[1,"e2CVjVCBBG7YWsx+LG6J/f",null,null,null,1,0],[1,0.0584682859480381,0,1.776356799695581e-17]]],[1,"73faWc4a1N6J1JDWEJsMQB",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,-1.5454308319985075e-8,-1.5454308319985075e-8,0.7071067811865474,0.7071067811865474],[1,0,-0.0000025044778683729144,90]],[19,"Legs_C",3,[[18,1,-39,[0,"64Cu2L+SJLbY8VDIC42mlz"],[9],[8,true,true],2,10,11]],[1,"40LvatLotAxIc/DxdNI3oz",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[51,"Bip001 R Hand Socket",2,[1,"28S/0s5zBJWqOaBLCN8An/",null,null,null,1,0],[1,-1.1131373801939857,1.838145354003317,-0.02885021111468119],[3,0.048865442948463636,-0.04720239446017907,0.9958501437579962,-0.060552403516946525],[1,2.540000116945136,2.5400002612904107,2.5400001129065592],[1,174.9057677591496,-174.70201326474557,-7.19319336926635]]],0,[0,4,1,0,-1,2,0,14,28,0,0,2,0,-1,3,0,-2,28,0,-1,7,0,-2,8,0,-3,9,0,-4,6,0,-5,27,0,-1,5,0,-2,19,0,-3,23,0,-1,10,0,-2,12,0,-3,15,0,6,6,0,0,7,0,0,8,0,0,9,0,-1,11,0,6,11,0,-1,13,0,-1,14,0,6,14,0,-1,16,0,-1,17,0,-1,18,0,6,18,0,-1,20,0,-1,21,0,-1,22,0,6,22,0,-1,24,0,-1,25,0,-1,26,0,6,26,0,0,27,0,5,1,4,6,6,39],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,3,10,-1,3,10,-1,3,10,-1,3,10,-1,-2,-3,-4,-5,-6,-7,-8,17],[3,66,67,3,61,62,3,63,64,3,44,45,9,10,11,5,12,6,13,14,6]],[[{"name":"shopbg4","rect":{"x":333,"y":990,"width":218,"height":8},"offset":{"x":0,"y":0},"originalSize":{"width":218,"height":8},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[10,".bin",2738060104,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":4848,"length":708,"count":177,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":4848,"count":101,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-4.834957122802734,-0.0026888037100434303,-3.5986557006835938],"maxPosition",8,[1,4.834953308105469,5.026294708251953,3.5986557006835938]]],-1],0,0,[],[],[]],[[[26,"soundcoinsfly",".mp3",1.17551],-1],0,0,[],[],[]],[[{"name":"homebg11","rect":{"x":228,"y":1401,"width":98,"height":98},"offset":{"x":0,"y":0},"originalSize":{"width":98,"height":98},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"box3"],[34,"box3",[-5],[[114,-2,[0,"e0ILKX7mtJYZZRN8bKC2WT"],[1,0.955,1,1.186]],[126,false,-3,[0,"49SjDbgBFOTbDXAYvdOL78"]],[205,true,-4,[0,"11r9t9R6xGR7quiftn6MY3"],[1,0.955,1,1.186]]],[1,"b6b6ZR5FBRSrKiTcroJuiT",null,null,null,-1,0]],[27,"box3",1,[[21,1,-6,[0,"07DpkYTFlU/Kppb16p50p/"],[0],[8,true,true],1]],[1,"c8lnu2yRxYYLMvCq4DVl/k",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,0,2,0,5,1,6],[0,0],[-1,3],[233,234]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["54LiHPl5dAY7e4zOALlVr7"]}],[2],0,[],[],[]],[[{"name":"moregame4","rect":{"x":203,"y":1695,"width":120,"height":140},"offset":{"x":0,"y":0},"originalSize":{"width":120,"height":140},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["56XEwsdjtOr472bU7AFQ7m"]}],[2],0,[],[],[]],[[{"name":"shopbtn1","rect":{"x":5,"y":7,"width":226,"height":96},"offset":{"x":0,"y":-2},"originalSize":{"width":236,"height":106},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-113,-48,0,113,-48,0,-113,48,0,113,48,0],"indexes":[0,1,2,2,1,3],"uv":[5,99,231,99,5,3,231,3],"nuv":[0.0211864406779661,0.02830188679245283,0.9788135593220338,0.02830188679245283,0.0211864406779661,0.9339622641509434,0.9788135593220338,0.9339622641509434],"minPos":{"x":-113,"y":-48,"z":0},"maxPos":{"x":113,"y":48,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[235]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["57fDHxQVRPPJSZAjjDjInv"]}],[2],0,[],[],[]],[[{"name":"resultbg20","rect":{"x":1009,"y":765,"width":42,"height":40},"offset":{"x":0.5,"y":-1},"originalSize":{"width":49,"height":42},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"explode"],[97,"explode",[-2],[1,"e59JmqWq9CDbvGzt2blrad",null,null,null,-1,0]],[143,1,false,1,[0,"e2jsuswMhGd4KQfgGFTSdh"],[[0,null],6,0],[12],[5,12],[2],[2],[2],[2],[2],[2],[2],[5,1],[2],[2],[2],[[55,[5,1]]],[199,[12]],[146,true,3,0.01,[5,1],[1,0,5,0]],[54,[2],[2],[2],[2]],[59,[2],[2],[2],[5,1]],[49,[2],[2],[2]],[40,[2],[2],[2],[2]],[67,[2],[2],[2]],[202,true,12,7,1,1,[39,1,[25,[0,1],[[13,2,0.9962962962962963],[13,2,1]]]],[57,1,84,[25,[0,1],[[58,2],[13,2,1]]]]],[41],[60,[5,1],[2],[12],[12],-3],[68,1,2]]],0,[0,4,1,0,-1,2,0,12,2,0,5,1,3],[0,0,0],[-1,15,16],[90,90,72]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["59D2nxEcpEWqTIkLTVTGAy"]}],[2],0,[],[],[]],[[{"name":"resultbg1","rect":{"x":1,"y":895,"width":330,"height":282},"offset":{"x":0,"y":0},"originalSize":{"width":330,"height":282},"rotated":false,"capInsets":[0,168,0,64],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"bullet3"],[34,"bullet3",[-7,-8,-9],[[125,false,-5,[0,"abApgMunBGkJKBV/KTvbDt"]],[128,true,-6,[0,"6dnnPIEalBGaHq5KwNfMsr"],5]],[118,"18oOKgO79NR7Aj6gbUlZl6",null,-4,0,[[129,["_trailModule","_particleSystem"],-3,[31,["7aXvGSFOJHHpuYAOAOxQEp"]],-2,[31,["7aXvGSFOJHHpuYAOAOxQEp"]]]],[-1]]],[31,["7aXvGSFOJHHpuYAOAOxQEp"]],[31,["bdU2D0f+JKlq5T5UIZI8T7"]],[43,0,{},1,[44,"bdU2D0f+JKlq5T5UIZI8T7",null,null,-10,[50,"dbU4O/jNhEq67Z0BCvgzMQ",1,[[14,"bulletrotate",["_name"],3],[11,["_lpos"],3,[1,0,0,0.024]],[11,["_lrot"],3,[3,0,0,0,1]],[11,["_euler"],3,[1,0,0,0]],[14,true,["loop"],2],[11,["_lscale"],3,[1,1.4,1.4,2]],[14,1,["_simulationSpace"],2],[14,-6.283185307179586,["_rotationOvertimeModule","z","constant"],2],[14,1,["scaleSpace"],2],[14,1,["renderer","_alignSpace"],2],[14,true,["_rotationOvertimeModule","_separateAxes"],2],[14,4,["duration"],2],[14,2,["simulationSpeed"],2],[14,true,["_active"],3],[14,2,["startLifetime","constantMax"],2]]],4]],[109,"bullet",1,[-12,-13],[[21,1,-11,[0,"8d1czb9PRCWLsgTLrp3gB0"],[2],[8,true,true],3]],[1,"e4qT99MHNCjqIir33Jj7/u",null,null,null,1,0]],[82,"Trailing",5,[-14],[1,"7b4qVbS4NGJ7Q7H9p9qRHg",null,null,null,1,0]],[87,"New Particle<ParticleSystem>",4,1,1,6,[0,"e6e1DRmdNPyo2cGtROqIEy"],[[null,0],0,6],[12],[2],[2],[2],[2],[2],[2],[2],[2],[5,4],[2],[2],[2],[[55,[5,2]]],[46,true,[45,1,[52,[[23,255,0.4620535714285714],[23,0,1]]]]],[88,true,1,0.0001,0,8,0,0,[2],[1,-0.01,0,-0.45],[1,1,1,2]],[54,[2],[2],[2],[2]],[89,0,[2],[2],[2],[5,1]],[49,[2],[2],[2]],[40,[2],[2],[2],[2]],[75,true,[2],[2],[57,1,360,[25,[0,1],[[58,2],[13,2,1]]]]],[61,[2],[2]],[41],[90,true,0.0001,false,[5,0.05],[5,0.03],[12],[12],-15],[91]],[82,"Trailing",5,[-16],[1,"c1qKoF4mlF/LRqgJJI2FU5",null,null,null,1,0]],[87,"New Particle<ParticleSystem>",4,1,1,8,[0,"689wG0LGFEk4n/uWemi5/i"],[[null,1],0,6],[12],[2],[2],[2],[2],[2],[2],[2],[2],[5,4],[2],[2],[2],[[55,[5,2]]],[46,true,[45,1,[52,[[23,255,0.4620535714285714],[23,0,1]]]]],[88,true,1,0.0001,0,8,0,0,[2],[1,0.01,0,-0.45],[1,1,1,2]],[54,[2],[2],[2],[2]],[89,0,[2],[2],[2],[5,1]],[49,[2],[2],[2]],[40,[2],[2],[2],[2]],[75,true,[2],[2],[57,1,360,[25,[0,1],[[58,2],[13,2,1]]]]],[61,[2],[2]],[41],[90,true,0.0001,false,[5,0.05],[5,0.03],[12],[12],-17],[91]],[115,"bulletCamera",false,1,[[130,"Camera<CameraComponent>",1822425087,-18,[0,"1ecq9wy2lK267nPQdR2+QQ"],[4,4286073907]]],[1,"4bHGMPsAhMbpB2200op+/U",null,null,null,1,0],[1,0.11,0.26,0.997],[3,-0.06969649700697517,0.04913469766453946,-0.0018968238840275076,0.9963556502823296],[1,-7.973,5.604,-0.609]]],0,[0,-1,4,0,14,4,0,21,4,0,4,1,0,0,1,0,0,1,0,-1,5,0,-2,4,0,-3,10,0,4,4,0,0,5,0,-1,6,0,-2,8,0,-1,7,0,12,7,0,-1,9,0,12,9,0,0,10,0,5,1,18],[0,0,0,0,0,0],[-2,-2,-1,3,13,3],[23,23,236,91,46,91]],[[{"name":"shopbg6","rect":{"x":627,"y":1347,"width":200,"height":200},"offset":{"x":0,"y":0},"originalSize":{"width":200,"height":200},"rotated":false,"capInsets":[0,30,0,30],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"HitNum"],[42,"HitNum",33554432,[-3],[[78,-2,[0,"06IZk3HWVIRYJXH+KlFtXQ"]]],[1,"e2oVCS6F5Cvayaba2wHKhi",null,null,null,-1,0]],[17,"text",33554432,1,[[3,-4,[0,"e9bAu7bCJOXLQuhpDhXowo"],[5,56.55,40]],[142,"123",40,false,-5,[0,"02eTI6vPBEUaKrAjWrtSvU"],0],[37,-6,[0,"f1e+tOX8BK7I36tNVCdMDz"]]],[1,"5aQCn/3IVPs4MRkeXE/6mL",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,-1,2,0,0,2,0,0,2,0,0,2,0,5,1,6],[0],[9],[237]],[[[22,"barrel2",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_OUTLINE_PASS":true,"USE_INSTANCING":true},{"USE_INSTANCING":true,"USE_BASE_COLOR_MAP":true,"BASE_COLOR_MAP_AS_SHADE_MAP_1":true,"BASE_COLOR_MAP_AS_SHADE_MAP_2":true},{},{}],[[[{"lineWidth":50},"baseColor",8,[4,4278190335]],[{"baseStep":0.3,"baseFeather":1,"shadeStep":10,"shadeFeather":10,"shadowCover":1},"mainColor",8,[4,4294967295],"specular",8,[4,16777215],"mainTexture",6,0],{},{}],11,11,0,0]]],0,0,[0,0],[8,7],[238,25]],[[[10,".bin",1764584878,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":8352,"length":1272,"count":318,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":8352,"count":174,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-1.0936636924743652,-0.6713810563087463,-1.790165662765503],"maxPosition",8,[1,1.0936636924743652,0.6713815331459045,1.7901660203933716]]],-1],0,0,[],[],[]],[[{"name":"weapon6","rect":{"x":959,"y":1123,"width":150,"height":50},"offset":{"x":0,"y":0},"originalSize":{"width":150,"height":50},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"gamebg6","rect":{"x":585,"y":1280,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"shopbg9","rect":{"x":515,"y":485,"width":99,"height":19},"offset":{"x":0,"y":0},"originalSize":{"width":99,"height":19},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"rolebg4","rect":{"x":329,"y":1835,"width":124,"height":188},"offset":{"x":0,"y":-6},"originalSize":{"width":200,"height":200},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[208,"zip",".zip"],-1],0,0,[],[],[]],[[{"name":"trybg4","rect":{"x":876,"y":1279,"width":226,"height":96},"offset":{"x":0,"y":-2},"originalSize":{"width":236,"height":106},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[154,"../Effect/SpriteStreamer",[{"hash":606741906,"name":"../Effect/SpriteStreamer|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"ARGS","stageFlags":16,"binding":1,"members":[{"name":"colorr","type":16,"count":1},{"name":"width","type":13,"count":1},{"name":"strength","type":13,"count":1},{"name":"speed","type":13,"count":1},{"name":"distancee","type":13,"count":1},{"name":"offset","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]},{"name":"a_uv0","format":21,"location":3,"defines":["USE_TEXTURE"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"tags":{"builtin":"local"},"defines":["USE_TEXTURE"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"ARGS","stageFlags":16,"binding":1,"members":[{"name":"colorr","type":16,"count":1},{"name":"width","type":13,"count":1},{"name":"strength","type":13,"count":1},{"name":"speed","type":13,"count":1},{"name":"distancee","type":13,"count":1},{"name":"offset","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_composite_pack_1","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_composite_pack_2","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_composite_pack_3","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_debug_view_mode;\n  mediump vec4 cc_debug_view_composite_pack_1;\n  mediump vec4 cc_debug_view_composite_pack_2;\n  mediump vec4 cc_debug_view_composite_pack_3;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n  };\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 v_color;\nout vec2 v_uv0;\n#if USE_TEXTURE\n  in vec2 a_uv0;\n#endif\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n    v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  v_uv0 = a_texCoord;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_debug_view_mode;\n  mediump vec4 cc_debug_view_composite_pack_1;\n  mediump vec4 cc_debug_view_composite_pack_2;\n  mediump vec4 cc_debug_view_composite_pack_3;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nin vec4 v_color;\n#if USE_TEXTURE\n  in vec2 v_uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nlayout(std140) uniform ARGS{\n  vec4  colorr;\n  float width;\n  float strength;\n  float speed;\n  float distancee;\n  float offset;\n};\nvec4 frag () {\n  vec4 o = colorr;\n  o *= CCSampleWithAlphaSeparated(cc_spriteTexture, v_uv0);\n  float k = offset;\n  float time_step = -width;\n  time_step += mod(cc_time.x, distancee + 2.0 * width) / speed;\n  if (v_uv0.x >= -v_uv0.y * k + time_step && v_uv0.x <= -v_uv0.y * k + width + time_step ) {\n    o *= strength;\n  }\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp mat4 cc_matViewProj;\n#if USE_LOCAL\n  uniform highp mat4 cc_matWorld;\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 v_color;\nvarying vec2 v_uv0;\n#if USE_TEXTURE\n  attribute vec2 a_uv0;\n#endif\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n    v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  v_uv0 = a_texCoord;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n#endif\nuniform highp vec4 cc_time;\nvarying vec4 v_color;\n#if USE_TEXTURE\n  varying vec2 v_uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\n   uniform vec4 colorr;\n   uniform float width;\n   uniform float strength;\n   uniform float speed;\n   uniform float distancee;\n   uniform float offset;\nvec4 frag () {\n  vec4 o = colorr;\n  o *= CCSampleWithAlphaSeparated(cc_spriteTexture, v_uv0);\n  float k = offset;\n  float time_step = -width;\n  time_step += mod(cc_time.x, distancee + 2.0 * width) / speed;\n  if (v_uv0.x >= -v_uv0.y * k + time_step && v_uv0.x <= -v_uv0.y * k + width + time_step ) {\n    o *= strength;\n  }\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":["USE_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":54,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":51}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"USE_TEXTURE","type":"boolean"},{"name":"USE_PIXEL_ALIGNMENT","type":"boolean"},{"name":"CC_USE_EMBEDDED_ALPHA","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"}]}],[{"passes":[{"program":"../Effect/SpriteStreamer|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"alphaThreshold":{"type":13,"value":[0.5]},"colorr":{"type":16,"value":[1,1,1,1]},"width":{"type":13,"value":[0.1]},"strength":{"type":13,"value":[1.2]},"speed":{"type":13,"value":[1]},"distancee":{"type":13,"value":[1.5]},"offset":{"type":13,"value":[0.5]}}}]}]]],0,0,[],[],[]],[[{"name":"resultbg0","rect":{"x":877,"y":1709,"width":128,"height":128},"offset":{"x":0,"y":0},"originalSize":{"width":128,"height":128},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["62RCP2l25A0YVrpr5UpGl8"]}],[2],0,[],[],[]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["632MXCNvJLJq20NL4UA/6b"]}],[2],0,[],[],[]],[[[22,"weapons4_2",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"occlusion":0.279,"roughness":0.421,"metallic":0.359,"specularIntensity":0.609},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[239,2]],[[{"name":"moregame1","rect":{"x":633,"y":1803,"width":120,"height":140},"offset":{"x":0,"y":0},"originalSize":{"width":120,"height":140},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["67aFIR9lZBCqO5K5+2PAWf"]}],[2],0,[],[],[]],[[[22,"box3",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true,"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0,"specularIntensity":0},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[240,2]],[[[9,"tree2"],[131,"tree2",[[103,"Plane<ModelComponent>",1,-2,[0,"47ar0FYTVOTbUb2ckQJI2N"],[0],[8,true,true],1]],[1,"f3z5l8RoFLxpZQPjk8auKn",null,null,null,-1,0],[3,0.7071067811865475,0,0,0.7071067811865476],[1,90,0,0]]],0,[0,4,1,0,0,1,0,5,1,2],[0,0],[-1,3],[241,26]],[[[9,"hero1"],[107,"hero1",[-2],[85,"8enAhkha5LVpp79fLbYOch",null,null,[],-1,0],[1,-0.5,0,1.923],[3,0,-0.17364817766693033,0,0.984807753012208],[1,0,-20,0]],[108,"role",1,[-5,-6],[[69,true,false,-4,[0,"4dStwkAPFFyoPVGhCizUqJ"],[15,16,17,18,19,20,21,22],[[70,"group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm/Bip001 R Hand",-3]],23]],[1,"dfD0OT1h5EnJdKfLbjgWLi",null,null,null,1,0],[3,0,1,0,6.123233995736766e-17],[1,0,180,0]],[48,"group1",2,[-7,-8,-9,-10,-11,-12],[1,"85wGdCccRDnYg+YM9iQG1J",null,null,null,1,0]],[62,"Bip001 Pelvis",[-13,-14,-15],[1,"d1LWaGbRhC6KrMsyH1jWPj",null,null,null,1,0],[3,-0.49999999254917427,-0.49999999254917427,-0.49999930709576956,0.5000007078049009],[1,-89.99991974527727,-89.99991974527727,-0.0000017074910602964197]],[4,"Bip001 Spine",4,[-16,-17,-18],[1,"adOFA6/TZET55xSN20uZgR",null,null,null,1,0],[1,0.06345447897911072,-0.00018557309522293508,8.825598030171022e-8],[3,-0.0000020895975280582397,-7.029299899061134e-7,0.013839598922637322,0.9999042281622775],[1,-0.00023840385348735112,-0.00007725782883960567,1.5859518471693235]],[63,"Bip001",3,[[[28,"Bip001 Footsteps",-19,[1,"ecHC420PJDqo5TuPSdBrTT",null,null,null,1,0],[1,2.2204459996194763e-18,-4.235164641608193e-24,-0.48366937041282654],[3,-5.855533932713747e-36,8.721625300910364e-33,0.7071063043492204,0.7071072580235531],[1,0,-9.489292531882443e-34,90]],4],4,1],[1,"b9UneCuHVEyJOpqylG1X/0",null,null,null,1,0],[1,1.5575574163761985e-9,1.223509669303894,-0.03563276305794716],[3,-0.5000003576277408,-0.49999964237200345,-0.49999964237200345,0.5000003576277408],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90,-89.99991803772996,0]],[80,"head_J",3,[[18,1,-20,[0,"a03/45qiJIEbSLIRJWLLFU"],[0],[8,true,true],2,1,2]],[1,"batyfiXodDOK+0wJ/goo82",null,null,null,1,0],[1,-2.8940527850020282e-24,2.1829473972320557,0.12012816965579987],[3,1.5454311872698754e-8,-0.7071067215818991,1.545430831998502e-8,0.7071068407911906],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,0.0000025044781562438738,-89.99999034065368,-7.67592264999771e-14]],[19,"extra_scarf_A",3,[[18,1,-21,[0,"ba6R5sA61BIJc9ceHr9LX/"],[3],[8,true,true],2,4,5]],[1,"15oIP0PIRDs5wjNjKeGWrG",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"Legs_A",3,[[18,1,-22,[0,"02fapcQk5EhZfulxJ4YHds"],[6],[8,true,true],2,7,8]],[1,"5c9+r7H7dEvpwDt5do0+Hr",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[4,"Bip001 Neck",5,[-23],[1,"44v9hyRAFPO7Pg3IYUPBeK",null,null,null,1,0],[1,0.24925068020820618,0.002057993318885565,2.225801765121105e-9],[3,-2.5382543063059532e-14,-3.4013390465250123e-7,0.12263263619889618,0.9924521331221942],[1,0.00000492800718908746,-0.00003988183168096121,14.088127942062796]],[15,"Bip001 Head",10,[[38,"Bip001 HeadNub",-24,[1,"b0hNEWJ3hN67sBUlB0gkZO",null,null,null,1,0],[1,0.14218726754188538,0,-1.3552526853146218e-22]]],[1,"10pqJyEZZOip+wNGZ+BbDE",null,null,null,1,0],[1,0.04924758896231651,1.907348590179936e-8,0],[3,-3.4882480159419137e-13,3.7819707678111146e-7,-0.13635667822804998,0.9906598085631964],[1,0.000006137648761566025,0.00004459159608868198,-15.674154664616246]],[4,"Bip001 L Clavicle",5,[-25],[1,"61K/CQguBBcb2HtpHMAR5a",null,null,null,1,0],[1,0.22444087266921997,0.000241467947489582,0.05013936385512352],[3,0.6646332882242292,-0.041312624648330666,0.7451421777055485,-0.036317960200814375],[1,179.23387337832077,-96.57884308222117,-6.259954481230718]],[4,"Bip001 L UpperArm",12,[-26],[1,"52sREHSwFCybhFre9u4mpV",null,null,null,1,0],[1,0.09830138832330704,-2.38418573772492e-9,1.4210854397564648e-16],[3,0.04255099175736575,-0.0012785928417488632,-0.040795269909396685,0.9982602487597254],[1,4.883685295492153,0.05283206706572578,-4.678090947669645]],[15,"Bip001 L Forearm",13,[[28,"Bip001 L Hand",-27,[1,"98UsrixEtKV578dht7LR9l",null,null,null,1,0],[1,0.13451942801475525,0,0],[3,-0.7068251826029146,1.3165644977296043e-9,-1.3176133253999859e-9,0.7073882676708432],[1,-89.95437407813083,0,-2.1344341156289847e-7]]],[1,"ddRm15yn1HBYrgsXdBYhFP",null,null,null,1,0],[1,0.159247487783432,-9.53674295089968e-9,-7.629394360719743e-8],[3,-1.3211275627375078e-17,1.1242273068600845e-17,-0.0615115136775642,0.998106373932706],[1,-1.4427079470210262e-15,1.2018022123098817e-15,-7.053152824002574]],[4,"Bip001 R Clavicle",5,[-28],[1,"43JlhFlXtMyIhJSF0Bb8Ar",null,null,null,1,0],[1,0.22444087266921997,0.0002417469077045098,-0.05013935640454292],[3,-0.6646333971699345,0.04131056392481429,0.7451422854079972,-0.036316100720105285],[1,-179.23390833343123,96.57883794429625,-6.259637834225308]],[4,"Bip001 R UpperArm",15,[-29],[1,"342WLy8VpP0Y6XFT0udu2e",null,null,null,1,0],[1,0.09830138087272644,2.38418573772492e-9,1.4210854397564648e-16],[3,-0.042550999201322014,0.0012785855073846203,-0.04079526617775551,0.9982602486043184],[1,-4.883686184053137,-0.05283292551134381,-4.678090483855789]],[4,"Bip001 R Forearm",16,[-30],[1,"eaAUdjBTJO4Z6Xw7CB0oRJ",null,null,null,1,0],[1,0.15924744307994843,0,7.629394360719743e-8],[3,1.4171622405368395e-17,4.3406712685104826e-18,-0.0615115136775642,0.998106373932706],[1,1.6640617539843948e-15,6.009011272576598e-16,-7.053152824002574]],[15,"Bip001 R Hand",17,[[28,"WeaponContainer",-31,[1,"f9KL0HLwVHNrJ/15WGwI65",null,null,null,1,0],[1,0.08682487159967422,0.009681015275418758,0.058159179985523224],[3,0.07951347495774536,0.6636559934753525,0.7431398598259328,0.03132855506211496],[1,-96.80771665888834,-175.55522297722828,8.748770928418296]]],[1,"e3+9r2lqFF44vuzwIa+xXW",null,null,null,1,0],[1,0.13451938331127167,1.776356799695581e-17,-7.629394360719743e-8],[3,0.7068252124052276,2.306085595844923e-9,-2.9625327292760735e-9,0.7073882378922517],[1,89.95437890588063,4.268868636040652e-7,-5.336086190280782e-8]],[4,"Bip001 L Thigh",4,[-32],[1,"05jnzhDK5IBZYe6qsrh8ut",null,null,null,1,0],[1,-1.1444091541079615e-7,1.2516974834397843e-7,0.07466395199298859],[3,0.018307237243421235,0.999761299171899,-0.0005939877685746522,-0.011909530685995871],[1,0.04309417898204713,-178.63579635154264,2.09863395998742]],[4,"Bip001 L Calf",19,[-33],[1,"03FY7SaPNO96DzAGwIrEby",null,null,null,1,0],[1,0.23993217945098877,0,0],[3,-1.9135070445383419e-19,-2.632967114808625e-18,-0.05198767289971633,0.9986477266115776],[1,-3.778728342000386e-17,-3.040914943161604e-16,-5.960035262353657]],[4,"Bip001 L Foot",20,[-34],[1,"71l0xdq5RNSK2PDWsnJjW5",null,null,null,1,0],[1,0.16850009560585022,4.440891999238953e-18,9.53674295089968e-9],[3,0.00002668103463277201,-0.011924974547102866,0.03369276949931899,0.9993610916748956],[1,0.04920839647513726,-1.3689689338390039,3.8613259886719686]],[15,"Bip001 L Toe0",21,[[51,"Bip001 L Toe0Nub",-35,[1,"02myMZ+HJCXrfLT/ZcscPC",null,null,null,1,0],[1,0.0584682933986187,-2.98023217215615e-10,0],[3,-5.910146639665284e-14,1.776806190378769e-15,1,-6.123234262925839e-17],[1,-1,-0.9999999403953552,-0.9999999403953552],[1,-179.9999999999998,179.99999999999324,-7.0167096047230345e-15]]],[1,"e7GjsqY85Djqd3s2PtJXTk",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,1.5454350301197766e-8,1.5454268588785198e-8,0.7071067513842251,0.7071068109888683],[1,0,0.0000025044845661635244,90]],[4,"Bip001 R Thigh",4,[-36],[1,"e5ZI4NKcFCyJ60gmzzA+i5",null,null,null,1,0],[1,1.1444091541079615e-7,-8.225440950582197e-8,-0.07466395199298859],[3,0.018307220172854872,0.9997612824196819,0.0005926282604946994,0.01191103084710343],[1,-0.042935196277668404,178.6356214928802,2.09863021316722]],[4,"Bip001 R Calf",23,[-37],[1,"5eT2NDyh9Ozb6sSf7gtf2w",null,null,null,1,0],[1,0.23993214964866638,0,0],[3,1.3034441181491747e-20,2.503826801162521e-19,-0.051987676614938125,0.9986477264181702],[1,2.9994474418916213e-18,2.8886738744973417e-17,-5.9600356886632015]],[4,"Bip001 R Foot",24,[-38],[1,"a8aVWbZutOpLY0wS3ZjqUK",null,null,null,1,0],[1,0.16850009560585022,0,9.53674295089968e-9],[3,-0.000026684054124251007,0.011925061146287096,0.033692773185577625,0.9993610905171781],[1,-0.04920908323064725,1.3689788872170112,3.861326402895733]],[15,"Bip001 R Toe0",25,[[38,"Bip001 R Toe0Nub",-39,[1,"61xGxkUi9JlooFAF0ff4Rd",null,null,null,1,0],[1,0.0584682859480381,0,1.776356799695581e-17]]],[1,"a00MYzrqpNkaUcRw3OtqY+",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,-1.5454308319985075e-8,-1.5454308319985075e-8,0.7071067811865474,0.7071067811865474],[1,0,-0.0000025044778683729144,90]],[19,"Body_B",3,[[18,1,-40,[0,"68Qzd9bdhM+rB7/blc6kAM"],[9],[8,true,true],2,10,11]],[1,"e3HUrekpJJI4cqdzP+2QkY",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"extra_equip_D",3,[[18,1,-41,[0,"48a4dvYclDAausKQ0A+scI"],[12],[8,true,true],2,13,14]],[1,"2aEhCFrSxB5ZCHwzVnDUAG",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[51,"Bip001 R Hand Socket",2,[1,"bfC/002fBCI7v258yTDTFj",null,null,null,1,0],[1,-1.1131373801939857,1.838145354003317,-0.02885021111468119],[3,0.048865442948463636,-0.04720239446017907,0.9958501437579962,-0.060552403516946525],[1,2.540000116945136,2.5400002612904107,2.5400001129065592],[1,174.9057677591496,-174.70201326474557,-7.19319336926635]]],0,[0,4,1,0,-1,2,0,14,29,0,0,2,0,-1,3,0,-2,29,0,-1,7,0,-2,8,0,-3,9,0,-4,6,0,-5,27,0,-6,28,0,-1,5,0,-2,19,0,-3,23,0,-1,10,0,-2,12,0,-3,15,0,6,6,0,0,7,0,0,8,0,0,9,0,-1,11,0,6,11,0,-1,13,0,-1,14,0,6,14,0,-1,16,0,-1,17,0,-1,18,0,6,18,0,-1,20,0,-1,21,0,-1,22,0,6,22,0,-1,24,0,-1,25,0,-1,26,0,6,26,0,0,27,0,0,28,0,5,1,4,6,6,41],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,3,10,-1,3,10,-1,3,10,-1,3,10,-1,3,10,-1,-2,-3,-4,-5,-6,-7,-8,17],[8,242,243,8,38,39,8,42,43,8,244,245,8,47,48,9,11,5,12,13,14,6,10,6]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["69CQ0AyxNNip28E0Af7LVX"]}],[2],0,[],[],[]],[[[26,"soundupgrade",".mp3",0.940408],-1],0,0,[],[],[]],[[[22,"barrel1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true,"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0,"specularIntensity":0},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[246,2]],[[{"name":"failbtn1","rect":{"x":1,"y":1179,"width":226,"height":96},"offset":{"x":0,"y":-2},"originalSize":{"width":236,"height":106},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[10,".bin",250352144,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":62496,"length":14928,"count":3732,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":62496,"count":1302,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.26340675354003906,0,-0.06500176340341568],"maxPosition",8,[1,0.22289100289344788,0.11300291121006012,0.036482688039541245]]],-1],0,0,[],[],[]],[[[10,".bin",1516854711,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":97968,"length":19908,"count":4977,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":97968,"count":2041,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-1.6228415966033936,-0.288600355386734,-0.21551308035850525],"maxPosition",8,[1,0.570529580116272,0.17357300221920013,0.21551308035850525]]],-1],0,0,[],[],[]],[[[47,"tree1",1,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true,"USE_ALBEDO_MAP":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[247,2]],[[[26,"soundwood",".mp3",1.26],-1],0,0,[],[],[]],[[[22,"weapons6_1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"occlusion":0.279,"roughness":0.421,"metallic":0.359,"specularIntensity":0.609},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[248,2]],[[{"name":"rolebg2","rect":{"x":203,"y":1501,"width":121,"height":192},"offset":{"x":0.5,"y":-4},"originalSize":{"width":200,"height":200},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["6fmxdgkuVCX7fDejxlIDRX"]}],[2],0,[],[],[]],[[[9,"bulletrotate"],[97,"bulletrotate",[-2],[1,"bdU2D0f+JKlq5T5UIZI8T7",null,null,null,-1,0]],[192,true,false,1,[0,"7aXvGSFOJHHpuYAOAOxQEp"],[[0,null],6,0],[12],[5,1],[2],[2],[2],[2],[2],[32,3,0.7853981633974483,2.0943951023931953],[2],[32,3,1,2],[2],[5,4],[2],[46,true,[45,1,[52,[[112,0],[23,255,0.3482142857142857],[23,255,0.8616071428571429],[23,0,0.9933035714285714]]]]],[147,3,0.01,[5,1]],[54,[39,1,[25,[0,0.4948717948717949,1],[[74,2,0.3925925925925926,0.525252525252526,0.525252525252526],[74,2,0.8185185185185185,0.6138888888888894,0.6138888888888894],[13,2,1]]]],[2],[2],[2]],[59,[2],[2],[2],[5,1]],[49,[2],[2],[2]],[40,[2],[2],[2],[2]],[75,true,[2],[2],[5,3.141592653589793]],[113,true,2,1,2,[57,1,4,[25,[0,1],[[58,2],[13,2,1]]]],[198,3,1,2,4]],[41],[60,[5,1],[2],[12],[12],-3],[204,4,1,1,2,3]]],0,[0,4,1,0,-1,2,0,12,2,0,5,1,3],[0,0,0,0],[-1,3,15,16],[92,249,92,73]],[[{"name":"shopbg11","rect":{"x":328,"y":1431,"width":200,"height":200},"offset":{"x":0,"y":0},"originalSize":{"width":200,"height":200},"rotated":false,"capInsets":[0,30,0,30],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[22,"weapons6_2",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"occlusion":0.279,"roughness":0.421,"metallic":0.359,"specularIntensity":0.609},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[250,2]],[[{"name":"resultbg8","rect":{"x":964,"y":765,"width":43,"height":43},"offset":{"x":0,"y":0},"originalSize":{"width":43,"height":43},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"storehouse2"],[34,"storehouse2",[-4],[[127,-2,[0,"a6+Qm0NuVO7KccXB4h3LeU"],2],[76,2,-3,[0,"3fZ2aDc7lGbaFh1XgHBI0f"]]],[1,"889//eYEFacYo5NtWONcgZ",null,null,null,-1,0]],[27,"storehouse2",1,[[21,1,-5,[0,"9c/0Qq6bVQ+q3kT8NTAVul"],[0],[8,true,true],1]],[1,"fbNwfMhPVSSLPtZNV0PvA/",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,2,0,0,2,0,5,1,5],[0,0,0],[-1,3,3],[251,93,93]],[[[47,"point",1,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainTexture",6,0]],11]]],0,0,[0,0],[8,7],[29,15]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["76/FiiojZGU7SIYyPMDd8t"]}],[2],0,[],[],[]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["77gG66UGBNl7su6c4Y/tGt"]}],[2],0,[],[],[]],[[[9,"wall1"],[34,"wall1",[-4],[[114,-2,[0,"dbPyl0YdBPmpRDZFMHvyQ4"],[1,0.684,3.213,18.5]],[76,2,-3,[0,"desxVgKzBCeJs9QP9yTSn+"]]],[1,"d7VMpFwbNbF7D8c6THzN4X",null,null,null,-1,0]],[27,"wall1",1,[[21,1,-5,[0,"8fpgy8Gtdc0LGJQ7YUL7Xs"],[0],[8,true,true],1]],[1,"74K8D/u/lV36sruX4Fv/Zi",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,2,0,0,2,0,5,1,5],[0,0],[-1,3],[252,253]],[[[9,"treasure_chest"],[34,"treasure_chest",[-4,-5],[[123,-2,[0,"08ErT4MNxFGKKdAeFfGR1Y"],[1,0,0.45,0],[1,1.709,0.911,0.911]],[124,-3,[0,"19Nd4jkjVGsqLpvw+xZgIx"]]],[1,"3bwMvaIcNetLOvyxsivnkZ",null,null,null,-1,0]],[72,"treasure_chest1",1,[[21,1,-6,[0,"895MvHkJNT85fnZaidIeWQ"],[0],[8,true,true],1]],[1,"0aOBi1Q6xRJpnBcqf5dfQk",null,null,null,1,0],[1,0,0.5899999737739563,-0.44999998807907104]],[27,"treasure_chest2",1,[[21,1,-7,[0,"cf0AzTL9lRb6IDfBZgXTjf"],[2],[8,true,true],3]],[1,"22f1Ai8+1eoJINfVRVl2xb",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,2,0,-2,3,0,0,2,0,0,3,0,5,1,7],[0,0,0,0],[-1,3,-1,3],[94,254,94,255]],[[[9,"LeaderPage"],[42,"LeaderPage",33554432,[-5,-6],[[3,-2,[0,"47phGvI6pIdpbGhxuHmH9l"],[5,640,1136]],[29,45,100,100,-3,[0,"51SFOuDEdIVb5zW8MjFa7U"]],[37,-4,[0,"b5hyzWL+hLELNBJpwLJfGH"]]],[1,"a7ERIEEwRNP6aVz0LcK2NL",null,null,null,-1,0]],[95,"bg",33554432,[[3,-7,[0,"a9Ruvi3DhPYaAsATASdYCh"],[5,5000,5000]],[24,0,-8,[0,"d0fu8hRw5AsbLtegRAcvDw"],0],[134,45,-2435,-2435,-2435,-2435,120,120,-9,[0,"20NUPDTOBJNoxDNuVw2HL+"]],[37,-10,[0,"feDwZ+VfFO45HfXr2vvMO3"]],[56,-11,[0,"cfGnkAddFDWqWnxmUPSvcj"]]],[1,"2c/Si+Av5Ep6ywERBBm++L",null,null,null,1,0]],[77,"Mask",33554432,1,[2],[[3,-12,[0,"5bbz6wUJZOzbB/Bfeye6S4"],[5,130,130]],[155,1,true,-13,[0,"18h87E3D9CAani4/9G89G9"]],[156,-14,[0,"favUqPEB5BTZE/VggbMKbG"],[4,16777215]]],[1,"2clMCf/U9MVIEfNFRyaTTT",null,null,null,1,0]],[6,"title",33554432,1,[[3,-15,[0,"b5s7jhErpCEJlmf9wrzBg8"],[5,258,49]],[7,-16,[0,"6cOIPMMQ1PWbgvSVr17GnJ"],1]],[1,"1bTKwvuUtPOI/E1ElDuzdt",null,null,null,1,0],[1,0,300,0]]],0,[0,4,1,0,0,1,0,0,1,0,0,1,0,-1,3,0,-2,4,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,3,0,0,3,0,0,3,0,0,4,0,0,4,0,5,1,2,6,3,16],[0,0],[1,1],[35,256]],[[[9,"loading"],[42,"loading",33554432,[-5,-6],[[3,-2,[0,"c1xtunZjNOIIyTZsJ60fjQ"],[5,640,1136]],[29,45,100,100,-3,[0,"f2S1srcvlJHJ1IsIn4uuHH"]],[56,-4,[0,"49ShsjTTNOO7/fA/Bui9pV"]]],[1,"a5FsH5VQBM4IQpj2JuYtd5",null,null,null,-1,0]],[17,"mask",33554432,1,[[3,-7,[0,"9bQhFeyDxAm4qWbiwqqMDe"],[5,640,1136]],[24,0,-8,[0,"f5bGNd72xHYL7s4OsFJCIG"],0],[29,45,120,120,-9,[0,"61fe+QLzJL7oE3CMTyZM1a"]],[100,120,-10,[0,"e81C5WkydNO7Npch/+dI9S"]]],[1,"12eVlcJBRCy5tb73CEPOGj",null,null,null,1,0]],[6,"icon",33554432,1,[[3,-11,[0,"ddFtYHarNG0qpp8vTr25Be"],[5,135,135]],[7,-12,[0,"84myMhl9RBOLa0u1t0uDLh"],1]],[1,"49IpWyQcpJaKptuKzZnCqY",null,null,null,1,0],[1,0,80,0]]],0,[0,4,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,-2,3,0,0,2,0,0,2,0,0,2,0,0,2,0,0,3,0,0,3,0,5,1,12],[0,0],[1,1],[24,95]],[[{"name":"shopbg7","rect":{"x":1,"y":1628,"width":200,"height":200},"offset":{"x":0,"y":0},"originalSize":{"width":200,"height":200},"rotated":false,"capInsets":[0,30,0,30],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[10,".bin",1394938588,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":54592,"length":8256,"count":2064,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":54592,"count":853,"stride":64},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false},{"name":"a_texCoord2","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.5335686802864075,0.16643880307674408,-0.051189035177230835],"maxPosition",8,[1,0.07824200391769409,0.2872971296310425,0.04333532229065895]]],-1],0,0,[],[],[]],[[[10,".bin",765502611,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":261096,"length":28188,"count":7047,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":261096,"count":2967,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false},{"name":"a_texCoord2","format":21,"isNormalized":false},{"name":"a_texCoord3","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-1.3050620555877686,-0.17812778055667877,-0.08102128654718399],"maxPosition",8,[1,0.6598047018051147,0.19902963936328888,0.05042407661676407]]],-1],0,0,[],[],[]],[[[10,".bin",2065970271,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":15400,"length":1488,"count":372,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":15400,"count":175,"stride":88},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false},{"name":"a_texCoord2","format":21,"isNormalized":false},{"name":"a_texCoord3","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.9097409248352051,0.1332038789987564,-0.03667650744318962],"maxPosition",8,[1,-0.3255443871021271,0.17580647766590118,0.03667651116847992]]],-1],0,0,[],[],[]],[[[10,".bin",2889216566,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":9216,"length":1584,"count":396,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":9216,"count":192,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-4,-7.808208692949847e-7,-1.500001072883606],"maxPosition",8,[1,4,3,1.5000009536743164]]],-1],0,0,[],[],[]],[[[9,"hp"],[42,"hp",33554432,[-6],[[3,-2,[0,"2aKMJN+jxD64GH+1n0AZeI"],[5,60,10]],[7,-3,[0,"43AteEtxpMroEmmpuf7MGc"],0],[86,58,1,-5,[0,"26L/ViLHFGc4ZdV5+AWrLb"],-4]],[1,"f0xmPs4u9C5KFGrx/xzUEo",null,null,null,-1,0]],[81,"hp",33554432,1,[[[20,-7,[0,"004Gzt1DpPE5m1U7/Ym7Jt"],[5,58,8],[0,0,0.5]],-8],4,1],[1,"b8hWv4kilK7aFda74NY4WS",null,null,null,1,0],[1,-29,0,0]],[138,1,0,2,[0,"838siGa7RBEpls9vCR6FBE"]]],0,[0,4,1,0,0,1,0,0,1,0,20,3,0,0,1,0,-1,2,0,0,2,0,-2,3,0,5,1,8],[0,3],[1,1],[257,258]],[[[47,"broken",1,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainTexture",6,0]],11]]],0,0,[0,0],[8,7],[88,15]],[[[10,".bin",1436431155,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":102480,"length":13248,"count":3312,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":102480,"count":2135,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-11.468475341796875,-0.005684676114469767,-6.928836822509766],"maxPosition",8,[1,11.440537452697754,11.464483261108398,6.9288330078125]]],-1],0,0,[],[],[]],[[{"name":"rolebg1","rect":{"x":203,"y":1837,"width":124,"height":189},"offset":{"x":0,"y":-5.5},"originalSize":{"width":200,"height":200},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[26,"soundhit3",".mp3",1.07102],-1],0,0,[],[],[]],[[[9,"HomeLayer"],[42,"HomeLayer",33554432,[-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16],[[3,-2,[0,"c3C6IRjk9NKJxmw79O+TL0"],[5,640,1136]],[29,45,100,100,-3,[0,"e53lPWDvRA4ZMVwnxAh9j2"]],[37,-4,[0,"7dNJiZR0lNfI6kayAaRXa3"]],[56,-5,[0,"f3uFtpqVlA1aR3BUni1WWI"]]],[1,"7a2RsrrfVJHad1z0ymTlkm",null,null,null,-1,0]],[16,"btndamage",33554432,1,[-20,-21,-22],[[3,-17,[0,"463HdyutdAzJHF0pI2fob2"],[5,190,240]],[7,-18,[0,"515iuE6khF5LGYDbbmbX//"],4],[30,1,-19,[0,"fephwtkNBKJ5EdmZmE/5YR"],[4,4292072403],5]],[1,"c9YXBEdYBMLLg6sUAE3RfT",null,null,null,1,0],[1,-110,-280,0]],[16,"btnearn",33554432,1,[-26,-27,-28],[[3,-23,[0,"bbMMpfiENBwKl+zwaLh1sc"],[5,190,240]],[7,-24,[0,"1a+tC5o1RKLIXNWrY6j4f7"],9],[30,1,-25,[0,"84TwHSYnxBJZAxHJBnGBv0"],[4,4292072403],10]],[1,"11X+wlst5Ny4wNhjraOjDN",null,null,null,1,0],[1,110,-280,0]],[132,"btnrpg",512,33554432,1,[-33,-34],[[3,-29,[0,"67DP4YtRVCy6VHgpXvuxD7"],[5,98,98]],[7,-30,[0,"9apWL28EtKJq1b9XuNoCHq"],20],[73,32,15,-31,[0,"8boDKSjsxCsbfjFHTGP9+O"]],[30,1,-32,[0,"72EROn+vNMlZ+ssIFcijKu"],[4,4292072403],21]],[1,"8bdLOFaiFFJr8GwpK7EONv",null,null,null,1,0],[1,256,160,0]],[16,"btnweapon",33554432,1,[-39],[[3,-35,[0,"dcptW/tSFGO5U6AONar3/V"],[5,98,98]],[7,-36,[0,"86c/Fwsl9HaYc1CMAE4LHV"],12],[135,32,15,17,102,-37,[0,"4eegYTEdpNfaIMAcvVJadD"]],[30,1,-38,[0,"45YhSUuwBKVrbnxIRDoMFk"],[4,4292072403],13]],[1,"933utkEQxLwIDe9W9jN4lV",null,null,null,1,0],[1,254,20,0]],[16,"btnrole",33554432,1,[-44],[[3,-40,[0,"c37lF0VrJP47JWuLrXVd3M"],[5,98,98]],[7,-41,[0,"0bHlL5qGdJgo56nPhDqWid"],15],[135,8,15,15,98,-42,[0,"35AfNjLLRDIrgCfgdfICGW"]],[30,1,-43,[0,"05Zecx7lVLgq7R9lg6zHZT"],[4,4292072403],16]],[1,"aasm6eCoJElqwl7AlnjOhH",null,null,null,1,0],[1,-256,20,0]],[17,"bg",33554432,1,[[3,-45,[0,"feNnNABmZE0IQWbvyquDcH"],[5,640,1136]],[24,0,-46,[0,"8czhIyNsdKdrXYshZCZzee"],0],[29,45,120,120,-47,[0,"5e/VjmSnxIFpjM7D1i00xx"]],[100,180,-48,[0,"80wx5mHu5OepMelrL613QH"]]],[1,"bbCK+f+FhELYqciM/4Y/Dt",null,null,null,1,0]],[6,"btnstart",33554432,1,[[3,-49,[0,"56ktqKPFBAbJvBsuyUQhhV"],[5,356,130]],[7,-50,[0,"e0QdJMw0dHToOfay5daGc7"],22],[30,1,-51,[0,"48s5EYIq5OxpqnMcn/UZL0"],[4,4292072403],23],[37,-52,[0,"18r5nnzsZDxJMtzUhI5auz"]]],[1,"45aAg3gnRMnYkmc2F0xJ47",null,null,null,1,0],[1,0,-80,0]],[6,"btnsetting",33554432,1,[[3,-53,[0,"dcu48zqbRNqoT/oVYdCk6V"],[5,60,60]],[7,-54,[0,"abOCXMss5HTII+2uCresGM"],24],[84,9,15,15,-55,[0,"18WZrCCX9NXI5/UFcQ53FN"]],[30,1,-56,[0,"8d+vktPF1K8qctMsj5pgCc"],[4,4292072403],25]],[1,"29O70AKyJPpbiSNv5fdgu4",null,null,null,1,0],[1,-275,523,0]],[6,"btnshare",33554432,1,[[3,-57,[0,"5bY8qO+xZNb6yHJuDsdqZP"],[5,0,0]],[7,-58,[0,"0dTSjCZNJOf4rpAlRq9U5m"],26],[98,8,15,-59,[0,"901NpCF8VMib00YOIk+9YP"]],[30,1,-60,[0,"c5h7nkJ0pA+YonYl4vdhMj"],[4,4292072403],27]],[1,"fdZz9KJuFERr7be9gyWAyn",null,null,null,1,0],[1,-256,150,0]],[16,"NumGoldTT",33554432,1,[-64],[[3,-61,[0,"4dzT0Y1LRFmrsKAY+/trvb"],[5,140,50]],[36,1,0,-62,[0,"caTt+O+Y9GBrMPwGiERZch"],29],[79,33,15,20,-63,[0,"1ewgbYB2JLt7cpcFaIoldS"]]],[1,"5fBy9vyV9N/5H9T1G8v5X8",null,null,null,1,0],[1,235,523,0]],[6,"shopremind",33554432,5,[[3,-65,[0,"27km+wlOtPRr10qodAU7aF"],[5,40,40]],[7,-66,[0,"18Fw6bzghIfJbAq/TxCVay"],11],[175,9,-20,-20,-20,40,-67,[0,"90K+i8yxdNfYZWzD1m+fYI"]]],[1,"d51ZJCc3tH9afVILcn0N9F",null,null,null,1,0],[1,-49,49,0]],[6,"shopremind",33554432,6,[[3,-68,[0,"d38xBN6/FL1a8dFuPBIQEY"],[5,40,40]],[7,-69,[0,"10VkRLSWtHJqrBfy6BfKWF"],14],[79,33,-20,-20,-70,[0,"68Psq2IpxFTIPOh6NxcoNd"]]],[1,"f91Bj4dGlB+oAjU0DLFa/J",null,null,null,1,0],[1,49,49,0]],[132,"ad",512,33554432,4,[-73],[[3,-71,[0,"c1lZL6jrNJDry5owsozw57"],[5,84,44]],[24,0,-72,[0,"e7RrV787dCLZOnSKKh2eKH"],19]],[1,"c65wKgKqVF9bHBtogPY4VY",null,null,null,1,0],[1,0,-44,0]],[6,"lv",33554432,2,[[3,-74,[0,"2e8zwKYmNPMKONKbOogelN"],[5,36.41,24]],[35,"G1",24,24,24,false,-75,[0,"f8XxlK0ctIP7Lb+hHXYyKU"],1]],[1,"4a2wErZZBEk4unbBgXaLOH",null,null,null,1,0],[1,0,36,0]],[6,"showtext",33554432,2,[[3,-76,[0,"82WT0CSFpKaKOAuHElLs3E"],[5,42.21,24]],[35,"B20",24,24,24,false,-77,[0,"f8fqhKevhIQ7jOFZdPkbJF"],2]],[1,"d1SQWh8kpODbO8EV1ym2rn",null,null,null,1,0],[1,0,-25,0]],[6,"coins",33554432,2,[[3,-78,[0,"d2zxFj6VVKPq4zrcwwEGw+"],[5,69.31,30]],[35,"F200",30,30,30,false,-79,[0,"263bo/cbdBRZLQCAvjOViO"],3]],[1,"5d0N1mSdlKBr9YQLSFqHsH",null,null,null,1,0],[1,0,-82,0]],[6,"lv",33554432,3,[[3,-80,[0,"d8+E7SncVCd6W2QwPnKMEC"],[5,36.41,24]],[35,"G1",24,24,24,false,-81,[0,"5aWq/gq61Jgay+hqo5tNN1"],6]],[1,"d3vYuz3GVPCp+LBFn1BT64",null,null,null,1,0],[1,0,36,0]],[6,"showtext",33554432,3,[[3,-82,[0,"a7Ba0Df+JPGbEMcx5NxNzu"],[5,42.21,24]],[35,"B20",24,24,24,false,-83,[0,"f2iL5eqlNPt72w4JG7LTvW"],7]],[1,"f9r8wU1hxI4pDCt5ajfbWE",null,null,null,1,0],[1,0,-25,0]],[6,"coins",33554432,3,[[3,-84,[0,"04UU5sUABOsrUOPag5gY0o"],[5,69.31,30]],[35,"F200",30,30,30,false,-85,[0,"0esis0Gq5GD6i7G+A48lVg"],8]],[1,"7bzweEYrhGW5oTvp9ebm3J",null,null,null,1,0],[1,0,-82,0]],[164,"icon",512,33554432,4,[[3,-86,[0,"cfX4XP4IhFX44JtvALltSd"],[5,135,61]],[7,-87,[0,"bcv8FH4nVIbb237icdgRoX"],17]],[1,"e33g6X+2lF8Ycu3IMi+EUs",null,null,null,1,0]],[165,"icon",512,33554432,14,[[3,-88,[0,"9ePHC8ZiRImrIrscNoovN0"],[5,112,101]],[7,-89,[0,"39ik+kEttENImiZSvanQ8Z"],18]],[1,"dbhU5TbJBK4KEiUEMRhrk4",null,null,null,1,0],[1,0.35,0.35,0.35]],[6,"text",33554432,11,[[3,-90,[0,"efmaQSyZhPDqBJLgNXrciR"],[5,55.86,30]],[35,"1000",30,30,30,false,-91,[0,"2bq+htaqtLOINcx4is8M/B"],28]],[1,"39v2BLTshD1qZPbBPPlGGt",null,null,null,1,0],[1,12,1,0]],[94,"title",33554432,1,[[3,-92,[0,"800cBTb/JLGa0w0CdzdjNr"],[5,400,252]],[183,-93,[0,"fakxmlCZJJQ6VufRiq88vl"],30,31]],[1,"94JP0tL2hKC4sbBL22hOKS",null,null,null,1,0],[1,0,350,0],[1,0.8,0.8,0.8]]],0,[0,4,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,7,0,-2,2,0,-3,3,0,-4,5,0,-5,6,0,-6,4,0,-7,8,0,-8,9,0,-9,10,0,-10,11,0,-11,24,0,0,2,0,0,2,0,0,2,0,-1,15,0,-2,16,0,-3,17,0,0,3,0,0,3,0,0,3,0,-1,18,0,-2,19,0,-3,20,0,0,4,0,0,4,0,0,4,0,0,4,0,-1,21,0,-2,14,0,0,5,0,0,5,0,0,5,0,0,5,0,-1,12,0,0,6,0,0,6,0,0,6,0,0,6,0,-1,13,0,0,7,0,0,7,0,0,7,0,0,7,0,0,8,0,0,8,0,0,8,0,0,8,0,0,9,0,0,9,0,0,9,0,0,9,0,0,10,0,0,10,0,0,10,0,0,10,0,0,11,0,0,11,0,0,11,0,-1,23,0,0,12,0,0,12,0,0,12,0,0,13,0,0,13,0,0,13,0,0,14,0,0,14,0,-1,22,0,0,15,0,0,15,0,0,16,0,0,16,0,0,17,0,0,17,0,0,18,0,0,18,0,0,19,0,0,19,0,0,20,0,0,20,0,0,21,0,0,21,0,0,22,0,0,22,0,0,23,0,0,23,0,0,24,0,0,24,0,5,1,93],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,9,9,9,1,11,9,9,9,1,11,1,1,11,1,1,11,1,1,1,1,11,1,11,1,11,1,11,9,1,24,1],[24,1,1,1,96,96,1,1,1,97,97,98,99,99,98,100,100,76,77,17,34,34,101,101,102,102,103,103,1,18,259,260]],[[[9,"bullet1"],[34,"bullet1",[-7,-8,-9],[[125,false,-5,[0,"abApgMunBGkJKBV/KTvbDt"]],[128,true,-6,[0,"6dnnPIEalBGaHq5KwNfMsr"],5]],[118,"18oOKgO79NR7Aj6gbUlZl6",null,-4,0,[[129,["_trailModule","_particleSystem"],-3,[31,["7aXvGSFOJHHpuYAOAOxQEp"]],-2,[31,["7aXvGSFOJHHpuYAOAOxQEp"]]]],[-1]]],[31,["7aXvGSFOJHHpuYAOAOxQEp"]],[31,["bdU2D0f+JKlq5T5UIZI8T7"]],[43,0,{},1,[44,"bdU2D0f+JKlq5T5UIZI8T7",null,null,-10,[50,"dbU4O/jNhEq67Z0BCvgzMQ",1,[[14,"bulletrotate",["_name"],3],[11,["_lpos"],3,[1,0,0,0.024]],[11,["_lrot"],3,[3,0,0,0,1]],[11,["_euler"],3,[1,0,0,0]],[14,true,["loop"],2],[11,["_lscale"],3,[1,1.4,1.4,2]],[14,1,["_simulationSpace"],2],[14,-6.283185307179586,["_rotationOvertimeModule","z","constant"],2],[14,1,["scaleSpace"],2],[14,1,["renderer","_alignSpace"],2],[14,true,["_rotationOvertimeModule","_separateAxes"],2],[14,4,["duration"],2],[14,2,["simulationSpeed"],2],[14,true,["_active"],3],[14,2,["startLifetime","constantMax"],2]]],4]],[109,"bullet",1,[-12,-13],[[21,1,-11,[0,"8d1czb9PRCWLsgTLrp3gB0"],[2],[8,true,true],3]],[1,"e4qT99MHNCjqIir33Jj7/u",null,null,null,1,0]],[82,"Trailing",5,[-14],[1,"7b4qVbS4NGJ7Q7H9p9qRHg",null,null,null,1,0]],[87,"New Particle<ParticleSystem>",4,1,1,6,[0,"e6e1DRmdNPyo2cGtROqIEy"],[[null,0],0,6],[12],[2],[2],[2],[2],[2],[2],[2],[2],[5,4],[2],[2],[2],[[55,[5,2]]],[46,true,[45,1,[52,[[23,255,0.4620535714285714],[23,0,1]]]]],[88,true,1,0.0001,0,8,0,0,[2],[1,-0.01,0,-0.45],[1,1,1,2]],[54,[2],[2],[2],[2]],[89,0,[2],[2],[2],[5,1]],[49,[2],[2],[2]],[40,[2],[2],[2],[2]],[75,true,[2],[2],[57,1,360,[25,[0,1],[[58,2],[13,2,1]]]]],[61,[2],[2]],[41],[90,true,0.0001,false,[5,0.05],[5,0.03],[12],[12],-15],[91]],[82,"Trailing",5,[-16],[1,"c1qKoF4mlF/LRqgJJI2FU5",null,null,null,1,0]],[87,"New Particle<ParticleSystem>",4,1,1,8,[0,"689wG0LGFEk4n/uWemi5/i"],[[null,1],0,6],[12],[2],[2],[2],[2],[2],[2],[2],[2],[5,4],[2],[2],[2],[[55,[5,2]]],[46,true,[45,1,[52,[[23,255,0.4620535714285714],[23,0,1]]]]],[88,true,1,0.0001,0,8,0,0,[2],[1,0.01,0,-0.45],[1,1,1,2]],[54,[2],[2],[2],[2]],[89,0,[2],[2],[2],[5,1]],[49,[2],[2],[2]],[40,[2],[2],[2],[2]],[75,true,[2],[2],[57,1,360,[25,[0,1],[[58,2],[13,2,1]]]]],[61,[2],[2]],[41],[90,true,0.0001,false,[5,0.05],[5,0.03],[12],[12],-17],[91]],[115,"bulletCamera",false,1,[[130,"Camera<CameraComponent>",1822425087,-18,[0,"e2kTcthpdEWrirXbesYPXp"],[4,4286073907]]],[1,"38lxfCyllPup8JjcwIaRwP",null,null,null,1,0],[1,0.11,0.26,0.997],[3,-0.06969649700697517,0.04913469766453946,-0.0018968238840275076,0.9963556502823296],[1,-7.973,5.604,-0.609]]],0,[0,-1,4,0,14,4,0,21,4,0,4,1,0,0,1,0,0,1,0,-1,5,0,-2,4,0,-3,10,0,4,4,0,0,5,0,-1,6,0,-2,8,0,-1,7,0,12,7,0,-1,9,0,12,9,0,0,10,0,5,1,18],[0,0,0,0,0,0],[-2,-2,-1,3,13,3],[23,23,261,104,46,104]],[[{"name":"warning","rect":{"x":616,"y":485,"width":12,"height":36},"offset":{"x":0,"y":0},"originalSize":{"width":12,"height":36},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"oil_tank1"],[34,"oil_tank1",[-4],[[152,0.868,5.2,-2,[0,"367+6M/N1EOYIAgSGwsIg9"],[1,0,2.6,0]],[76,2,-3,[0,"18fLUHs61OEIey5MyuYKNA"]]],[1,"92RmBQ4HNU1a8VZUvnEHlp",null,null,null,-1,0]],[27,"oil_tank1",1,[[21,1,-5,[0,"aeXmxRi+FTHpvRJq6mhFGL"],[0],[8,true,true],1]],[1,"36sIkQCA5ZO4uC0u6YG3sz",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,2,0,0,2,0,5,1,5],[0,0],[-1,3],[262,263]],[[[9,"LoadingView"],[42,"LoadingView",33554432,[-6,-7,-8],[[3,-2,[0,"9b3qPd85hDuYj2lQsPTrOe"],[5,920,1136]],[209,-5,[0,"74E1X6pWFDAr2dY0Bq4zBe"],-4,-3]],[1,"edArhfU7lMR4YF02i7S2h+",null,null,null,-1,0]],[174,"Node_Progress",33554432,1,[-13,-14],[[[20,-9,[0,"ealBcYI2lERaxjmjbEBafq"],[5,514,40],[0,0,0.5]],[36,1,0,-10,[0,"73H0fUXhBDUbRZq0ewn6Lw"],3],-11,[136,16,-12,[0,"b1mHd5uppIdYfHDQ/1Z0VC"]]],4,4,1,4],[1,"c4lc+V4rZLq55u0Dvap74d",null,null,null,1,0],[1,-257,-350,0]],[17,"Node_Icon",33554432,1,[[3,-15,[0,"232pBqAAhMHbtYXkmNNO4S"],[5,135,135]],[24,0,-16,[0,"13QBMjD+hCN70hHkoVgGzx"],2]],[1,"02KCPSsXRAMKae2JWUKC6+",null,null,null,1,0]],[116,"text",false,33554432,2,[[3,-17,[0,"3eHhfEJnZPsJuJ/7Y/58oX"],[5,28.91,50.4]],[189,"0%",20,20,-18,[0,"cddwxD8RhDfYe00QhZYcOC"],[4,4278190080]],[136,16,-19,[0,"93EG+Mt7lM3ZeWCnz7i8ib"]]],[1,"6eb2IWBfJHUpLYs6G4EM+u",null,null,null,1,0],[1,257,0,0]],[17,"Node_BG",33554432,1,[[3,-20,[0,"f2f50AIktEfa1Jq0VHbtHN"],[5,920,1136]],[184,0,-21,[0,"a99Hucc09Agq/Y98C6vU1H"],0,1]],[1,"f46kQ5yDRGWor+rsZiHPAs",null,null,null,1,0]],[81,"icon",33554432,2,[[[20,-22,[0,"4enEfcOetKkp+M4u4avknk"],[5,0,28],[0,0,0.5]],-23],4,1],[1,"22JUCKGuhMXbXwSChf7AUj",null,null,null,1,0],[1,7,0,0]],[138,1,0,6,[0,"6b/bTAqtFEQo32OIiIEy52"]],[86,500,0,2,[0,"b0eIberUlDd6HFW/IiTKLE"],7]],0,[0,4,1,0,0,1,0,28,8,0,29,3,0,0,1,0,-1,5,0,-2,3,0,-3,2,0,0,2,0,0,2,0,-3,8,0,0,2,0,-1,6,0,-2,4,0,0,3,0,0,3,0,0,4,0,0,4,0,0,4,0,0,5,0,0,5,0,0,6,0,-2,7,0,5,1,23],[0,0,0,0,7],[24,1,1,1,1],[264,265,95,266,267]],[[[26,"soundshoot4",".mp3",0.72],-1],0,0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["83GEvE3+RH/KbS5YFi1gH1"]}],[2],0,[],[],[]],[[[47,"Trailing","0",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"tintColor",8,[4,2533359615],"mainTexture",6,0]],11]]],0,0,[0,0],[8,7],[268,269]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["87/fkIWH9JEoypdFrA4arc"]}],[2],0,[],[],[]],[[[22,"weapons5_1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"occlusion":0.279,"roughness":0.421,"metallic":0.359,"specularIntensity":0.609},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[270,2]],[[{"name":"shopbg8","rect":{"x":585,"y":1058,"width":48,"height":60},"offset":{"x":0,"y":-2},"originalSize":{"width":58,"height":70},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"headshoot1","rect":{"x":523,"y":402,"width":81,"height":106},"offset":{"x":0,"y":0},"originalSize":{"width":81,"height":106},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"homebg15","rect":{"x":703,"y":1945,"width":98,"height":98},"offset":{"x":0,"y":0},"originalSize":{"width":98,"height":98},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"mirror1","rect":{"x":363,"y":450,"width":150,"height":150},"offset":{"x":0,"y":0},"originalSize":{"width":150,"height":150},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["8a+ClOc3dAmaasqN/4GO49"]}],[2],0,[],[],[]],[[{"name":"weaponbg5","rect":{"x":1,"y":1830,"width":200,"height":200},"offset":{"x":0,"y":0},"originalSize":{"width":200,"height":200},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[157,"numimage2",116,{"commonHeight":164,"fontSize":116,"atlasName":"numimage2.png","fontDefDictionary":{"48":{"xOffset":0,"yOffset":0,"xAdvance":56,"rect":{"x":64,"y":2,"width":56,"height":116}},"49":{"xOffset":0,"yOffset":0,"xAdvance":48,"rect":{"x":60,"y":238,"width":48,"height":116}},"50":{"xOffset":0,"yOffset":0,"xAdvance":60,"rect":{"x":2,"y":2,"width":60,"height":116}},"51":{"xOffset":0,"yOffset":0,"xAdvance":56,"rect":{"x":122,"y":2,"width":56,"height":116}},"52":{"xOffset":0,"yOffset":0,"xAdvance":56,"rect":{"x":180,"y":2,"width":56,"height":116}},"53":{"xOffset":0,"yOffset":0,"xAdvance":56,"rect":{"x":2,"y":120,"width":56,"height":116}},"54":{"xOffset":0,"yOffset":0,"xAdvance":56,"rect":{"x":60,"y":120,"width":56,"height":116}},"55":{"xOffset":0,"yOffset":0,"xAdvance":56,"rect":{"x":118,"y":120,"width":56,"height":116}},"56":{"xOffset":0,"yOffset":0,"xAdvance":56,"rect":{"x":176,"y":120,"width":56,"height":116}},"57":{"xOffset":0,"yOffset":0,"xAdvance":56,"rect":{"x":2,"y":238,"width":56,"height":116}}},"kerningDict":{}}]],0,0,[0],[25],[271]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["8f+XIq26VBgLYs991mOBPt"]}],[2],0,[],[],[]],[[[159,"SpriteStreamer",[{"width":0.04,"strength":1.3,"speed":4,"distancee":2.5,"offset":0.3}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true}]]],0,0,[0],[7],[272]],[[[10,".bin",2102225774,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":668616,"length":27600,"count":6900,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":668616,"count":6429,"stride":104},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false},{"name":"a_texCoord2","format":21,"isNormalized":false},{"name":"a_texCoord3","format":21,"isNormalized":false},{"name":"a_texCoord4","format":21,"isNormalized":false},{"name":"a_texCoord5","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.9742885828018188,-0.23891328275203705,-0.04915939271450043],"maxPosition",8,[1,0.5777182579040527,0.18726061284542084,0.04915935918688774]]],-1],0,0,[],[],[]],[[[10,".bin",4251652972,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":233568,"length":11184,"count":2796,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":233568,"count":2433,"stride":96},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false},{"name":"a_texCoord2","format":21,"isNormalized":false},{"name":"a_texCoord3","format":21,"isNormalized":false},{"name":"a_texCoord4","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.11153899133205414,0.1731080412864685,-0.04617714509367943],"maxPosition",8,[1,0.13238805532455444,0.3059294521808624,0.046447787433862686]]],-1],0,0,[],[],[]],[[[10,".bin",2056717750,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1152,"length":144,"count":36,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":1152,"count":24,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.4770781993865967,-0.5008392930030823,-0.5908690094947815],"maxPosition",8,[1,0.47558894753456116,0.5008392333984375,0.5908688902854919]]],-1],0,0,[],[],[]],[[[10,".bin",2097846420,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":19824,"length":7008,"count":1752,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":19824,"count":413,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.044152066111564636,-0.04369921609759331,-0.32516586780548096],"maxPosition",8,[1,0.044152066111564636,0.04369921237230301,3.34959964813295e-18]]],-1],0,0,[],[],[]],[[[10,".bin",965003411,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":21072,"length":7584,"count":1896,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":21072,"count":439,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.03163325786590576,-0.03130880743265152,-0.4118986129760742],"maxPosition",8,[1,0.031633250415325165,0.03130879998207092,2.02375824431833e-10]]],-1],0,0,[],[],[]],[[[10,".bin",2353551771,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":20448,"length":7584,"count":1896,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":20448,"count":426,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.038238801062107086,-0.03784660995006561,-0.38354966044425964],"maxPosition",8,[1,0.038238801062107086,0.03784659504890442,2.858705177710293e-18]]],-1],0,0,[],[],[]],[[[10,".bin",3147806336,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":15552,"length":2292,"count":573,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":15552,"count":324,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.3559747338294983,-0.2493809461593628,-0.1696169078350067],"maxPosition",8,[1,1.4497168064117432,0.26921042799949646,0.1596994251012802]]],-1],0,0,[],[],[]],[[[10,".bin",2584280866,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":3072,"length":840,"count":210,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":3072,"count":64,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-1.1123127937316895,-0.051012054085731506,-0.10044839233160019],"maxPosition",8,[1,0.047757528722286224,0.15904012322425842,0.10823281109333038]]],-1],0,0,[],[],[]],[[[47,"cone-001",1,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainTexture",6,0]],11]]],0,0,[0,0],[8,7],[105,15]],[[{"name":"settingbg3","rect":{"x":603,"y":1000,"width":56,"height":30},"offset":{"x":0,"y":0},"originalSize":{"width":56,"height":30},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"explosion"],[97,"explosion",[-2],[1,"bdU2D0f+JKlq5T5UIZI8T7",null,null,null,-1,0]],[194,1,false,1.5,1,[0,"7aXvGSFOJHHpuYAOAOxQEp"],[0],[12],[5,0.5],[2],[2],[2],[5,1.5707963267948966],[5,1.5707963267948966],[5,1.5707963267948966],[2],[5,1],[2],[2],[2],[[55,[5,1]]],[46,true,[45,1,[52,[[112,0],[23,255,0.3482142857142857],[23,255,0.9955357142857143]]]]],[147,3,0.01,[5,1]],[54,[39,1,[25,[0,0.4948717948717949,1],[[74,2,0.3925925925925926,0.525252525252526,0.525252525252526],[74,2,0.8185185185185185,0.6138888888888894,0.6138888888888894],[13,2,1]]]],[2],[2],[2]],[59,[2],[2],[2],[5,1]],[49,[2],[2],[2]],[40,[2],[2],[2],[2]],[67,[2],[2],[32,3,-0.7853981633974483,0.7853981633974483]],[113,true,12,7,1,[39,1,[25,[0,1],[[13,2,1],[13,2,1]]]],[57,1,72,[25,[0,1],[[58,2],[13,2,1]]]]],[41],[60,[5,1],[2],[12],[12],-3],[68,1,2]]],0,[0,4,1,0,-1,2,0,12,2,0,5,1,3],[0,0,0],[-1,15,16],[106,106,107]],[[[9,"barrel2"],[34,"barrel2",[-4,-5,-6],[[124,-2,[0,"3bjJxXquFEprDzuyTrhXJM"]],[153,0.602,2.038,-3,[0,"371DKj0/BOeZN6hG+7U0QA"]]],[1,"0fyDV+lghcvK/uyuvo579R",null,null,null,-1,0]],[166,"barrel2",1,[[21,1,-7,[0,"f5KJL8+EBZqpU2y5lUMawL"],[0],[8,true,true],1]],[1,"714iovsIRfaZBtSoUEf7bF",null,null,null,1,0],[3,0,0.7071067811865475,0,0.7071067811865476],[1,0,90,0]],[80,"Plane1",1,[[103,"Plane<ModelComponent>",1,-8,[0,"28wTq7paRK7obnUuCDhcZy"],[2],[8,true,true],3]],[1,"cag1pbs1BIbrOj6Gas40HR",null,null,null,1,0],[1,0,1.5,0],[3,0.7071067811865475,0,0,0.7071067811865476],[1,0.08,0.08,0.08],[1,90,0,0]],[80,"Plane2",1,[[103,"Plane<ModelComponent>",1,-9,[0,"83FrWaJHdNhpOsV8NtqQtt"],[4],[8,true,true],5]],[1,"41fiEsAi1EcqZJYkG42F14",null,null,null,1,0],[1,0,1.5,0],[3,4.329780281177466e-17,0.7071067811865476,-0.7071067811865475,4.329780281177467e-17],[1,0.08,0.08,0.08],[1,90,180,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,2,0,-2,3,0,-3,4,0,0,2,0,0,3,0,0,4,0,5,1,9],[0,0,0,0,0,0],[-1,3,-1,3,-1,3],[273,274,108,26,108,26]],[[{"name":"headshoot4","rect":{"x":829,"y":1348,"width":56,"height":27},"offset":{"x":0,"y":0.5},"originalSize":{"width":56,"height":28},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"moregame3","rect":{"x":755,"y":1751,"width":120,"height":140},"offset":{"x":0,"y":0},"originalSize":{"width":120,"height":140},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"weapon1"],[71,"weapon1",[-2,-3],[1,"fd0MR2sbFbS6ICX9Wa2JRR",null,null,null,-1,0]],[27,"weapon",1,[[21,1,-4,[0,"16qd3bW5ZXuIzoZVNMd3Xl"],[0],[8,true,true],1]],[1,"1cin8I9kdSR6bGfb62Sy6X",null,null,null,1,0]],[72,"bulletstart",1,[[92,"Cube<ModelComponent>",false,1,[null],-5,[0,"a4lQfiouhNmINNEFDGbVSa"],[8,true,true],2]],[1,"4e/v7J0ORJ1r0BpYnsAduG",null,null,null,1,0],[1,-1.372,0.107,0]]],0,[0,4,1,0,-1,2,0,-2,3,0,0,2,0,0,3,0,5,1,5],[0,0,0],[-1,3,3],[27,275,22]],[[{"name":"resultbg15","rect":{"x":528,"y":1751,"width":58,"height":58},"offset":{"x":0,"y":0},"originalSize":{"width":58,"height":58},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"headshoot"],[96,"headshoot",33554432,[-4,-5,-6],[[3,-2,[0,"57Psqtb5FNcJLUxKh9+l+O"],[5,81,106]],[37,-3,[0,"dc2kZFb2ZGpbCDi+V8t5PR"]]],[1,"d3XOQyu5dGHbNB1ijYpaiG",null,null,null,-1,0],[1,0,400,0]],[16,"bullet",33554432,1,[-8,-9],[[3,-7,[0,"b339aRsbRFaoGXyArd41Cn"],[5,56,27]]],[1,"c2Up3W8wdOI4WxBIc1QgHR",null,null,null,1,0],[1,-180,0,0]],[17,"icon",33554432,2,[[3,-10,[0,"97xLuu/ghIEozd/+RiROp4"],[5,56,27]],[7,-11,[0,"e32UJT0npJjLKr4lGC6Isf"],0],[37,-12,[0,"b60CqY4tdFv7ZulbkRDA8S"]]],[1,"45+kqyEv9MS5xeiEKWvEcm",null,null,null,1,0]],[6,"line",33554432,2,[[3,-13,[0,"04jhVTX1ZHNbFtIq6kfywt"],[5,100,10]],[210,true,0.5,0.1,20,-14,[0,"00XlKbeYVFrIkkyQdECoh8"],1]],[1,"79x4YlshBJZ65IaGTVpBBE",null,null,null,1,0],[1,-28.047,0,0]],[17,"head",33554432,1,[[3,-15,[0,"2733CwZPlLtIVlnfXUUimm"],[5,81,106]],[7,-16,[0,"b0/PMVHcBLdZCFgZN179Yx"],2]],[1,"e29wAQRTVGOaKCwFOja6pl",null,null,null,1,0]],[17,"splash",33554432,1,[[3,-17,[0,"d0JfpQr9pAJL4bjwv1LJfU"],[5,200,79]],[7,-18,[0,"c6r4+OxtdP5KsvY4/4acy2"],3]],[1,"5cy4N+4MdNG5DT3+9aWYkx",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,2,0,-2,5,0,-3,6,0,0,2,0,-1,3,0,-2,4,0,0,3,0,0,3,0,0,3,0,0,4,0,0,4,0,0,5,0,0,5,0,0,6,0,0,6,0,5,1,18],[0,0,0,0],[1,30,1,1],[276,277,278,279]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["9epvIOo4BGSYZYQxevACsj"]}],[2],0,[],[],[]],[[{"name":"weapon4","rect":{"x":959,"y":1175,"width":150,"height":50},"offset":{"x":0,"y":0},"originalSize":{"width":150,"height":50},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"headshoot2","rect":{"x":533,"y":1381,"width":200,"height":79},"offset":{"x":0,"y":0},"originalSize":{"width":200,"height":79},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"weapon1","rect":{"x":959,"y":1227,"width":150,"height":50},"offset":{"x":0,"y":0},"originalSize":{"width":150,"height":50},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"homebg5","rect":{"x":816,"y":1579,"width":98,"height":98},"offset":{"x":0,"y":-0.5},"originalSize":{"width":98,"height":99},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["a2nXuiYyxDNINlgXtoWzml"]}],[2],0,[],[],[]],[[[26,"soundheadshoot",".mp3",1.28],-1],0,0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,2,2,0,0","mipmaps":["a6rnrpHO9OU4kxsQZMoEC7"]}],[2],0,[],[],[]],[[{"name":"img_busy","rect":{"x":0,"y":0,"width":135,"height":135},"offset":{"x":0,"y":0},"originalSize":{"width":135,"height":135},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-67.5,-67.5,0,67.5,-67.5,0,-67.5,67.5,0,67.5,67.5,0],"indexes":[0,1,2,2,1,3],"uv":[0,135,135,135,0,0,135,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-67.5,"y":-67.5,"z":0},"maxPos":{"x":67.5,"y":67.5,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[280]],[[{"name":"settingbg1","rect":{"x":643,"y":403,"width":360,"height":440},"offset":{"x":0,"y":0},"originalSize":{"width":360,"height":440},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"SureAD"],[42,"SureAD",33554432,[-5,-6,-7,-8],[[3,-2,[0,"3ex/Y2AHROy6v3wLfA+LhQ"],[5,640,1136]],[29,45,100,100,-3,[0,"bc+tLwN/RPD7EAQtqtUSBC"]],[56,-4,[0,"55YaVoxCFNiIJ5iGj7Ve4n"]]],[1,"26gHcQ9zVFuJdw432uQlTR",null,null,null,-1,0]],[17,"BG",33554432,1,[[3,-9,[0,"321Clh8uBNDKgqAPD58NjC"],[5,640,1136]],[24,0,-10,[0,"37seEIabpHL5yWVCfiiX5z"],0],[29,45,120,120,-11,[0,"ecYpIxtYVL34ZpMdw7gMDa"]]],[1,"f9JgAJLt1FWJvvvMMkX1sh",null,null,null,1,0]],[6,"btnno",33554432,1,[[3,-12,[0,"f7o1B2JyFOoYglm7PC3f4x"],[5,166,76]],[7,-13,[0,"0exq7CDl5GtrvEqsgvKkwT"],2],[30,1,-14,[0,"00M/MHfFdPapUJxnZv3CkY"],[4,4292072403],3]],[1,"45CBZFPYZDUbD88+GHPbKd",null,null,null,1,0],[1,-120,0,0]],[6,"btnyes",33554432,1,[[3,-15,[0,"09w+L/GTZNfaU6J2qCV8/e"],[5,166,76]],[7,-16,[0,"fdrt9Zys9L8oeT6l8F/crl"],4],[30,1,-17,[0,"f7iH0vtnxLy6xP/Z0lDFGc"],[4,4292072403],5]],[1,"48twEOj/NN5q73w2WmLVpx",null,null,null,1,0],[1,120,0,0]],[6,"adbg1",33554432,1,[[3,-18,[0,"abfc0wmqhHXIafEU1PKnxv"],[5,360,230]],[7,-19,[0,"57kUECSm1ENaZzdKgEQjmx"],1]],[1,"b2B5G97hVI0LFVKaUe2O3w",null,null,null,1,0],[1,0,200,0]]],0,[0,4,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,-2,5,0,-3,3,0,-4,4,0,0,2,0,0,2,0,0,2,0,0,3,0,0,3,0,0,3,0,0,4,0,0,4,0,0,4,0,0,5,0,0,5,0,5,1,19],[0,0,0,0,0,0],[1,1,1,11,1,11],[35,281,109,109,110,110]],[[{"name":"music2","rect":{"x":592,"y":523,"width":40,"height":37},"offset":{"x":0,"y":0.5},"originalSize":{"width":40,"height":40},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"shopbg10","rect":{"x":1125,"y":310,"width":161,"height":19},"offset":{"x":0,"y":0},"originalSize":{"width":161,"height":19},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[154,"builtin-toon",[{"hash":24135924,"name":"builtin-toon|legacy/main-functions/outline-vs:vert|legacy/main-functions/outline-fs:frag","blocks":[{"name":"OutlineVert","stageFlags":1,"binding":0,"members":[{"name":"outlineParams","type":16,"count":1}],"defines":[]},{"name":"OutlineFrag","stageFlags":16,"binding":1,"members":[{"name":"baseColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"baseColorMap","type":28,"count":1,"stageFlags":16,"binding":2,"defines":["USE_BASE_COLOR_MAP"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBias","format":21,"isInstanced":true,"location":11,"defines":["USE_INSTANCING","CC_RECEIVE_SHADOW"]},{"name":"a_sh_linear_const_r","format":44,"isInstanced":true,"location":12,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_g","format":44,"isInstanced":true,"location":13,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_b","format":44,"isInstanced":true,"location":14,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_vertexId","format":11,"location":15,"defines":["CC_USE_MORPH"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCMorph","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_displacementWeights","typename":"vec4","type":16,"count":15,"isArray":true},{"name":"cc_displacementTextureInfo","typename":"vec4","type":16,"count":1}],"defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_jointTextureInfo","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_jointAnimInfo","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_joints","typename":"vec4","type":16,"count":0,"precision":"highp ","isArray":true}],"defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","!CC_USE_REAL_TIME_JOINT_TEXTURE"]},{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["!USE_INSTANCING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","typename":"sampler2D","type":28,"count":1,"stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","typename":"sampler2D","type":28,"count":1,"stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","typename":"sampler2D","type":28,"count":1,"stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","typename":"sampler2D","type":28,"count":1,"precision":"highp ","stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_realtimeJoint","typename":"sampler2D","type":28,"count":1,"precision":"highp ","stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","CC_USE_REAL_TIME_JOINT_TEXTURE"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"OutlineVert","stageFlags":1,"binding":0,"members":[{"name":"outlineParams","type":16,"count":1}],"defines":[]},{"name":"OutlineFrag","stageFlags":16,"binding":1,"members":[{"name":"baseColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"baseColorMap","type":28,"count":1,"stageFlags":16,"binding":2,"defines":["USE_BASE_COLOR_MAP"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_composite_pack_1","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_composite_pack_2","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_composite_pack_3","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON)\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_RECEIVE_SHADOW\n    in vec2 a_localShadowBias;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    in vec4 a_sh_linear_const_r;\n    in vec4 a_sh_linear_const_g;\n    in vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n#endif\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\n#if CC_USE_MORPH\n  layout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n  #endif\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n  vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n  vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n  vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n  }\n  #endif\n  void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n  #if CC_USE_BAKED_ANIMATION\n    layout(std140) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(std140) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    uniform highp sampler2D cc_jointTexture;\n    void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n    {\n      #if USE_INSTANCING\n        highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n      #else\n        highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n      #endif\n      invSize = cc_jointTextureInfo.w;\n      highp float tempY = floor(temp * invSize);\n      x = floor(temp - tempY * cc_jointTextureInfo.x);\n      y = (tempY + 0.5) * invSize;\n    }\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      uniform highp sampler2D cc_realtimeJoint;\n    #else\n      layout(std140) uniform CCSkinning {\n        highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n      };\n    #endif\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(3.0, i, x, y, invSize);\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(12.0, i, x, y, invSize);\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          float x = i;\n          vec4 v1 = texture(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n          vec4 v2 = texture(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n          vec4 v3 = texture(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n         float x = 4.0 * i;\n          vec4 v1 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      mat4 getJointMatrix (float i) {\n        int idx = int(i);\n        vec4 v1 = cc_joints[idx * 3];\n        vec4 v2 = cc_joints[idx * 3 + 1];\n        vec4 v3 = cc_joints[idx * 3 + 2];\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    mat4 m = skinMatrix();\n    position = m * position;\n    normal = (m * vec4(normal, 0.0)).xyz;\n    tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  #if CC_USE_MORPH\n    applyMorph(In.position, In.normal, In.tangent);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In.position, In.normal, In.tangent);\n  #endif\n}\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_debug_view_mode;\n  mediump vec4 cc_debug_view_composite_pack_1;\n  mediump vec4 cc_debug_view_composite_pack_2;\n  mediump vec4 cc_debug_view_composite_pack_3;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if !USE_INSTANCING\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n  };\n#endif\nvoid CCGetWorldMatrix(out mat4 matWorld)\n{\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n  #else\n    matWorld = cc_matWorld;\n  #endif\n}\nout vec2 v_uv;\nlayout(std140) uniform OutlineVert {\n  vec4 outlineParams;\n};\nvec4 vert () {\n  StandardVertInput In;\n  CCVertInput(In);\n  mat4 matWorld;\n  CCGetWorldMatrix(matWorld);\n  float width = outlineParams.x * 0.001;\n  #if USE_POSITION_SCALING\n    vec3 dir = normalize(In.position.xyz);\n    float flip = dot(dir, normalize(In.normal)) < 0.0 ? -1.0 : 1.0;\n    In.position.xyz += flip * dir * width * 2.0;\n    vec4 pos = cc_matProj * (cc_matView * matWorld) * In.position;\n  #else\n    In.position.xyz += normalize(In.normal) * width;\n    vec4 pos = cc_matProj * (cc_matView * matWorld) * In.position;\n  #endif\n  pos.z -= outlineParams.y * 0.002;\n  v_uv = a_texCoord;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_debug_view_mode;\n  mediump vec4 cc_debug_view_composite_pack_1;\n  mediump vec4 cc_debug_view_composite_pack_2;\n  mediump vec4 cc_debug_view_composite_pack_3;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_WORLD_POS CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR CC_SURFACES_DEBUG_VIEW_WORLD_POS + 1\n#define CC_SURFACES_DEBUG_VIEW_FACE_SIDE CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR + 1\n#define CC_SURFACES_DEBUG_VIEW_UV0 CC_SURFACES_DEBUG_VIEW_FACE_SIDE + 1\n#define CC_SURFACES_DEBUG_VIEW_UV1 CC_SURFACES_DEBUG_VIEW_UV0 + 1\n#define CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP CC_SURFACES_DEBUG_VIEW_UV1 + 1\n#define CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP + 1\n#define CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_BASE_COLOR CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR CC_SURFACES_DEBUG_VIEW_BASE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_TRANSPARENCY CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_METALLIC CC_SURFACES_DEBUG_VIEW_TRANSPARENCY + 1\n#define CC_SURFACES_DEBUG_VIEW_ROUGHNESS CC_SURFACES_DEBUG_VIEW_METALLIC + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY CC_SURFACES_DEBUG_VIEW_ROUGHNESS + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_ALL CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE CC_SURFACES_DEBUG_VIEW_DIRECT_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_ALL CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_EMISSIVE CC_SURFACES_DEBUG_VIEW_ENV_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_LIGHT_MAP CC_SURFACES_DEBUG_VIEW_EMISSIVE + 1\n#define CC_SURFACES_DEBUG_VIEW_SHADOW CC_SURFACES_DEBUG_VIEW_LIGHT_MAP + 1\n#define CC_SURFACES_DEBUG_VIEW_AO CC_SURFACES_DEBUG_VIEW_SHADOW + 1\n#define CC_SURFACES_DEBUG_VIEW_FOG CC_SURFACES_DEBUG_VIEW_AO + 1\n#define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#define IS_DEBUG_VIEW_ENABLE_WITH_CAMERA (cc_surfaceTransform.y != 3.0)\n#define IS_DEBUG_VIEW_LIGHTING_ENABLE_WITH_ALBEDO ((cc_debug_view_mode.y > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_MISC_ENABLE_CSM_LAYER_COLORATION ((cc_debug_view_mode.z > 0.0) && IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_DIFFUSE ((cc_debug_view_composite_pack_1.x > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_SPECULAR ((cc_debug_view_composite_pack_1.y > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_DIFFUSE ((cc_debug_view_composite_pack_1.z > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_SPECULAR ((cc_debug_view_composite_pack_1.w > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_EMISSIVE ((cc_debug_view_composite_pack_2.x > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_LIGHT_MAP ((cc_debug_view_composite_pack_2.y > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_SHADOW ((cc_debug_view_composite_pack_2.z > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_AO ((cc_debug_view_composite_pack_2.w > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_NORMAL_MAP ((cc_debug_view_composite_pack_3.x > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_FOG ((cc_debug_view_composite_pack_3.y > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_TONE_MAPPING ((cc_debug_view_composite_pack_3.z > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION ((cc_debug_view_composite_pack_3.w > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\nvec3 SRGBToLinear (vec3 gamma) {\n#ifdef CC_USE_SURFACE_SHADER\n  #if CC_USE_DEBUG_VIEW == CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    if (!IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION) {\n      return gamma;\n    }\n  #endif\n#endif\n  return gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nin vec2 v_uv;\nlayout(std140) uniform OutlineFrag {\n  vec4 baseColor;\n};\n#if USE_BASE_COLOR_MAP\n  uniform sampler2D baseColorMap;\n#endif\nvec4 frag () {\n  vec4 color = baseColor * cc_mainLitColor;\n  #if USE_BASE_COLOR_MAP\n    vec4 texColor = texture(baseColorMap, v_uv);\n    texColor.rgb = SRGBToLinear(texColor.rgb);\n    color *= texColor;\n  #endif\n  return CCFragOutput(vec4(color.rgb, 1.0));\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON)\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_RECEIVE_SHADOW\n    attribute vec2 a_localShadowBias;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    attribute vec4 a_sh_linear_const_r;\n    attribute vec4 a_sh_linear_const_g;\n    attribute vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n#endif\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\n#if CC_USE_MORPH\n  uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n  #endif\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n        return texture2D(tex, uv);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture2D(tex, x)),\n        decode32(texture2D(tex, y)),\n        decode32(texture2D(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n  vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n  vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n  vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n  }\n  #endif\n  void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n  #if CC_USE_BAKED_ANIMATION\n    uniform highp vec4 cc_jointTextureInfo;\n    uniform highp vec4 cc_jointAnimInfo;\n    uniform highp sampler2D cc_jointTexture;\n    void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n    {\n      #if USE_INSTANCING\n        highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n      #else\n        highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n      #endif\n      invSize = cc_jointTextureInfo.w;\n      highp float tempY = floor(temp * invSize);\n      x = floor(temp - tempY * cc_jointTextureInfo.x);\n      y = (tempY + 0.5) * invSize;\n    }\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      uniform highp sampler2D cc_realtimeJoint;\n    #else\n      uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n    #endif\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(3.0, i, x, y, invSize);\n        vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(12.0, i, x, y, invSize);\n        vec4 v1 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          float x = i;\n          vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n          vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n          vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n         float x = 4.0 * i;\n          vec4 v1 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      mat4 getJointMatrix (float i) {\n        int idx = int(i);\n        vec4 v1 = cc_joints[idx * 3];\n        vec4 v2 = cc_joints[idx * 3 + 1];\n        vec4 v3 = cc_joints[idx * 3 + 2];\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    mat4 m = skinMatrix();\n    position = m * position;\n    normal = (m * vec4(normal, 0.0)).xyz;\n    tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  #if CC_USE_MORPH\n    applyMorph(In.position, In.normal, In.tangent);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In.position, In.normal, In.tangent);\n  #endif\n}\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n#if !USE_INSTANCING\n  uniform highp mat4 cc_matWorld;\n#endif\nvoid CCGetWorldMatrix(out mat4 matWorld)\n{\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n  #else\n    matWorld = cc_matWorld;\n  #endif\n}\nvarying vec2 v_uv;\n   uniform vec4 outlineParams;\nvec4 vert () {\n  StandardVertInput In;\n  CCVertInput(In);\n  mat4 matWorld;\n  CCGetWorldMatrix(matWorld);\n  float width = outlineParams.x * 0.001;\n  #if USE_POSITION_SCALING\n    vec3 dir = normalize(In.position.xyz);\n    float flip = dot(dir, normalize(In.normal)) < 0.0 ? -1.0 : 1.0;\n    In.position.xyz += flip * dir * width * 2.0;\n    vec4 pos = cc_matProj * (cc_matView * matWorld) * In.position;\n  #else\n    In.position.xyz += normalize(In.normal) * width;\n    vec4 pos = cc_matProj * (cc_matView * matWorld) * In.position;\n  #endif\n  pos.z -= outlineParams.y * 0.002;\n  v_uv = a_texCoord;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform mediump vec4 cc_debug_view_mode;\n  uniform mediump vec4 cc_debug_view_composite_pack_1;\n  uniform mediump vec4 cc_debug_view_composite_pack_2;\n  uniform mediump vec4 cc_debug_view_composite_pack_3;\nuniform mediump vec4 cc_surfaceTransform;\n  uniform mediump vec4 cc_mainLitColor;\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_WORLD_POS CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR CC_SURFACES_DEBUG_VIEW_WORLD_POS + 1\n#define CC_SURFACES_DEBUG_VIEW_FACE_SIDE CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR + 1\n#define CC_SURFACES_DEBUG_VIEW_UV0 CC_SURFACES_DEBUG_VIEW_FACE_SIDE + 1\n#define CC_SURFACES_DEBUG_VIEW_UV1 CC_SURFACES_DEBUG_VIEW_UV0 + 1\n#define CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP CC_SURFACES_DEBUG_VIEW_UV1 + 1\n#define CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP + 1\n#define CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_BASE_COLOR CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR CC_SURFACES_DEBUG_VIEW_BASE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_TRANSPARENCY CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_METALLIC CC_SURFACES_DEBUG_VIEW_TRANSPARENCY + 1\n#define CC_SURFACES_DEBUG_VIEW_ROUGHNESS CC_SURFACES_DEBUG_VIEW_METALLIC + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY CC_SURFACES_DEBUG_VIEW_ROUGHNESS + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_ALL CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE CC_SURFACES_DEBUG_VIEW_DIRECT_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_ALL CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_EMISSIVE CC_SURFACES_DEBUG_VIEW_ENV_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_LIGHT_MAP CC_SURFACES_DEBUG_VIEW_EMISSIVE + 1\n#define CC_SURFACES_DEBUG_VIEW_SHADOW CC_SURFACES_DEBUG_VIEW_LIGHT_MAP + 1\n#define CC_SURFACES_DEBUG_VIEW_AO CC_SURFACES_DEBUG_VIEW_SHADOW + 1\n#define CC_SURFACES_DEBUG_VIEW_FOG CC_SURFACES_DEBUG_VIEW_AO + 1\n#define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#define IS_DEBUG_VIEW_ENABLE_WITH_CAMERA (cc_surfaceTransform.y != 3.0)\n#define IS_DEBUG_VIEW_LIGHTING_ENABLE_WITH_ALBEDO ((cc_debug_view_mode.y > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_MISC_ENABLE_CSM_LAYER_COLORATION ((cc_debug_view_mode.z > 0.0) && IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_DIFFUSE ((cc_debug_view_composite_pack_1.x > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_SPECULAR ((cc_debug_view_composite_pack_1.y > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_DIFFUSE ((cc_debug_view_composite_pack_1.z > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_SPECULAR ((cc_debug_view_composite_pack_1.w > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_EMISSIVE ((cc_debug_view_composite_pack_2.x > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_LIGHT_MAP ((cc_debug_view_composite_pack_2.y > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_SHADOW ((cc_debug_view_composite_pack_2.z > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_AO ((cc_debug_view_composite_pack_2.w > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_NORMAL_MAP ((cc_debug_view_composite_pack_3.x > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_FOG ((cc_debug_view_composite_pack_3.y > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_TONE_MAPPING ((cc_debug_view_composite_pack_3.z > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION ((cc_debug_view_composite_pack_3.w > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\nvec3 SRGBToLinear (vec3 gamma) {\n#ifdef CC_USE_SURFACE_SHADER\n  #if CC_USE_DEBUG_VIEW == CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    if (!IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION) {\n      return gamma;\n    }\n  #endif\n#endif\n  return gamma * gamma;\n}\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nvarying vec2 v_uv;\n   uniform vec4 baseColor;\n#if USE_BASE_COLOR_MAP\n  uniform sampler2D baseColorMap;\n#endif\nvec4 frag () {\n  vec4 color = baseColor * cc_mainLitColor;\n  #if USE_BASE_COLOR_MAP\n    vec4 texColor = texture2D(baseColorMap, v_uv);\n    texColor.rgb = SRGBToLinear(texColor.rgb);\n    color *= texColor;\n  #endif\n  return CCFragOutput(vec4(color.rgb, 1.0));\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","!CC_USE_REAL_TIME_JOINT_TEXTURE"]},{"name":"CCLocal","defines":["!USE_INSTANCING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_realtimeJoint","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","CC_USE_REAL_TIME_JOINT_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":73,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":45}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_LIGHT_PROBE","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"},{"name":"CC_MORPH_TARGET_COUNT","type":"number","range":[2,8]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean"},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean"},{"name":"CC_USE_REAL_TIME_JOINT_TEXTURE","type":"boolean"},{"name":"USE_POSITION_SCALING","type":"boolean"},{"name":"CC_USE_DEBUG_VIEW","type":"number","range":[0,3]},{"name":"USE_BASE_COLOR_MAP","type":"boolean"}]},{"hash":772802800,"name":"builtin-toon|toon-vs:vert|toon-fs:frag","blocks":[{"name":"Constants","stageFlags":17,"binding":0,"members":[{"name":"tilingOffset","type":16,"count":1},{"name":"baseColor","type":16,"count":1},{"name":"colorScaleAndCutoff","type":16,"count":1},{"name":"shadeColor1","type":16,"count":1},{"name":"shadeColor2","type":16,"count":1},{"name":"specular","type":16,"count":1},{"name":"shadeParams","type":16,"count":1},{"name":"miscParams","type":16,"count":1},{"name":"emissive","type":16,"count":1},{"name":"emissiveScaleAndStrenth","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"baseColorMap","type":28,"count":1,"stageFlags":16,"binding":1,"defines":["USE_BASE_COLOR_MAP"]},{"name":"normalMap","type":28,"count":1,"stageFlags":16,"binding":2,"defines":["USE_NORMAL_MAP"]},{"name":"shadeMap1","type":28,"count":1,"stageFlags":16,"binding":3,"defines":["USE_1ST_SHADE_MAP"]},{"name":"shadeMap2","type":28,"count":1,"stageFlags":16,"binding":4,"defines":["USE_2ND_SHADE_MAP"]},{"name":"specularMap","type":28,"count":1,"stageFlags":16,"binding":5,"defines":["USE_SPECULAR_MAP"]},{"name":"emissiveMap","type":28,"count":1,"stageFlags":16,"binding":6,"defines":["USE_EMISSIVE_MAP"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBias","format":21,"isInstanced":true,"location":11,"defines":["USE_INSTANCING","CC_RECEIVE_SHADOW"]},{"name":"a_sh_linear_const_r","format":44,"isInstanced":true,"location":12,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_g","format":44,"isInstanced":true,"location":13,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_b","format":44,"isInstanced":true,"location":14,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_vertexId","format":11,"location":15,"defines":["CC_USE_MORPH"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCMorph","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_displacementWeights","typename":"vec4","type":16,"count":15,"isArray":true},{"name":"cc_displacementTextureInfo","typename":"vec4","type":16,"count":1}],"defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_jointTextureInfo","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_jointAnimInfo","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_joints","typename":"vec4","type":16,"count":0,"precision":"highp ","isArray":true}],"defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","!CC_USE_REAL_TIME_JOINT_TEXTURE"]},{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["!USE_INSTANCING"]},{"name":"CCForwardLight","stageFlags":16,"tags":{"builtin":"local"},"members":[{"name":"cc_lightPos","typename":"vec4","type":16,"count":0,"precision":"highp ","isArray":true},{"name":"cc_lightColor","typename":"vec4","type":16,"count":0,"isArray":true},{"name":"cc_lightSizeRangeAngle","typename":"vec4","type":16,"count":0,"isArray":true},{"name":"cc_lightDir","typename":"vec4","type":16,"count":0,"isArray":true}],"defines":["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","typename":"sampler2D","type":28,"count":1,"stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","typename":"sampler2D","type":28,"count":1,"stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","typename":"sampler2D","type":28,"count":1,"stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","typename":"sampler2D","type":28,"count":1,"precision":"highp ","stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_realtimeJoint","typename":"sampler2D","type":28,"count":1,"precision":"highp ","stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","CC_USE_REAL_TIME_JOINT_TEXTURE"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"Constants","stageFlags":17,"binding":0,"members":[{"name":"tilingOffset","type":16,"count":1},{"name":"baseColor","type":16,"count":1},{"name":"colorScaleAndCutoff","type":16,"count":1},{"name":"shadeColor1","type":16,"count":1},{"name":"shadeColor2","type":16,"count":1},{"name":"specular","type":16,"count":1},{"name":"shadeParams","type":16,"count":1},{"name":"miscParams","type":16,"count":1},{"name":"emissive","type":16,"count":1},{"name":"emissiveScaleAndStrenth","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"baseColorMap","type":28,"count":1,"stageFlags":16,"binding":1,"defines":["USE_BASE_COLOR_MAP"]},{"name":"normalMap","type":28,"count":1,"stageFlags":16,"binding":2,"defines":["USE_NORMAL_MAP"]},{"name":"shadeMap1","type":28,"count":1,"stageFlags":16,"binding":3,"defines":["USE_1ST_SHADE_MAP"]},{"name":"shadeMap2","type":28,"count":1,"stageFlags":16,"binding":4,"defines":["USE_2ND_SHADE_MAP"]},{"name":"specularMap","type":28,"count":1,"stageFlags":16,"binding":5,"defines":["USE_SPECULAR_MAP"]},{"name":"emissiveMap","type":28,"count":1,"stageFlags":16,"binding":6,"defines":["USE_EMISSIVE_MAP"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_composite_pack_1","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_composite_pack_2","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_composite_pack_3","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCShadow","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matLightView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matLightViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_shadowInvProjDepthInfo","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_shadowProjDepthInfo","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_shadowProjInfo","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_shadowNFLSInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_shadowWHPBInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_shadowLPNNInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_shadowColor","typename":"vec4","type":16,"count":1,"precision":"lowp "},{"name":"cc_planarNDInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCSM","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_csmViewDir0","typename":"vec4","type":16,"count":4,"precision":"highp ","isArray":true},{"name":"cc_csmViewDir1","typename":"vec4","type":16,"count":4,"precision":"highp ","isArray":true},{"name":"cc_csmViewDir2","typename":"vec4","type":16,"count":4,"precision":"highp ","isArray":true},{"name":"cc_csmAtlas","typename":"vec4","type":16,"count":4,"precision":"highp ","isArray":true},{"name":"cc_matCSMViewProj","typename":"mat4","type":25,"count":4,"precision":"highp ","isArray":true},{"name":"cc_csmProjDepthInfo","typename":"vec4","type":16,"count":4,"precision":"highp ","isArray":true},{"name":"cc_csmProjInfo","typename":"vec4","type":16,"count":4,"precision":"highp ","isArray":true},{"name":"cc_csmSplitsInfo","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["CC_SUPPORT_CASCADED_SHADOW_MAP"]}],"samplerTextures":[{"name":"cc_shadowMap","typename":"sampler2D","type":28,"count":1,"precision":"highp ","stageFlags":17,"tags":{"builtin":"global"},"defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_spotShadowMap","typename":"sampler2D","type":28,"count":1,"precision":"highp ","stageFlags":17,"tags":{"builtin":"global"},"defines":["CC_RECEIVE_SHADOW"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON)\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_RECEIVE_SHADOW\n    in vec2 a_localShadowBias;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    in vec4 a_sh_linear_const_r;\n    in vec4 a_sh_linear_const_g;\n    in vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n#endif\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\n#if CC_USE_MORPH\n  layout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n  #endif\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n  vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n  vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n  vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n  }\n  #endif\n  void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n  #if CC_USE_BAKED_ANIMATION\n    layout(std140) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(std140) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    uniform highp sampler2D cc_jointTexture;\n    void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n    {\n      #if USE_INSTANCING\n        highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n      #else\n        highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n      #endif\n      invSize = cc_jointTextureInfo.w;\n      highp float tempY = floor(temp * invSize);\n      x = floor(temp - tempY * cc_jointTextureInfo.x);\n      y = (tempY + 0.5) * invSize;\n    }\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      uniform highp sampler2D cc_realtimeJoint;\n    #else\n      layout(std140) uniform CCSkinning {\n        highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n      };\n    #endif\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(3.0, i, x, y, invSize);\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(12.0, i, x, y, invSize);\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          float x = i;\n          vec4 v1 = texture(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n          vec4 v2 = texture(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n          vec4 v3 = texture(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n         float x = 4.0 * i;\n          vec4 v1 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      mat4 getJointMatrix (float i) {\n        int idx = int(i);\n        vec4 v1 = cc_joints[idx * 3];\n        vec4 v2 = cc_joints[idx * 3 + 1];\n        vec4 v3 = cc_joints[idx * 3 + 2];\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    mat4 m = skinMatrix();\n    position = m * position;\n    normal = (m * vec4(normal, 0.0)).xyz;\n    tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  #if CC_USE_MORPH\n    applyMorph(In.position, In.normal, In.tangent);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In.position, In.normal, In.tangent);\n  #endif\n}\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_debug_view_mode;\n  mediump vec4 cc_debug_view_composite_pack_1;\n  mediump vec4 cc_debug_view_composite_pack_2;\n  mediump vec4 cc_debug_view_composite_pack_3;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if !USE_INSTANCING\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n  };\n#endif\nvoid CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n{\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n    matWorldIT = matWorld;\n  #else\n    matWorld = cc_matWorld;\n    matWorldIT = cc_matWorldIT;\n  #endif\n}\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 baseColor;\n  vec4 colorScaleAndCutoff;\n  vec4 shadeColor1;\n  vec4 shadeColor2;\n  vec4 specular;\n  vec4 shadeParams;\n  vec4 miscParams;\n  vec4 emissive;\n  vec4 emissiveScaleAndStrenth;\n};\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  mediump vec4 cc_shadowNFLSInfo;\n  mediump vec4 cc_shadowWHPBInfo;\n  mediump vec4 cc_shadowLPNNInfo;\n  lowp vec4 cc_shadowColor;\n  mediump vec4 cc_planarNDInfo;\n};\n#if CC_SUPPORT_CASCADED_SHADOW_MAP\n  layout(std140) uniform CCCSM {\n    highp vec4 cc_csmViewDir0[4];\n    highp vec4 cc_csmViewDir1[4];\n    highp vec4 cc_csmViewDir2[4];\n    highp vec4 cc_csmAtlas[4];\n    highp mat4 cc_matCSMViewProj[4];\n    highp vec4 cc_csmProjDepthInfo[4];\n    highp vec4 cc_csmProjInfo[4];\n    highp vec4 cc_csmSplitsInfo;\n  };\n#endif\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotShadowMap;\n  #if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #else\n  #endif\n#endif\n#if CC_RECEIVE_SHADOW\nvec2 CCGetShadowBias()\n{\n  #if USE_INSTANCING\n    return vec2(a_localShadowBias.x + cc_shadowWHPBInfo.w, a_localShadowBias.y + cc_shadowLPNNInfo.z);\n  #else\n    return vec2(cc_localShadowBias.x + cc_shadowWHPBInfo.w, cc_localShadowBias.y + cc_shadowLPNNInfo.z);\n  #endif\n}\n#endif\nout vec3 v_position;\nout vec2 v_uv;\nout mediump vec3 v_normal;\n#if CC_RECEIVE_SHADOW\n  out mediump vec2 v_shadowBias;\n#endif\n#if USE_NORMAL_MAP\n  out mediump vec4 v_tangent;\n#endif\nvec4 vert () {\n  StandardVertInput In;\n  CCVertInput(In);\n  mat4 matWorld, matWorldIT;\n  CCGetWorldMatrixFull(matWorld, matWorldIT);\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if CC_RECEIVE_SHADOW\n    v_shadowBias = CCGetShadowBias();\n  #endif\n  v_normal = (matWorldIT * vec4(In.normal, 0.0)).xyz;\n  #if USE_NORMAL_MAP\n    v_tangent.xyz = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_tangent.w = In.tangent.w;\n  #endif\n  v_shadowPos = cc_matLightViewProj * pos;\n  return cc_matProj * (cc_matView * matWorld) * In.position;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_debug_view_mode;\n  mediump vec4 cc_debug_view_composite_pack_1;\n  mediump vec4 cc_debug_view_composite_pack_2;\n  mediump vec4 cc_debug_view_composite_pack_3;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON)\nhighp float unpackHighpData (float mainPart, float modPart) {\n  highp float data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\n  highp float data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\n  highp float divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\n  highp vec2 data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\n  highp vec2 data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\n  highp vec2 divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\n  highp vec3 data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\n  highp vec3 data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\n  highp vec3 divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\n  highp vec4 data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\n  highp vec4 data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\n  highp vec4 divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nstruct ToonSurface {\n  vec4 baseColor;\n  vec4 specular;\n  #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n  vec3 position, position_fract_part;\n  #else\n  vec3 position;\n  #endif\n  vec3 normal;\n  vec3 shade1;\n  vec3 shade2;\n  vec3 emissive;\n  float baseStep;\n  float baseFeather;\n  float shadeStep;\n  float shadeFeather;\n  float shadowCover;\n  #if CC_RECEIVE_SHADOW\n    vec2 shadowBias;\n  #endif\n};\n#if CC_FORWARD_ADD\n  #if CC_PIPELINE_TYPE == 0\n    #define LIGHTS_PER_PASS 1\n  #else\n    #define LIGHTS_PER_PASS 10\n  #endif\n  #if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\n  layout(std140) uniform CCForwardLight {\n    highp vec4 cc_lightPos[LIGHTS_PER_PASS];\n    vec4 cc_lightColor[LIGHTS_PER_PASS];\n    vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\n    vec4 cc_lightDir[LIGHTS_PER_PASS];\n  };\n  #endif\n  float SmoothDistAtt (float distSqr, float invSqrAttRadius) {\n    float factor = distSqr * invSqrAttRadius;\n    float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n    return smoothFactor * smoothFactor;\n  }\n  float GetDistAtt (float distSqr, float invSqrAttRadius) {\n    float attenuation = 1.0 / max(distSqr, 0.01*0.01);\n    attenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\n    return attenuation;\n  }\n  float GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\n    float cd = dot(litDir, L);\n    float attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\n    return (attenuation * attenuation);\n  }\n  vec4 CCToonShading (ToonSurface s) {\n    vec3 position;\n    #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n    position = unpackHighpData(s.position, s.position_fract_part);\n    #else\n    position = s.position;\n    #endif\n    vec3 V = normalize(cc_cameraPos.xyz - position);\n    vec3 N = normalize(s.normal);\n    float specularWeight = 1.0 - pow(s.specular.a, 5.0);\n    vec3 finalColor = vec3(0.0);\n    for (int i = 0; i < LIGHTS_PER_PASS; i++) {\n      vec3 SLU = cc_lightPos[i].xyz - position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = 0.5 * dot(N, SL) + 0.5;\n      float SNH = 0.5 * dot(N, SH) + 0.5;\n      float distSqr = dot(SLU, SLU);\n      float litRadius = cc_lightSizeRangeAngle[i].x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = litRadiusSqr / max(litRadiusSqr , distSqr);\n      float attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 diffuse = mix(s.shade1, s.shade2,\n        clamp(1.0 + (s.shadeStep - s.shadeFeather - SNL) / s.shadeFeather, 0.0, 1.0));\n      diffuse = mix(s.baseColor.rgb, diffuse,\n        clamp(1.0 + (s.baseStep - s.baseFeather - SNL) / s.baseFeather, 0.0, 1.0));\n      float specularMask = step(specularWeight, SNH);\n      vec3 specular = s.specular.rgb * specularMask;\n      if (cc_lightPos[i].w > 0.0) {\n        float cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\n        float cosOuter = cc_lightSizeRangeAngle[i].z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n      }\n      finalColor += SNL * cc_lightColor[i].rgb * cc_lightColor[i].a * illum * att * s.baseStep * (diffuse + specular);\n    }\n    return vec4(finalColor, 0.0);\n  }\n#else\n  #if CC_RECEIVE_SHADOW\n    in highp vec4 v_shadowPos;\n    layout(std140) uniform CCShadow {\n      highp mat4 cc_matLightView;\n      highp mat4 cc_matLightViewProj;\n      highp vec4 cc_shadowInvProjDepthInfo;\n      highp vec4 cc_shadowProjDepthInfo;\n      highp vec4 cc_shadowProjInfo;\n      mediump vec4 cc_shadowNFLSInfo;\n      mediump vec4 cc_shadowWHPBInfo;\n      mediump vec4 cc_shadowLPNNInfo;\n      lowp vec4 cc_shadowColor;\n      mediump vec4 cc_planarNDInfo;\n    };\n    #if CC_SUPPORT_CASCADED_SHADOW_MAP\n      layout(std140) uniform CCCSM {\n        highp vec4 cc_csmViewDir0[4];\n        highp vec4 cc_csmViewDir1[4];\n        highp vec4 cc_csmViewDir2[4];\n        highp vec4 cc_csmAtlas[4];\n        highp mat4 cc_matCSMViewProj[4];\n        highp vec4 cc_csmProjDepthInfo[4];\n        highp vec4 cc_csmProjInfo[4];\n        highp vec4 cc_csmSplitsInfo;\n      };\n    #endif\n    #if CC_RECEIVE_SHADOW\n      uniform highp sampler2D cc_shadowMap;\n      uniform highp sampler2D cc_spotShadowMap;\n      float NativePCFShadowFactorHard (vec3 shadowNDCPos, sampler2D shadowMap, vec2 shadowMapResolution)\n      {\n        #if CC_SHADOWMAP_FORMAT == 1\n          return step(shadowNDCPos.z, dot(texture(shadowMap, shadowNDCPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n        #else\n          return step(shadowNDCPos.z, texture(shadowMap, shadowNDCPos.xy).x);\n        #endif\n      }\n      float NativePCFShadowFactorSoft (vec3 shadowNDCPos, sampler2D shadowMap, vec2 shadowMapResolution)\n      {\n        vec2 oneTap = 1.0 / shadowMapResolution;\n        vec2 shadowNDCPos_offset = shadowNDCPos.xy + oneTap;\n        float block0, block1, block2, block3;\n        #if CC_SHADOWMAP_FORMAT == 1\n          block0 = step(shadowNDCPos.z, dot(texture(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block1 = step(shadowNDCPos.z, dot(texture(shadowMap, vec2(shadowNDCPos_offset.x, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block2 = step(shadowNDCPos.z, dot(texture(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block3 = step(shadowNDCPos.z, dot(texture(shadowMap, vec2(shadowNDCPos_offset.x, shadowNDCPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n        #else\n          block0 = step(shadowNDCPos.z, texture(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos.y)).x);\n          block1 = step(shadowNDCPos.z, texture(shadowMap, vec2(shadowNDCPos_offset.x, shadowNDCPos.y)).x);\n          block2 = step(shadowNDCPos.z, texture(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset.y)).x);\n          block3 = step(shadowNDCPos.z, texture(shadowMap, vec2(shadowNDCPos_offset.x, shadowNDCPos_offset.y)).x);\n        #endif\n        float coefX   = mod(shadowNDCPos.x, oneTap.x) * shadowMapResolution.x;\n        float resultX = mix(block0, block1, coefX);\n        float resultY = mix(block2, block3, coefX);\n        float coefY   = mod(shadowNDCPos.y, oneTap.y) * shadowMapResolution.y;\n        return mix(resultX, resultY, coefY);\n      }\n      float NativePCFShadowFactorSoft3X (vec3 shadowNDCPos, sampler2D shadowMap, vec2 shadowMapResolution)\n      {\n        vec2 oneTap = 1.0 / shadowMapResolution;\n        float shadowNDCPos_offset_L = shadowNDCPos.x - oneTap.x;\n        float shadowNDCPos_offset_R = shadowNDCPos.x + oneTap.x;\n        float shadowNDCPos_offset_U = shadowNDCPos.y - oneTap.y;\n        float shadowNDCPos_offset_D = shadowNDCPos.y + oneTap.y;\n        float block0, block1, block2, block3, block4, block5, block6, block7, block8;\n        #if CC_SHADOWMAP_FORMAT == 1\n          block0 = step(shadowNDCPos.z, dot(texture(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block1 = step(shadowNDCPos.z, dot(texture(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block2 = step(shadowNDCPos.z, dot(texture(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block3 = step(shadowNDCPos.z, dot(texture(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block4 = step(shadowNDCPos.z, dot(texture(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block5 = step(shadowNDCPos.z, dot(texture(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block6 = step(shadowNDCPos.z, dot(texture(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block7 = step(shadowNDCPos.z, dot(texture(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block8 = step(shadowNDCPos.z, dot(texture(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n        #else\n          block0 = step(shadowNDCPos.z, texture(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos_offset_U)).x);\n          block1 = step(shadowNDCPos.z, texture(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset_U)).x);\n          block2 = step(shadowNDCPos.z, texture(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos_offset_U)).x);\n          block3 = step(shadowNDCPos.z, texture(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos.y)).x);\n          block4 = step(shadowNDCPos.z, texture(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos.y)).x);\n          block5 = step(shadowNDCPos.z, texture(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos.y)).x);\n          block6 = step(shadowNDCPos.z, texture(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos_offset_D)).x);\n          block7 = step(shadowNDCPos.z, texture(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset_D)).x);\n          block8 = step(shadowNDCPos.z, texture(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos_offset_D)).x);\n        #endif\n        float coefX = mod(shadowNDCPos.x, oneTap.x) * shadowMapResolution.x;\n        float coefY = mod(shadowNDCPos.y, oneTap.y) * shadowMapResolution.y;\n        float shadow = 0.0;\n        float resultX = mix(block0, block1, coefX);\n        float resultY = mix(block3, block4, coefX);\n        shadow += mix(resultX , resultY, coefY);\n        resultX = mix(block1, block2, coefX);\n        resultY = mix(block4, block5, coefX);\n        shadow += mix(resultX , resultY, coefY);\n        resultX = mix(block3, block4, coefX);\n        resultY = mix(block6, block7, coefX);\n        shadow += mix(resultX, resultY, coefY);\n        resultX = mix(block4, block5, coefX);\n        resultY = mix(block7, block8, coefX);\n        shadow += mix(resultX, resultY, coefY);\n        return shadow * 0.25;\n      }\n      float NativePCFShadowFactorSoft5X (vec3 shadowNDCPos, sampler2D shadowMap, vec2 shadowMapResolution)\n      {\n        vec2 oneTap = 1.0 / shadowMapResolution;\n        vec2 twoTap = oneTap * 2.0;\n        vec2 offset1 = shadowNDCPos.xy + vec2(-twoTap.x, -twoTap.y);\n        vec2 offset2 = shadowNDCPos.xy + vec2(-oneTap.x, -twoTap.y);\n        vec2 offset3 = shadowNDCPos.xy + vec2(0.0, -twoTap.y);\n        vec2 offset4 = shadowNDCPos.xy + vec2(oneTap.x, -twoTap.y);\n        vec2 offset5 = shadowNDCPos.xy + vec2(twoTap.x, -twoTap.y);\n        vec2 offset6 = shadowNDCPos.xy + vec2(-twoTap.x, -oneTap.y);\n        vec2 offset7 = shadowNDCPos.xy + vec2(-oneTap.x, -oneTap.y);\n        vec2 offset8 = shadowNDCPos.xy + vec2(0.0, -oneTap.y);\n        vec2 offset9 = shadowNDCPos.xy + vec2(oneTap.x, -oneTap.y);\n        vec2 offset10 = shadowNDCPos.xy + vec2(twoTap.x, -oneTap.y);\n        vec2 offset11 = shadowNDCPos.xy + vec2(-twoTap.x, 0.0);\n        vec2 offset12 = shadowNDCPos.xy + vec2(-oneTap.x, 0.0);\n        vec2 offset13 = shadowNDCPos.xy + vec2(0.0, 0.0);\n        vec2 offset14 = shadowNDCPos.xy + vec2(oneTap.x, 0.0);\n        vec2 offset15 = shadowNDCPos.xy + vec2(twoTap.x, 0.0);\n        vec2 offset16 = shadowNDCPos.xy + vec2(-twoTap.x, oneTap.y);\n        vec2 offset17 = shadowNDCPos.xy + vec2(-oneTap.x, oneTap.y);\n        vec2 offset18 = shadowNDCPos.xy + vec2(0.0, oneTap.y);\n        vec2 offset19 = shadowNDCPos.xy + vec2(oneTap.x, oneTap.y);\n        vec2 offset20 = shadowNDCPos.xy + vec2(twoTap.x, oneTap.y);\n        vec2 offset21 = shadowNDCPos.xy + vec2(-twoTap.x, twoTap.y);\n        vec2 offset22 = shadowNDCPos.xy + vec2(-oneTap.x, twoTap.y);\n        vec2 offset23 = shadowNDCPos.xy + vec2(0.0, twoTap.y);\n        vec2 offset24 = shadowNDCPos.xy + vec2(oneTap.x, twoTap.y);\n        vec2 offset25 = shadowNDCPos.xy + vec2(twoTap.x, twoTap.y);\n        float block1, block2, block3, block4, block5, block6, block7, block8, block9, block10, block11, block12, block13, block14, block15, block16, block17, block18, block19, block20, block21, block22, block23, block24, block25;\n        #if CC_SHADOWMAP_FORMAT == 1\n          block1 = step(shadowNDCPos.z, dot(texture(shadowMap, offset1), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block2 = step(shadowNDCPos.z, dot(texture(shadowMap, offset2), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block3 = step(shadowNDCPos.z, dot(texture(shadowMap, offset3), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block4 = step(shadowNDCPos.z, dot(texture(shadowMap, offset4), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block5 = step(shadowNDCPos.z, dot(texture(shadowMap, offset5), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block6 = step(shadowNDCPos.z, dot(texture(shadowMap, offset6), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block7 = step(shadowNDCPos.z, dot(texture(shadowMap, offset7), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block8 = step(shadowNDCPos.z, dot(texture(shadowMap, offset8), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block9 = step(shadowNDCPos.z, dot(texture(shadowMap, offset9), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block10 = step(shadowNDCPos.z, dot(texture(shadowMap, offset10), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block11 = step(shadowNDCPos.z, dot(texture(shadowMap, offset11), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block12 = step(shadowNDCPos.z, dot(texture(shadowMap, offset12), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block13 = step(shadowNDCPos.z, dot(texture(shadowMap, offset13), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block14 = step(shadowNDCPos.z, dot(texture(shadowMap, offset14), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block15 = step(shadowNDCPos.z, dot(texture(shadowMap, offset15), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block16 = step(shadowNDCPos.z, dot(texture(shadowMap, offset16), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block17 = step(shadowNDCPos.z, dot(texture(shadowMap, offset17), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block18 = step(shadowNDCPos.z, dot(texture(shadowMap, offset18), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block19 = step(shadowNDCPos.z, dot(texture(shadowMap, offset19), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block20 = step(shadowNDCPos.z, dot(texture(shadowMap, offset20), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block21 = step(shadowNDCPos.z, dot(texture(shadowMap, offset21), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block22 = step(shadowNDCPos.z, dot(texture(shadowMap, offset22), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block23 = step(shadowNDCPos.z, dot(texture(shadowMap, offset23), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block24 = step(shadowNDCPos.z, dot(texture(shadowMap, offset24), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block25 = step(shadowNDCPos.z, dot(texture(shadowMap, offset25), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n        #else\n          block1 = step(shadowNDCPos.z, texture(shadowMap, offset1).x);\n          block2 = step(shadowNDCPos.z, texture(shadowMap, offset2).x);\n          block3 = step(shadowNDCPos.z, texture(shadowMap, offset3).x);\n          block4 = step(shadowNDCPos.z, texture(shadowMap, offset4).x);\n          block5 = step(shadowNDCPos.z, texture(shadowMap, offset5).x);\n          block6 = step(shadowNDCPos.z, texture(shadowMap, offset6).x);\n          block7 = step(shadowNDCPos.z, texture(shadowMap, offset7).x);\n          block8 = step(shadowNDCPos.z, texture(shadowMap, offset8).x);\n          block9 = step(shadowNDCPos.z, texture(shadowMap, offset9).x);\n          block10 = step(shadowNDCPos.z, texture(shadowMap, offset10).x);\n          block11 = step(shadowNDCPos.z, texture(shadowMap, offset11).x);\n          block12 = step(shadowNDCPos.z, texture(shadowMap, offset12).x);\n          block13 = step(shadowNDCPos.z, texture(shadowMap, offset13).x);\n          block14 = step(shadowNDCPos.z, texture(shadowMap, offset14).x);\n          block15 = step(shadowNDCPos.z, texture(shadowMap, offset15).x);\n          block16 = step(shadowNDCPos.z, texture(shadowMap, offset16).x);\n          block17 = step(shadowNDCPos.z, texture(shadowMap, offset17).x);\n          block18 = step(shadowNDCPos.z, texture(shadowMap, offset18).x);\n          block19 = step(shadowNDCPos.z, texture(shadowMap, offset19).x);\n          block20 = step(shadowNDCPos.z, texture(shadowMap, offset20).x);\n          block21 = step(shadowNDCPos.z, texture(shadowMap, offset21).x);\n          block22 = step(shadowNDCPos.z, texture(shadowMap, offset22).x);\n          block23 = step(shadowNDCPos.z, texture(shadowMap, offset23).x);\n          block24 = step(shadowNDCPos.z, texture(shadowMap, offset24).x);\n          block25 = step(shadowNDCPos.z, texture(shadowMap, offset25).x);\n        #endif\n        vec2 coef = fract(shadowNDCPos.xy * shadowMapResolution);\n        vec2 v1X1 = mix(vec2(block1, block6), vec2(block2, block7), coef.xx);\n        vec2 v1X2 = mix(vec2(block2, block7), vec2(block3, block8), coef.xx);\n        vec2 v1X3 = mix(vec2(block3, block8), vec2(block4, block9), coef.xx);\n        vec2 v1X4 = mix(vec2(block4, block9), vec2(block5, block10), coef.xx);\n        float v1 = mix(v1X1.x, v1X1.y, coef.y) + mix(v1X2.x, v1X2.y, coef.y) + mix(v1X3.x, v1X3.y, coef.y) + mix(v1X4.x, v1X4.y, coef.y);\n        vec2 v2X1 = mix(vec2(block6, block11), vec2(block7, block12), coef.xx);\n        vec2 v2X2 = mix(vec2(block7, block12), vec2(block8, block13), coef.xx);\n        vec2 v2X3 = mix(vec2(block8, block13), vec2(block9, block14), coef.xx);\n        vec2 v2X4 = mix(vec2(block9, block14), vec2(block10, block15), coef.xx);\n        float v2 = mix(v2X1.x, v2X1.y, coef.y) + mix(v2X2.x, v2X2.y, coef.y) + mix(v2X3.x, v2X3.y, coef.y) + mix(v2X4.x, v2X4.y, coef.y);\n        vec2 v3X1 = mix(vec2(block11, block16), vec2(block12, block17), coef.xx);\n        vec2 v3X2 = mix(vec2(block12, block17), vec2(block13, block18), coef.xx);\n        vec2 v3X3 = mix(vec2(block13, block18), vec2(block14, block19), coef.xx);\n        vec2 v3X4 = mix(vec2(block14, block19), vec2(block15, block20), coef.xx);\n        float v3 = mix(v3X1.x, v3X1.y, coef.y) + mix(v3X2.x, v3X2.y, coef.y) + mix(v3X3.x, v3X3.y, coef.y) + mix(v3X4.x, v3X4.y, coef.y);\n        vec2 v4X1 = mix(vec2(block16, block21), vec2(block17, block22), coef.xx);\n        vec2 v4X2 = mix(vec2(block17, block22), vec2(block18, block23), coef.xx);\n        vec2 v4X3 = mix(vec2(block18, block23), vec2(block19, block24), coef.xx);\n        vec2 v4X4 = mix(vec2(block19, block24), vec2(block20, block25), coef.xx);\n        float v4 = mix(v4X1.x, v4X1.y, coef.y) + mix(v4X2.x, v4X2.y, coef.y) + mix(v4X3.x, v4X3.y, coef.y) + mix(v4X4.x, v4X4.y, coef.y);\n        float fAvg = (v1 + v2 + v3 + v4) * 0.0625;\n        return fAvg;\n      }\n      bool GetShadowNDCPos(out vec3 shadowNDCPos, vec4 shadowPosWithDepthBias)\n      {\n      \tshadowNDCPos = shadowPosWithDepthBias.xyz / shadowPosWithDepthBias.w * 0.5 + 0.5;\n      \tif (shadowNDCPos.x < 0.0 || shadowNDCPos.x > 1.0 ||\n      \t\tshadowNDCPos.y < 0.0 || shadowNDCPos.y > 1.0 ||\n      \t\tshadowNDCPos.z < 0.0 || shadowNDCPos.z > 1.0) {\n      \t\treturn false;\n      \t}\n      \tshadowNDCPos.xy = cc_cameraPos.w == 1.0 ? vec2(shadowNDCPos.xy.x, 1.0 - shadowNDCPos.xy.y) : shadowNDCPos.xy;\n      \treturn true;\n      }\n      vec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal, float normalBias, vec3 matViewDir0, vec3 matViewDir1, vec3 matViewDir2, vec2 projScaleXY)\n      {\n        vec4 newShadowPos = shadowPos;\n        if (normalBias > EPSILON_LOWP)\n        {\n          vec3 viewNormal = vec3(dot(matViewDir0, worldNormal), dot(matViewDir1, worldNormal), dot(matViewDir2, worldNormal));\n          if (viewNormal.z < 0.1)\n            newShadowPos.xy += viewNormal.xy * projScaleXY * normalBias * clamp(viewNormal.z, 0.001, 0.1);\n        }\n        return newShadowPos;\n      }\n      vec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal, float normalBias, mat4 matLightView, vec2 projScaleXY)\n      {\n      \tvec4 newShadowPos = shadowPos;\n      \tif (normalBias > EPSILON_LOWP)\n      \t{\n      \t\tvec4 viewNormal = matLightView * vec4(worldNormal, 0.0);\n      \t\tif (viewNormal.z < 0.1)\n      \t\t\tnewShadowPos.xy += viewNormal.xy * projScaleXY * normalBias * clamp(viewNormal.z, 0.001, 0.1);\n      \t}\n      \treturn newShadowPos;\n      }\n      float GetViewSpaceDepthFromNDCDepth_Orthgraphic(float NDCDepth, float projScaleZ, float projBiasZ)\n      {\n      \treturn (NDCDepth - projBiasZ) / projScaleZ;\n      }\n      vec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias, float projScaleZ, float projBiasZ)\n      {\n      \tfloat coeffA = projScaleZ;\n      \tfloat coeffB = projBiasZ;\n      \tfloat viewSpacePos_z = GetViewSpaceDepthFromNDCDepth_Orthgraphic(shadowPos.z, projScaleZ, projBiasZ);\n      \tviewSpacePos_z += viewspaceDepthBias;\n      \tvec4 result = shadowPos;\n      \tresult.z = viewSpacePos_z * coeffA + coeffB;\n      \treturn result;\n      }\n      float CCGetDirLightShadowFactorHard (vec4 shadowPosWithDepthBias) {\n    \t  vec3 shadowNDCPos;\n    \t  if (!GetShadowNDCPos(shadowNDCPos, shadowPosWithDepthBias)) {\n    \t\t  return 1.0;\n    \t  }\n        return NativePCFShadowFactorHard(shadowNDCPos, cc_shadowMap, cc_shadowWHPBInfo.xy);\n      }\n      float CCGetDirLightShadowFactorSoft (vec4 shadowPosWithDepthBias) {\n    \t  vec3 shadowNDCPos;\n    \t  if (!GetShadowNDCPos(shadowNDCPos, shadowPosWithDepthBias)) {\n    \t\t  return 1.0;\n    \t  }\n        return NativePCFShadowFactorSoft(shadowNDCPos, cc_shadowMap, cc_shadowWHPBInfo.xy);\n      }\n      float CCGetDirLightShadowFactorSoft3X (vec4 shadowPosWithDepthBias) {\n    \t  vec3 shadowNDCPos;\n    \t  if (!GetShadowNDCPos(shadowNDCPos, shadowPosWithDepthBias)) {\n    \t\t  return 1.0;\n    \t  }\n        return NativePCFShadowFactorSoft3X(shadowNDCPos, cc_shadowMap, cc_shadowWHPBInfo.xy);\n      }\n      float CCGetDirLightShadowFactorSoft5X (vec4 shadowPosWithDepthBias) {\n    \t  vec3 shadowNDCPos;\n    \t  if (!GetShadowNDCPos(shadowNDCPos, shadowPosWithDepthBias)) {\n    \t\t  return 1.0;\n    \t  }\n        return NativePCFShadowFactorSoft5X(shadowNDCPos, cc_shadowMap, cc_shadowWHPBInfo.xy);\n      }\n      float CCShadowFactorBase(out vec4 shadowNDCPosWithBias, vec4 shadowPos, vec3 N, vec2 shadowBias)\n      {\n        vec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N, shadowBias.y, cc_matLightView, cc_shadowProjInfo.xy);\n        pos = ApplyShadowDepthBias_Orthographic(pos, shadowBias.x, cc_shadowProjDepthInfo.x, cc_shadowProjDepthInfo.y);\n        float realtimeShadow = 1.0;\n        #if CC_DIR_SHADOW_PCF_TYPE == 3\n          realtimeShadow = CCGetDirLightShadowFactorSoft5X(pos);\n        #endif\n        #if CC_DIR_SHADOW_PCF_TYPE == 2\n          realtimeShadow =  CCGetDirLightShadowFactorSoft3X(pos);\n        #endif\n        #if CC_DIR_SHADOW_PCF_TYPE == 1\n          realtimeShadow = CCGetDirLightShadowFactorSoft(pos);\n        #endif\n        #if CC_DIR_SHADOW_PCF_TYPE == 0\n          realtimeShadow = CCGetDirLightShadowFactorHard(pos);\n        #endif\n        shadowNDCPosWithBias = pos;\n        return mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n      }\n      #if CC_SUPPORT_CASCADED_SHADOW_MAP\n        bool CCGetCSMLevelWithTransition(out float ratio, vec3 clipPos) {\n          highp float layerThreshold = cc_csmViewDir0[0].w;\n          highp float maxRange = 1.0 - cc_csmSplitsInfo.x - layerThreshold;\n          highp float minRange = cc_csmSplitsInfo.x - layerThreshold;\n          if (clipPos.x <= minRange || clipPos.x >= maxRange ||\n              clipPos.y <= minRange || clipPos.y >= maxRange) {\n            if (clipPos.x >= layerThreshold && clipPos.x <= cc_csmSplitsInfo.x) {\n              ratio = (clipPos.x - layerThreshold) / (cc_csmSplitsInfo.x - layerThreshold);\n            }\n            if (clipPos.x >= maxRange && clipPos.x <= 1.0 - layerThreshold) {\n              ratio = (clipPos.x - maxRange) / (cc_csmSplitsInfo.x - layerThreshold);\n            }\n            if (clipPos.y >= 0.0 && clipPos.y <= cc_csmSplitsInfo.x) {\n              ratio = min((clipPos.y - layerThreshold) / (cc_csmSplitsInfo.x - layerThreshold), 1.0);\n            }\n            if (clipPos.y >= maxRange && clipPos.y <= 1.0 - layerThreshold) {\n              ratio = (clipPos.y - maxRange) / (cc_csmSplitsInfo.x - layerThreshold);\n            }\n            return true;\n          }\n          return false;\n        }\n        int CCGetCSMLevel(out bool hasNextTransition, out bool transitionArea, out float transitionRatio, out vec4 csmPos, out vec4 shadowProjDepthInfo, out vec4 shadowProjInfo, out vec3 shadowViewDir0, out vec3 shadowViewDir1, out vec3 shadowViewDir2, vec3 worldPos, int nextLayer)\n        {\n          int layer = -1;\n          highp float layerThreshold = cc_csmViewDir0[0].w;\n          for (int i = 0; i < 4; i++) {\n            vec4 shadowPos = cc_matCSMViewProj[i] * vec4(worldPos.xyz, 1.0);\n            vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n            if (clipPos.x >= (0.0 + layerThreshold) && clipPos.x <= (1.0 - layerThreshold) &&\n                clipPos.y >= (0.0 + layerThreshold) && clipPos.y <= (1.0 - layerThreshold) &&\n                clipPos.z >= 0.0 && clipPos.z <= 1.0) {\n              #if CC_CASCADED_LAYERS_TRANSITION\n                if (layer < 0 || (nextLayer >= 0 && i == nextLayer))\n              #else\n                if (layer < 0)\n              #endif\n              {\n                #if CC_CASCADED_LAYERS_TRANSITION\n                  if (nextLayer < 0) {\n                    transitionArea = CCGetCSMLevelWithTransition(transitionRatio, clipPos);\n                  }\n                #endif\n                csmPos = cc_matCSMViewProj[i] * vec4(worldPos.xyz, 1.0);\n                csmPos.xy = csmPos.xy * cc_csmAtlas[i].xy + cc_csmAtlas[i].zw;\n                shadowProjDepthInfo = cc_csmProjDepthInfo[i];\n                shadowProjInfo = cc_csmProjInfo[i];\n                shadowViewDir0 = cc_csmViewDir0[i].xyz;\n                shadowViewDir1 = cc_csmViewDir1[i].xyz;\n                shadowViewDir2 = cc_csmViewDir2[i].xyz;\n                layer = i;\n                #if CC_CASCADED_LAYERS_TRANSITION\n                  hasNextTransition = true;\n                #endif\n              }\n            }\n          }\n          return layer;\n        }\n        int CCGetCSMLevel(out vec4 csmPos, out vec4 shadowProjDepthInfo, out vec4 shadowProjInfo, out vec3 shadowViewDir0, out vec3 shadowViewDir1, out vec3 shadowViewDir2, vec3 worldPos)\n        {\n          bool hasNextTransition = false;\n          bool transitionArea = false;\n          float transitionRatio = 0.0;\n          int nextLayer = -1;\n          return CCGetCSMLevel(hasNextTransition, transitionArea, transitionRatio, csmPos, shadowProjDepthInfo, shadowProjInfo, shadowViewDir0, shadowViewDir1, shadowViewDir2, worldPos, nextLayer);\n        }\n        float CCCSMFactorBase(out vec4 csmPos, out vec4 csmNDCPosWithBias, vec3 worldPos, vec3 N, vec2 shadowBias)\n        {\n          bool hasNext = false;\n          bool transitionArea = false;\n          float ratio = 0.0;\n          csmPos = vec4(1.0);\n          vec4 shadowProjDepthInfo, shadowProjInfo;\n          vec3 shadowViewDir0, shadowViewDir1, shadowViewDir2;\n          int level = -1;\n          #if CC_CASCADED_LAYERS_TRANSITION\n            level = CCGetCSMLevel(hasNext, transitionArea, ratio, csmPos, shadowProjDepthInfo, shadowProjInfo, shadowViewDir0, shadowViewDir1, shadowViewDir2, worldPos, -1);\n          #else\n            level = CCGetCSMLevel(csmPos, shadowProjDepthInfo, shadowProjInfo, shadowViewDir0, shadowViewDir1, shadowViewDir2, worldPos);\n          #endif\n          if (level < 0) { return 1.0; }\n          vec4 pos = ApplyShadowDepthBias_FaceNormal(csmPos, N, shadowBias.y, shadowViewDir0, shadowViewDir1, shadowViewDir2, shadowProjInfo.xy);\n          pos = ApplyShadowDepthBias_Orthographic(pos, shadowBias.x, shadowProjDepthInfo.x, shadowProjDepthInfo.y);\n          csmNDCPosWithBias = pos;\n          float realtimeShadow = 1.0;\n          #if CC_DIR_SHADOW_PCF_TYPE == 3\n            realtimeShadow = CCGetDirLightShadowFactorSoft5X(pos);\n          #endif\n          #if CC_DIR_SHADOW_PCF_TYPE == 2\n            realtimeShadow = CCGetDirLightShadowFactorSoft3X(pos);\n          #endif\n          #if CC_DIR_SHADOW_PCF_TYPE == 1\n            realtimeShadow = CCGetDirLightShadowFactorSoft(pos);\n          #endif\n          #if CC_DIR_SHADOW_PCF_TYPE == 0\n            realtimeShadow = CCGetDirLightShadowFactorHard(pos);\n          #endif\n          #if CC_CASCADED_LAYERS_TRANSITION\n            vec4 nextCSMPos = vec4(1.0);\n            vec4 nextShadowProjDepthInfo, nextShadowProjInfo;\n            vec3 nextShadowViewDir0, nextShadowViewDir1, nextShadowViewDir2;\n            float nextRealtimeShadow = 1.0;\n            CCGetCSMLevel(hasNext, transitionArea, ratio, nextCSMPos, nextShadowProjDepthInfo, nextShadowProjInfo, nextShadowViewDir0, nextShadowViewDir1, nextShadowViewDir2, worldPos, level + 1);\n            if (hasNext && transitionArea) {\n              vec4 nexPos = ApplyShadowDepthBias_FaceNormal(nextCSMPos, N, shadowBias.y, nextShadowViewDir0, nextShadowViewDir1, nextShadowViewDir2, nextShadowProjInfo.xy);\n              nexPos = ApplyShadowDepthBias_Orthographic(nexPos, shadowBias.x, nextShadowProjDepthInfo.x, nextShadowProjDepthInfo.y);\n              #if CC_DIR_SHADOW_PCF_TYPE == 3\n                nextRealtimeShadow = CCGetDirLightShadowFactorSoft5X(nexPos);\n              #endif\n              #if CC_DIR_SHADOW_PCF_TYPE == 2\n                nextRealtimeShadow = CCGetDirLightShadowFactorSoft3X(nexPos);\n              #endif\n              #if CC_DIR_SHADOW_PCF_TYPE == 1\n                nextRealtimeShadow = CCGetDirLightShadowFactorSoft(nexPos);\n              #endif\n              #if CC_DIR_SHADOW_PCF_TYPE == 0\n                nextRealtimeShadow = CCGetDirLightShadowFactorHard(nexPos);\n              #endif\n              return mix(mix(nextRealtimeShadow, realtimeShadow, ratio), 1.0, cc_shadowNFLSInfo.w);\n            }\n            return mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n          #else\n            return mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n          #endif\n        }\n      #else\n        int CCGetCSMLevel(out vec4 csmPos, out vec4 shadowProjDepthInfo, out vec4 shadowProjInfo, out vec3 shadowViewDir0, out vec3 shadowViewDir1, out vec3 shadowViewDir2, vec3 worldPos) {\n          return -1;\n        }\n        float CCCSMFactorBase(out vec4 csmPos, out vec4 csmNDCPosWithBias, vec3 worldPos, vec3 N, vec2 shadowBias) {\n          csmPos = cc_matLightViewProj * vec4(worldPos, 1.0);\n          return CCShadowFactorBase(csmNDCPosWithBias, csmPos, N, shadowBias);\n        }\n      #endif\n      float CCShadowFactorBase(vec4 shadowPos, vec3 N, vec2 shadowBias) {\n        vec4 shadowNDCPosWithBias;\n        return CCShadowFactorBase(shadowNDCPosWithBias, shadowPos, N, shadowBias);\n      }\n      float CCCSMFactorBase(vec3 worldPos, vec3 N, vec2 shadowBias) {\n        vec4 csmPos, csmNDCPosWithBias;\n        return CCCSMFactorBase(csmPos, csmNDCPosWithBias, worldPos, N, shadowBias);\n      }\n    #endif\n        #if CC_RECEIVE_SHADOW && CC_SHADOW_TYPE == 2\n    #endif\n  #endif\n  vec4 CCToonShading (ToonSurface s) {\n    vec3 position;\n    #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n    position = unpackHighpData(s.position, s.position_fract_part);\n    #else\n    position = s.position;\n    #endif\n    vec3 V = normalize(cc_cameraPos.xyz - position);\n    vec3 N = normalize(s.normal);\n    vec3 L = normalize(-cc_mainLitDir.xyz);\n    float NL = 0.5 * dot(N, L) + 0.5;\n    float NH = 0.5 * dot(normalize(V + L), N) + 0.5;\n    vec3 lightColor = cc_mainLitColor.rgb * cc_mainLitColor.w * s.baseStep;\n    vec3 diffuse = mix(s.shade1, s.shade2,\n      clamp(1.0 + (s.shadeStep - s.shadeFeather - NL) / s.shadeFeather, 0.0, 1.0));\n    diffuse = mix(s.baseColor.rgb, diffuse,\n      clamp(1.0 + (s.baseStep - s.baseFeather - NL) / s.baseFeather, 0.0, 1.0));\n    float specularWeight = 1.0 - pow(s.specular.a, 5.0);\n    float specularMask = step(specularWeight + EPSILON_LOWP, NH);\n    vec3 specular = s.specular.rgb * specularMask;\n    vec3 dirlightContrib = diffuse + specular;\n    float shadow = 1.0;\n    #if CC_RECEIVE_SHADOW && CC_SHADOW_TYPE == 2\n    if(s.shadowCover < NL && cc_mainLitDir.w > 0.0) {\n      if (cc_shadowLPNNInfo.w > 0.0) {\n        #if CC_DIR_LIGHT_SHADOW_TYPE == 2\n          shadow = CCCSMFactorBase(position, N, s.shadowBias);\n        #endif\n      } else {\n        #if CC_DIR_LIGHT_SHADOW_TYPE == 1\n          shadow = CCShadowFactorBase(v_shadowPos, N, s.shadowBias);\n        #endif\n      }\n    }\n    #endif\n    dirlightContrib *= shadow;\n    vec3 finalColor = lightColor * dirlightContrib;\n    finalColor += s.emissive;\n    return vec4(finalColor, s.baseColor.a);\n  }\n#endif\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 baseColor;\n  vec4 colorScaleAndCutoff;\n  vec4 shadeColor1;\n  vec4 shadeColor2;\n  vec4 specular;\n  vec4 shadeParams;\n  vec4 miscParams;\n  vec4 emissive;\n  vec4 emissiveScaleAndStrenth;\n};\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_WORLD_POS CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR CC_SURFACES_DEBUG_VIEW_WORLD_POS + 1\n#define CC_SURFACES_DEBUG_VIEW_FACE_SIDE CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR + 1\n#define CC_SURFACES_DEBUG_VIEW_UV0 CC_SURFACES_DEBUG_VIEW_FACE_SIDE + 1\n#define CC_SURFACES_DEBUG_VIEW_UV1 CC_SURFACES_DEBUG_VIEW_UV0 + 1\n#define CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP CC_SURFACES_DEBUG_VIEW_UV1 + 1\n#define CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP + 1\n#define CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_BASE_COLOR CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR CC_SURFACES_DEBUG_VIEW_BASE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_TRANSPARENCY CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_METALLIC CC_SURFACES_DEBUG_VIEW_TRANSPARENCY + 1\n#define CC_SURFACES_DEBUG_VIEW_ROUGHNESS CC_SURFACES_DEBUG_VIEW_METALLIC + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY CC_SURFACES_DEBUG_VIEW_ROUGHNESS + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_ALL CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE CC_SURFACES_DEBUG_VIEW_DIRECT_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_ALL CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_EMISSIVE CC_SURFACES_DEBUG_VIEW_ENV_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_LIGHT_MAP CC_SURFACES_DEBUG_VIEW_EMISSIVE + 1\n#define CC_SURFACES_DEBUG_VIEW_SHADOW CC_SURFACES_DEBUG_VIEW_LIGHT_MAP + 1\n#define CC_SURFACES_DEBUG_VIEW_AO CC_SURFACES_DEBUG_VIEW_SHADOW + 1\n#define CC_SURFACES_DEBUG_VIEW_FOG CC_SURFACES_DEBUG_VIEW_AO + 1\n#define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#define IS_DEBUG_VIEW_ENABLE_WITH_CAMERA (cc_surfaceTransform.y != 3.0)\n#define IS_DEBUG_VIEW_LIGHTING_ENABLE_WITH_ALBEDO ((cc_debug_view_mode.y > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_MISC_ENABLE_CSM_LAYER_COLORATION ((cc_debug_view_mode.z > 0.0) && IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_DIFFUSE ((cc_debug_view_composite_pack_1.x > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_SPECULAR ((cc_debug_view_composite_pack_1.y > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_DIFFUSE ((cc_debug_view_composite_pack_1.z > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_SPECULAR ((cc_debug_view_composite_pack_1.w > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_EMISSIVE ((cc_debug_view_composite_pack_2.x > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_LIGHT_MAP ((cc_debug_view_composite_pack_2.y > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_SHADOW ((cc_debug_view_composite_pack_2.z > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_AO ((cc_debug_view_composite_pack_2.w > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_NORMAL_MAP ((cc_debug_view_composite_pack_3.x > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_FOG ((cc_debug_view_composite_pack_3.y > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_TONE_MAPPING ((cc_debug_view_composite_pack_3.z > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION ((cc_debug_view_composite_pack_3.w > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\nvec3 SRGBToLinear (vec3 gamma) {\n#ifdef CC_USE_SURFACE_SHADER\n  #if CC_USE_DEBUG_VIEW == CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    if (!IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION) {\n      return gamma;\n    }\n  #endif\n#endif\n  return gamma * gamma;\n}\nvec3 LinearToSRGB(vec3 linear) {\n#ifdef CC_USE_SURFACE_SHADER\n  #if CC_USE_DEBUG_VIEW == CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    if (!IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION) {\n      return linear;\n    }\n  #endif\n#endif\n  return sqrt(linear);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = ACESToneMap(color.rgb);\n  #endif\n  color.rgb = LinearToSRGB(color.rgb);\n  return color;\n}\nin vec3 v_position;\nin vec2 v_uv;\n#if CC_RECEIVE_SHADOW\n  in mediump vec2 v_shadowBias;\n#endif\n#if USE_BASE_COLOR_MAP\n  uniform sampler2D baseColorMap;\n#endif\nin mediump vec3 v_normal;\n#if USE_NORMAL_MAP\n  in mediump vec4 v_tangent;\n  uniform sampler2D normalMap;\n#endif\n#if USE_1ST_SHADE_MAP\n  uniform sampler2D shadeMap1;\n#endif\n#if USE_2ND_SHADE_MAP\n  uniform sampler2D shadeMap2;\n#endif\n#if USE_SPECULAR_MAP\n  uniform sampler2D specularMap;\n#endif\n#if USE_EMISSIVE_MAP\n  uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out ToonSurface s) {\n  s.shade2 = shadeColor2.rgb * colorScaleAndCutoff.rgb;\n  #if USE_2ND_SHADE_MAP\n    s.shade2 *= SRGBToLinear(texture(shadeMap2, v_uv).rgb);\n  #endif\n  s.shade1 = shadeColor1.rgb * colorScaleAndCutoff.rgb;\n  #if USE_1ST_SHADE_MAP\n    s.shade1 *= SRGBToLinear(texture(shadeMap1, v_uv).rgb);\n    #if SHADE_MAP_1_AS_SHADE_MAP_2\n      s.shade2 *= s.shade1.rgb;\n    #endif\n  #endif\n  vec4 baseColor = baseColor;\n  #if USE_BASE_COLOR_MAP\n    vec4 baseColorMap = texture(baseColorMap, v_uv);\n    baseColorMap.rgb = SRGBToLinear(baseColorMap.rgb);\n    baseColor *= baseColorMap;\n    #if BASE_COLOR_MAP_AS_SHADE_MAP_1\n      s.shade1 *= baseColorMap.rgb;\n    #endif\n    #if BASE_COLOR_MAP_AS_SHADE_MAP_2\n      s.shade2 *= baseColorMap.rgb;\n    #endif\n  #endif\n  s.baseColor = baseColor;\n  s.baseColor.rgb *= colorScaleAndCutoff.xyz;\n  #if USE_ALPHA_TEST\n    if (s.baseColor.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n  #endif\n  s.normal = v_normal;\n  #if CC_RECEIVE_SHADOW\n    s.shadowBias = v_shadowBias;\n  #endif\n  #if USE_NORMAL_MAP\n    vec3 nmmp = texture(normalMap, v_uv).xyz - vec3(0.5);\n    vec3 bitangent = cross(v_normal, v_tangent.xyz) * (v_tangent.w > 0.0 ? 1.0 : -1.0);\n    s.normal =\n      (nmmp.x * emissiveScaleAndStrenth.w) * normalize(v_tangent.xyz) +\n      (nmmp.y * emissiveScaleAndStrenth.w) * normalize(bitangent) +\n      nmmp.z * normalize(s.normal);\n  #endif\n  #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n  packHighpData(s.position, s.position_fract_part, v_position);\n  #else\n  s.position = v_position;\n  #endif\n  s.specular = specular;\n  #if USE_SPECULAR_MAP\n    s.specular.rgb *= SRGBToLinear(texture(specularMap, v_uv).rgb);\n  #endif\n  s.emissive = emissive.rgb * emissiveScaleAndStrenth.xyz;\n  #if USE_EMISSIVE_MAP\n    s.emissive *= SRGBToLinear(texture(emissiveMap, v_uv).rgb);\n  #endif\n  s.baseStep = shadeParams.x;\n  s.baseFeather = shadeParams.y;\n  s.shadeStep = shadeParams.z;\n  s.shadeFeather = shadeParams.w;\n  s.shadowCover = miscParams.x;\n}\nvec4 frag () {\n  ToonSurface s; surf(s);\n  vec4 color = CCToonShading(s);\n  return CCFragOutput(color);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON)\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_RECEIVE_SHADOW\n    attribute vec2 a_localShadowBias;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    attribute vec4 a_sh_linear_const_r;\n    attribute vec4 a_sh_linear_const_g;\n    attribute vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n#endif\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\n#if CC_USE_MORPH\n  uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n  #endif\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n        return texture2D(tex, uv);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture2D(tex, x)),\n        decode32(texture2D(tex, y)),\n        decode32(texture2D(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n  vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n  vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n  vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n  }\n  #endif\n  void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n  #if CC_USE_BAKED_ANIMATION\n    uniform highp vec4 cc_jointTextureInfo;\n    uniform highp vec4 cc_jointAnimInfo;\n    uniform highp sampler2D cc_jointTexture;\n    void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n    {\n      #if USE_INSTANCING\n        highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n      #else\n        highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n      #endif\n      invSize = cc_jointTextureInfo.w;\n      highp float tempY = floor(temp * invSize);\n      x = floor(temp - tempY * cc_jointTextureInfo.x);\n      y = (tempY + 0.5) * invSize;\n    }\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      uniform highp sampler2D cc_realtimeJoint;\n    #else\n      uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n    #endif\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(3.0, i, x, y, invSize);\n        vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(12.0, i, x, y, invSize);\n        vec4 v1 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          float x = i;\n          vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n          vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n          vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n         float x = 4.0 * i;\n          vec4 v1 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      mat4 getJointMatrix (float i) {\n        int idx = int(i);\n        vec4 v1 = cc_joints[idx * 3];\n        vec4 v2 = cc_joints[idx * 3 + 1];\n        vec4 v3 = cc_joints[idx * 3 + 2];\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    mat4 m = skinMatrix();\n    position = m * position;\n    normal = (m * vec4(normal, 0.0)).xyz;\n    tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  #if CC_USE_MORPH\n    applyMorph(In.position, In.normal, In.tangent);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In.position, In.normal, In.tangent);\n  #endif\n}\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n#if !USE_INSTANCING\n  uniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\n  uniform highp vec4 cc_localShadowBias;\n#endif\nvoid CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n{\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n    matWorldIT = matWorld;\n  #else\n    matWorld = cc_matWorld;\n    matWorldIT = cc_matWorldIT;\n  #endif\n}\n    uniform vec4 tilingOffset;\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n  uniform mediump vec4 cc_shadowWHPBInfo;\n  uniform mediump vec4 cc_shadowLPNNInfo;\n#if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #endif\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotShadowMap;\n  #if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #else\n  #endif\n#endif\n#if CC_RECEIVE_SHADOW\nvec2 CCGetShadowBias()\n{\n  #if USE_INSTANCING\n    return vec2(a_localShadowBias.x + cc_shadowWHPBInfo.w, a_localShadowBias.y + cc_shadowLPNNInfo.z);\n  #else\n    return vec2(cc_localShadowBias.x + cc_shadowWHPBInfo.w, cc_localShadowBias.y + cc_shadowLPNNInfo.z);\n  #endif\n}\n#endif\nvarying vec3 v_position;\nvarying vec2 v_uv;\nvarying mediump vec3 v_normal;\n#if CC_RECEIVE_SHADOW\n  varying mediump vec2 v_shadowBias;\n#endif\n#if USE_NORMAL_MAP\n  varying mediump vec4 v_tangent;\n#endif\nvec4 vert () {\n  StandardVertInput In;\n  CCVertInput(In);\n  mat4 matWorld, matWorldIT;\n  CCGetWorldMatrixFull(matWorld, matWorldIT);\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  #if CC_RECEIVE_SHADOW\n    v_shadowBias = CCGetShadowBias();\n  #endif\n  v_normal = (matWorldIT * vec4(In.normal, 0.0)).xyz;\n  #if USE_NORMAL_MAP\n    v_tangent.xyz = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_tangent.w = In.tangent.w;\n  #endif\n  v_shadowPos = cc_matLightViewProj * pos;\n  return cc_matProj * (cc_matView * matWorld) * In.position;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform mediump vec4 cc_debug_view_mode;\n  uniform mediump vec4 cc_debug_view_composite_pack_1;\n  uniform mediump vec4 cc_debug_view_composite_pack_2;\n  uniform mediump vec4 cc_debug_view_composite_pack_3;\nuniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_surfaceTransform;\n  uniform mediump vec4 cc_mainLitDir;\n  uniform mediump vec4 cc_mainLitColor;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON)\nhighp float unpackHighpData (float mainPart, float modPart) {\n  highp float data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp float unpackHighpData (float mainPart, float modPart, const float modValue) {\n  highp float data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out float mainPart, out float modPart, highp float data, const float modValue) {\n  highp float divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart) {\n  highp vec2 data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp vec2 unpackHighpData (vec2 mainPart, vec2 modPart, const float modValue) {\n  highp vec2 data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out vec2 mainPart, out vec2 modPart, highp vec2 data, const float modValue) {\n  highp vec2 divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart) {\n  highp vec3 data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp vec3 unpackHighpData (vec3 mainPart, vec3 modPart, const float modValue) {\n  highp vec3 data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out vec3 mainPart, out vec3 modPart, highp vec3 data, const float modValue) {\n  highp vec3 divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart) {\n  highp vec4 data = mainPart;\n  return data + modPart;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data) {\n  mainPart = fract(data);\n  modPart = data - mainPart;\n}\nhighp vec4 unpackHighpData (vec4 mainPart, vec4 modPart, const float modValue) {\n  highp vec4 data = mainPart * modValue;\n  return data + modPart * modValue;\n}\nvoid packHighpData (out vec4 mainPart, out vec4 modPart, highp vec4 data, const float modValue) {\n  highp vec4 divide = data / modValue;\n  mainPart = floor(divide);\n  modPart = (data - mainPart * modValue) / modValue;\n}\nstruct ToonSurface {\n  vec4 baseColor;\n  vec4 specular;\n  #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n  vec3 position, position_fract_part;\n  #else\n  vec3 position;\n  #endif\n  vec3 normal;\n  vec3 shade1;\n  vec3 shade2;\n  vec3 emissive;\n  float baseStep;\n  float baseFeather;\n  float shadeStep;\n  float shadeFeather;\n  float shadowCover;\n  #if CC_RECEIVE_SHADOW\n    vec2 shadowBias;\n  #endif\n};\n#if CC_FORWARD_ADD\n  #if CC_PIPELINE_TYPE == 0\n    #define LIGHTS_PER_PASS 1\n  #else\n    #define LIGHTS_PER_PASS 10\n  #endif\n  #if CC_ENABLE_CLUSTERED_LIGHT_CULLING == 0\n  uniform highp vec4 cc_lightPos[LIGHTS_PER_PASS];\n  uniform vec4 cc_lightColor[LIGHTS_PER_PASS];\n  uniform vec4 cc_lightSizeRangeAngle[LIGHTS_PER_PASS];\n  uniform vec4 cc_lightDir[LIGHTS_PER_PASS];\n  #endif\n  float SmoothDistAtt (float distSqr, float invSqrAttRadius) {\n    float factor = distSqr * invSqrAttRadius;\n    float smoothFactor = clamp(1.0 - factor * factor, 0.0, 1.0);\n    return smoothFactor * smoothFactor;\n  }\n  float GetDistAtt (float distSqr, float invSqrAttRadius) {\n    float attenuation = 1.0 / max(distSqr, 0.01*0.01);\n    attenuation *= SmoothDistAtt(distSqr , invSqrAttRadius);\n    return attenuation;\n  }\n  float GetAngleAtt (vec3 L, vec3 litDir, float litAngleScale, float litAngleOffset) {\n    float cd = dot(litDir, L);\n    float attenuation = clamp(cd * litAngleScale + litAngleOffset, 0.0, 1.0);\n    return (attenuation * attenuation);\n  }\n  vec4 CCToonShading (ToonSurface s) {\n    vec3 position;\n    #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n    position = unpackHighpData(s.position, s.position_fract_part);\n    #else\n    position = s.position;\n    #endif\n    vec3 V = normalize(cc_cameraPos.xyz - position);\n    vec3 N = normalize(s.normal);\n    float specularWeight = 1.0 - pow(s.specular.a, 5.0);\n    vec3 finalColor = vec3(0.0);\n    for (int i = 0; i < LIGHTS_PER_PASS; i++) {\n      vec3 SLU = cc_lightPos[i].xyz - position;\n      vec3 SL = normalize(SLU);\n      vec3 SH = normalize(SL + V);\n      float SNL = 0.5 * dot(N, SL) + 0.5;\n      float SNH = 0.5 * dot(N, SH) + 0.5;\n      float distSqr = dot(SLU, SLU);\n      float litRadius = cc_lightSizeRangeAngle[i].x;\n      float litRadiusSqr = litRadius * litRadius;\n      float illum = litRadiusSqr / max(litRadiusSqr , distSqr);\n      float attRadiusSqrInv = 1.0 / max(cc_lightSizeRangeAngle[i].y, 0.01);\n      attRadiusSqrInv *= attRadiusSqrInv;\n      float att = GetDistAtt(distSqr, attRadiusSqrInv);\n      vec3 diffuse = mix(s.shade1, s.shade2,\n        clamp(1.0 + (s.shadeStep - s.shadeFeather - SNL) / s.shadeFeather, 0.0, 1.0));\n      diffuse = mix(s.baseColor.rgb, diffuse,\n        clamp(1.0 + (s.baseStep - s.baseFeather - SNL) / s.baseFeather, 0.0, 1.0));\n      float specularMask = step(specularWeight, SNH);\n      vec3 specular = s.specular.rgb * specularMask;\n      if (cc_lightPos[i].w > 0.0) {\n        float cosInner = max(dot(-cc_lightDir[i].xyz, SL), 0.01);\n        float cosOuter = cc_lightSizeRangeAngle[i].z;\n        float litAngleScale = 1.0 / max(0.001, cosInner - cosOuter);\n        float litAngleOffset = -cosOuter * litAngleScale;\n        att *= GetAngleAtt(SL, -cc_lightDir[i].xyz, litAngleScale, litAngleOffset);\n      }\n      finalColor += SNL * cc_lightColor[i].rgb * cc_lightColor[i].a * illum * att * s.baseStep * (diffuse + specular);\n    }\n    return vec4(finalColor, 0.0);\n  }\n#else\n  #if CC_RECEIVE_SHADOW\n    varying highp vec4 v_shadowPos;\n    uniform highp mat4 cc_matLightView;\n  uniform highp mat4 cc_matLightViewProj;\n  uniform highp vec4 cc_shadowProjDepthInfo;\n  uniform highp vec4 cc_shadowProjInfo;\n  uniform mediump vec4 cc_shadowNFLSInfo;\n  uniform mediump vec4 cc_shadowWHPBInfo;\n  uniform mediump vec4 cc_shadowLPNNInfo;\n    #if CC_SUPPORT_CASCADED_SHADOW_MAP\n      uniform highp vec4 cc_csmViewDir0[4];\n  uniform highp vec4 cc_csmViewDir1[4];\n  uniform highp vec4 cc_csmViewDir2[4];\n  uniform highp vec4 cc_csmAtlas[4];\n  uniform highp mat4 cc_matCSMViewProj[4];\n  uniform highp vec4 cc_csmProjDepthInfo[4];\n  uniform highp vec4 cc_csmProjInfo[4];\n  uniform highp vec4 cc_csmSplitsInfo;\n    #endif\n    #if CC_RECEIVE_SHADOW\n      uniform highp sampler2D cc_shadowMap;\n      uniform highp sampler2D cc_spotShadowMap;\n      float NativePCFShadowFactorHard (vec3 shadowNDCPos, sampler2D shadowMap, vec2 shadowMapResolution)\n      {\n        #if CC_SHADOWMAP_FORMAT == 1\n          return step(shadowNDCPos.z, dot(texture2D(shadowMap, shadowNDCPos.xy), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n        #else\n          return step(shadowNDCPos.z, texture2D(shadowMap, shadowNDCPos.xy).x);\n        #endif\n      }\n      float NativePCFShadowFactorSoft (vec3 shadowNDCPos, sampler2D shadowMap, vec2 shadowMapResolution)\n      {\n        vec2 oneTap = 1.0 / shadowMapResolution;\n        vec2 shadowNDCPos_offset = shadowNDCPos.xy + oneTap;\n        float block0, block1, block2, block3;\n        #if CC_SHADOWMAP_FORMAT == 1\n          block0 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block1 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset.x, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block2 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block3 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset.x, shadowNDCPos_offset.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n        #else\n          block0 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos.y)).x);\n          block1 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset.x, shadowNDCPos.y)).x);\n          block2 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset.y)).x);\n          block3 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset.x, shadowNDCPos_offset.y)).x);\n        #endif\n        float coefX   = mod(shadowNDCPos.x, oneTap.x) * shadowMapResolution.x;\n        float resultX = mix(block0, block1, coefX);\n        float resultY = mix(block2, block3, coefX);\n        float coefY   = mod(shadowNDCPos.y, oneTap.y) * shadowMapResolution.y;\n        return mix(resultX, resultY, coefY);\n      }\n      float NativePCFShadowFactorSoft3X (vec3 shadowNDCPos, sampler2D shadowMap, vec2 shadowMapResolution)\n      {\n        vec2 oneTap = 1.0 / shadowMapResolution;\n        float shadowNDCPos_offset_L = shadowNDCPos.x - oneTap.x;\n        float shadowNDCPos_offset_R = shadowNDCPos.x + oneTap.x;\n        float shadowNDCPos_offset_U = shadowNDCPos.y - oneTap.y;\n        float shadowNDCPos_offset_D = shadowNDCPos.y + oneTap.y;\n        float block0, block1, block2, block3, block4, block5, block6, block7, block8;\n        #if CC_SHADOWMAP_FORMAT == 1\n          block0 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block1 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block2 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos_offset_U)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block3 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block4 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block5 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos.y)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block6 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block7 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block8 = step(shadowNDCPos.z, dot(texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos_offset_D)), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n        #else\n          block0 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos_offset_U)).x);\n          block1 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset_U)).x);\n          block2 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos_offset_U)).x);\n          block3 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos.y)).x);\n          block4 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos.y)).x);\n          block5 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos.y)).x);\n          block6 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_L, shadowNDCPos_offset_D)).x);\n          block7 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos.x, shadowNDCPos_offset_D)).x);\n          block8 = step(shadowNDCPos.z, texture2D(shadowMap, vec2(shadowNDCPos_offset_R, shadowNDCPos_offset_D)).x);\n        #endif\n        float coefX = mod(shadowNDCPos.x, oneTap.x) * shadowMapResolution.x;\n        float coefY = mod(shadowNDCPos.y, oneTap.y) * shadowMapResolution.y;\n        float shadow = 0.0;\n        float resultX = mix(block0, block1, coefX);\n        float resultY = mix(block3, block4, coefX);\n        shadow += mix(resultX , resultY, coefY);\n        resultX = mix(block1, block2, coefX);\n        resultY = mix(block4, block5, coefX);\n        shadow += mix(resultX , resultY, coefY);\n        resultX = mix(block3, block4, coefX);\n        resultY = mix(block6, block7, coefX);\n        shadow += mix(resultX, resultY, coefY);\n        resultX = mix(block4, block5, coefX);\n        resultY = mix(block7, block8, coefX);\n        shadow += mix(resultX, resultY, coefY);\n        return shadow * 0.25;\n      }\n      float NativePCFShadowFactorSoft5X (vec3 shadowNDCPos, sampler2D shadowMap, vec2 shadowMapResolution)\n      {\n        vec2 oneTap = 1.0 / shadowMapResolution;\n        vec2 twoTap = oneTap * 2.0;\n        vec2 offset1 = shadowNDCPos.xy + vec2(-twoTap.x, -twoTap.y);\n        vec2 offset2 = shadowNDCPos.xy + vec2(-oneTap.x, -twoTap.y);\n        vec2 offset3 = shadowNDCPos.xy + vec2(0.0, -twoTap.y);\n        vec2 offset4 = shadowNDCPos.xy + vec2(oneTap.x, -twoTap.y);\n        vec2 offset5 = shadowNDCPos.xy + vec2(twoTap.x, -twoTap.y);\n        vec2 offset6 = shadowNDCPos.xy + vec2(-twoTap.x, -oneTap.y);\n        vec2 offset7 = shadowNDCPos.xy + vec2(-oneTap.x, -oneTap.y);\n        vec2 offset8 = shadowNDCPos.xy + vec2(0.0, -oneTap.y);\n        vec2 offset9 = shadowNDCPos.xy + vec2(oneTap.x, -oneTap.y);\n        vec2 offset10 = shadowNDCPos.xy + vec2(twoTap.x, -oneTap.y);\n        vec2 offset11 = shadowNDCPos.xy + vec2(-twoTap.x, 0.0);\n        vec2 offset12 = shadowNDCPos.xy + vec2(-oneTap.x, 0.0);\n        vec2 offset13 = shadowNDCPos.xy + vec2(0.0, 0.0);\n        vec2 offset14 = shadowNDCPos.xy + vec2(oneTap.x, 0.0);\n        vec2 offset15 = shadowNDCPos.xy + vec2(twoTap.x, 0.0);\n        vec2 offset16 = shadowNDCPos.xy + vec2(-twoTap.x, oneTap.y);\n        vec2 offset17 = shadowNDCPos.xy + vec2(-oneTap.x, oneTap.y);\n        vec2 offset18 = shadowNDCPos.xy + vec2(0.0, oneTap.y);\n        vec2 offset19 = shadowNDCPos.xy + vec2(oneTap.x, oneTap.y);\n        vec2 offset20 = shadowNDCPos.xy + vec2(twoTap.x, oneTap.y);\n        vec2 offset21 = shadowNDCPos.xy + vec2(-twoTap.x, twoTap.y);\n        vec2 offset22 = shadowNDCPos.xy + vec2(-oneTap.x, twoTap.y);\n        vec2 offset23 = shadowNDCPos.xy + vec2(0.0, twoTap.y);\n        vec2 offset24 = shadowNDCPos.xy + vec2(oneTap.x, twoTap.y);\n        vec2 offset25 = shadowNDCPos.xy + vec2(twoTap.x, twoTap.y);\n        float block1, block2, block3, block4, block5, block6, block7, block8, block9, block10, block11, block12, block13, block14, block15, block16, block17, block18, block19, block20, block21, block22, block23, block24, block25;\n        #if CC_SHADOWMAP_FORMAT == 1\n          block1 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset1), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block2 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset2), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block3 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset3), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block4 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset4), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block5 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset5), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block6 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset6), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block7 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset7), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block8 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset8), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block9 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset9), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block10 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset10), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block11 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset11), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block12 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset12), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block13 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset13), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block14 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset14), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block15 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset15), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block16 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset16), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block17 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset17), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block18 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset18), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block19 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset19), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block20 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset20), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block21 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset21), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block22 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset22), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block23 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset23), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block24 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset24), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n          block25 = step(shadowNDCPos.z, dot(texture2D(shadowMap, offset25), vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0)));\n        #else\n          block1 = step(shadowNDCPos.z, texture2D(shadowMap, offset1).x);\n          block2 = step(shadowNDCPos.z, texture2D(shadowMap, offset2).x);\n          block3 = step(shadowNDCPos.z, texture2D(shadowMap, offset3).x);\n          block4 = step(shadowNDCPos.z, texture2D(shadowMap, offset4).x);\n          block5 = step(shadowNDCPos.z, texture2D(shadowMap, offset5).x);\n          block6 = step(shadowNDCPos.z, texture2D(shadowMap, offset6).x);\n          block7 = step(shadowNDCPos.z, texture2D(shadowMap, offset7).x);\n          block8 = step(shadowNDCPos.z, texture2D(shadowMap, offset8).x);\n          block9 = step(shadowNDCPos.z, texture2D(shadowMap, offset9).x);\n          block10 = step(shadowNDCPos.z, texture2D(shadowMap, offset10).x);\n          block11 = step(shadowNDCPos.z, texture2D(shadowMap, offset11).x);\n          block12 = step(shadowNDCPos.z, texture2D(shadowMap, offset12).x);\n          block13 = step(shadowNDCPos.z, texture2D(shadowMap, offset13).x);\n          block14 = step(shadowNDCPos.z, texture2D(shadowMap, offset14).x);\n          block15 = step(shadowNDCPos.z, texture2D(shadowMap, offset15).x);\n          block16 = step(shadowNDCPos.z, texture2D(shadowMap, offset16).x);\n          block17 = step(shadowNDCPos.z, texture2D(shadowMap, offset17).x);\n          block18 = step(shadowNDCPos.z, texture2D(shadowMap, offset18).x);\n          block19 = step(shadowNDCPos.z, texture2D(shadowMap, offset19).x);\n          block20 = step(shadowNDCPos.z, texture2D(shadowMap, offset20).x);\n          block21 = step(shadowNDCPos.z, texture2D(shadowMap, offset21).x);\n          block22 = step(shadowNDCPos.z, texture2D(shadowMap, offset22).x);\n          block23 = step(shadowNDCPos.z, texture2D(shadowMap, offset23).x);\n          block24 = step(shadowNDCPos.z, texture2D(shadowMap, offset24).x);\n          block25 = step(shadowNDCPos.z, texture2D(shadowMap, offset25).x);\n        #endif\n        vec2 coef = fract(shadowNDCPos.xy * shadowMapResolution);\n        vec2 v1X1 = mix(vec2(block1, block6), vec2(block2, block7), coef.xx);\n        vec2 v1X2 = mix(vec2(block2, block7), vec2(block3, block8), coef.xx);\n        vec2 v1X3 = mix(vec2(block3, block8), vec2(block4, block9), coef.xx);\n        vec2 v1X4 = mix(vec2(block4, block9), vec2(block5, block10), coef.xx);\n        float v1 = mix(v1X1.x, v1X1.y, coef.y) + mix(v1X2.x, v1X2.y, coef.y) + mix(v1X3.x, v1X3.y, coef.y) + mix(v1X4.x, v1X4.y, coef.y);\n        vec2 v2X1 = mix(vec2(block6, block11), vec2(block7, block12), coef.xx);\n        vec2 v2X2 = mix(vec2(block7, block12), vec2(block8, block13), coef.xx);\n        vec2 v2X3 = mix(vec2(block8, block13), vec2(block9, block14), coef.xx);\n        vec2 v2X4 = mix(vec2(block9, block14), vec2(block10, block15), coef.xx);\n        float v2 = mix(v2X1.x, v2X1.y, coef.y) + mix(v2X2.x, v2X2.y, coef.y) + mix(v2X3.x, v2X3.y, coef.y) + mix(v2X4.x, v2X4.y, coef.y);\n        vec2 v3X1 = mix(vec2(block11, block16), vec2(block12, block17), coef.xx);\n        vec2 v3X2 = mix(vec2(block12, block17), vec2(block13, block18), coef.xx);\n        vec2 v3X3 = mix(vec2(block13, block18), vec2(block14, block19), coef.xx);\n        vec2 v3X4 = mix(vec2(block14, block19), vec2(block15, block20), coef.xx);\n        float v3 = mix(v3X1.x, v3X1.y, coef.y) + mix(v3X2.x, v3X2.y, coef.y) + mix(v3X3.x, v3X3.y, coef.y) + mix(v3X4.x, v3X4.y, coef.y);\n        vec2 v4X1 = mix(vec2(block16, block21), vec2(block17, block22), coef.xx);\n        vec2 v4X2 = mix(vec2(block17, block22), vec2(block18, block23), coef.xx);\n        vec2 v4X3 = mix(vec2(block18, block23), vec2(block19, block24), coef.xx);\n        vec2 v4X4 = mix(vec2(block19, block24), vec2(block20, block25), coef.xx);\n        float v4 = mix(v4X1.x, v4X1.y, coef.y) + mix(v4X2.x, v4X2.y, coef.y) + mix(v4X3.x, v4X3.y, coef.y) + mix(v4X4.x, v4X4.y, coef.y);\n        float fAvg = (v1 + v2 + v3 + v4) * 0.0625;\n        return fAvg;\n      }\n      bool GetShadowNDCPos(out vec3 shadowNDCPos, vec4 shadowPosWithDepthBias)\n      {\n      \tshadowNDCPos = shadowPosWithDepthBias.xyz / shadowPosWithDepthBias.w * 0.5 + 0.5;\n      \tif (shadowNDCPos.x < 0.0 || shadowNDCPos.x > 1.0 ||\n      \t\tshadowNDCPos.y < 0.0 || shadowNDCPos.y > 1.0 ||\n      \t\tshadowNDCPos.z < 0.0 || shadowNDCPos.z > 1.0) {\n      \t\treturn false;\n      \t}\n      \tshadowNDCPos.xy = cc_cameraPos.w == 1.0 ? vec2(shadowNDCPos.xy.x, 1.0 - shadowNDCPos.xy.y) : shadowNDCPos.xy;\n      \treturn true;\n      }\n      vec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal, float normalBias, vec3 matViewDir0, vec3 matViewDir1, vec3 matViewDir2, vec2 projScaleXY)\n      {\n        vec4 newShadowPos = shadowPos;\n        if (normalBias > EPSILON_LOWP)\n        {\n          vec3 viewNormal = vec3(dot(matViewDir0, worldNormal), dot(matViewDir1, worldNormal), dot(matViewDir2, worldNormal));\n          if (viewNormal.z < 0.1)\n            newShadowPos.xy += viewNormal.xy * projScaleXY * normalBias * clamp(viewNormal.z, 0.001, 0.1);\n        }\n        return newShadowPos;\n      }\n      vec4 ApplyShadowDepthBias_FaceNormal(vec4 shadowPos, vec3 worldNormal, float normalBias, mat4 matLightView, vec2 projScaleXY)\n      {\n      \tvec4 newShadowPos = shadowPos;\n      \tif (normalBias > EPSILON_LOWP)\n      \t{\n      \t\tvec4 viewNormal = matLightView * vec4(worldNormal, 0.0);\n      \t\tif (viewNormal.z < 0.1)\n      \t\t\tnewShadowPos.xy += viewNormal.xy * projScaleXY * normalBias * clamp(viewNormal.z, 0.001, 0.1);\n      \t}\n      \treturn newShadowPos;\n      }\n      float GetViewSpaceDepthFromNDCDepth_Orthgraphic(float NDCDepth, float projScaleZ, float projBiasZ)\n      {\n      \treturn (NDCDepth - projBiasZ) / projScaleZ;\n      }\n      vec4 ApplyShadowDepthBias_Orthographic(vec4 shadowPos, float viewspaceDepthBias, float projScaleZ, float projBiasZ)\n      {\n      \tfloat coeffA = projScaleZ;\n      \tfloat coeffB = projBiasZ;\n      \tfloat viewSpacePos_z = GetViewSpaceDepthFromNDCDepth_Orthgraphic(shadowPos.z, projScaleZ, projBiasZ);\n      \tviewSpacePos_z += viewspaceDepthBias;\n      \tvec4 result = shadowPos;\n      \tresult.z = viewSpacePos_z * coeffA + coeffB;\n      \treturn result;\n      }\n      float CCGetDirLightShadowFactorHard (vec4 shadowPosWithDepthBias) {\n    \t  vec3 shadowNDCPos;\n    \t  if (!GetShadowNDCPos(shadowNDCPos, shadowPosWithDepthBias)) {\n    \t\t  return 1.0;\n    \t  }\n        return NativePCFShadowFactorHard(shadowNDCPos, cc_shadowMap, cc_shadowWHPBInfo.xy);\n      }\n      float CCGetDirLightShadowFactorSoft (vec4 shadowPosWithDepthBias) {\n    \t  vec3 shadowNDCPos;\n    \t  if (!GetShadowNDCPos(shadowNDCPos, shadowPosWithDepthBias)) {\n    \t\t  return 1.0;\n    \t  }\n        return NativePCFShadowFactorSoft(shadowNDCPos, cc_shadowMap, cc_shadowWHPBInfo.xy);\n      }\n      float CCGetDirLightShadowFactorSoft3X (vec4 shadowPosWithDepthBias) {\n    \t  vec3 shadowNDCPos;\n    \t  if (!GetShadowNDCPos(shadowNDCPos, shadowPosWithDepthBias)) {\n    \t\t  return 1.0;\n    \t  }\n        return NativePCFShadowFactorSoft3X(shadowNDCPos, cc_shadowMap, cc_shadowWHPBInfo.xy);\n      }\n      float CCGetDirLightShadowFactorSoft5X (vec4 shadowPosWithDepthBias) {\n    \t  vec3 shadowNDCPos;\n    \t  if (!GetShadowNDCPos(shadowNDCPos, shadowPosWithDepthBias)) {\n    \t\t  return 1.0;\n    \t  }\n        return NativePCFShadowFactorSoft5X(shadowNDCPos, cc_shadowMap, cc_shadowWHPBInfo.xy);\n      }\n      float CCShadowFactorBase(out vec4 shadowNDCPosWithBias, vec4 shadowPos, vec3 N, vec2 shadowBias)\n      {\n        vec4 pos = ApplyShadowDepthBias_FaceNormal(shadowPos, N, shadowBias.y, cc_matLightView, cc_shadowProjInfo.xy);\n        pos = ApplyShadowDepthBias_Orthographic(pos, shadowBias.x, cc_shadowProjDepthInfo.x, cc_shadowProjDepthInfo.y);\n        float realtimeShadow = 1.0;\n        #if CC_DIR_SHADOW_PCF_TYPE == 3\n          realtimeShadow = CCGetDirLightShadowFactorSoft5X(pos);\n        #endif\n        #if CC_DIR_SHADOW_PCF_TYPE == 2\n          realtimeShadow =  CCGetDirLightShadowFactorSoft3X(pos);\n        #endif\n        #if CC_DIR_SHADOW_PCF_TYPE == 1\n          realtimeShadow = CCGetDirLightShadowFactorSoft(pos);\n        #endif\n        #if CC_DIR_SHADOW_PCF_TYPE == 0\n          realtimeShadow = CCGetDirLightShadowFactorHard(pos);\n        #endif\n        shadowNDCPosWithBias = pos;\n        return mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n      }\n      #if CC_SUPPORT_CASCADED_SHADOW_MAP\n        bool CCGetCSMLevelWithTransition(out float ratio, vec3 clipPos) {\n          highp float layerThreshold = cc_csmViewDir0[0].w;\n          highp float maxRange = 1.0 - cc_csmSplitsInfo.x - layerThreshold;\n          highp float minRange = cc_csmSplitsInfo.x - layerThreshold;\n          if (clipPos.x <= minRange || clipPos.x >= maxRange ||\n              clipPos.y <= minRange || clipPos.y >= maxRange) {\n            if (clipPos.x >= layerThreshold && clipPos.x <= cc_csmSplitsInfo.x) {\n              ratio = (clipPos.x - layerThreshold) / (cc_csmSplitsInfo.x - layerThreshold);\n            }\n            if (clipPos.x >= maxRange && clipPos.x <= 1.0 - layerThreshold) {\n              ratio = (clipPos.x - maxRange) / (cc_csmSplitsInfo.x - layerThreshold);\n            }\n            if (clipPos.y >= 0.0 && clipPos.y <= cc_csmSplitsInfo.x) {\n              ratio = min((clipPos.y - layerThreshold) / (cc_csmSplitsInfo.x - layerThreshold), 1.0);\n            }\n            if (clipPos.y >= maxRange && clipPos.y <= 1.0 - layerThreshold) {\n              ratio = (clipPos.y - maxRange) / (cc_csmSplitsInfo.x - layerThreshold);\n            }\n            return true;\n          }\n          return false;\n        }\n        int CCGetCSMLevel(out bool hasNextTransition, out bool transitionArea, out float transitionRatio, out vec4 csmPos, out vec4 shadowProjDepthInfo, out vec4 shadowProjInfo, out vec3 shadowViewDir0, out vec3 shadowViewDir1, out vec3 shadowViewDir2, vec3 worldPos, int nextLayer)\n        {\n          int layer = -1;\n          highp float layerThreshold = cc_csmViewDir0[0].w;\n          for (int i = 0; i < 4; i++) {\n            vec4 shadowPos = cc_matCSMViewProj[i] * vec4(worldPos.xyz, 1.0);\n            vec3 clipPos = shadowPos.xyz / shadowPos.w * 0.5 + 0.5;\n            if (clipPos.x >= (0.0 + layerThreshold) && clipPos.x <= (1.0 - layerThreshold) &&\n                clipPos.y >= (0.0 + layerThreshold) && clipPos.y <= (1.0 - layerThreshold) &&\n                clipPos.z >= 0.0 && clipPos.z <= 1.0) {\n              #if CC_CASCADED_LAYERS_TRANSITION\n                if (layer < 0 || (nextLayer >= 0 && i == nextLayer))\n              #else\n                if (layer < 0)\n              #endif\n              {\n                #if CC_CASCADED_LAYERS_TRANSITION\n                  if (nextLayer < 0) {\n                    transitionArea = CCGetCSMLevelWithTransition(transitionRatio, clipPos);\n                  }\n                #endif\n                csmPos = cc_matCSMViewProj[i] * vec4(worldPos.xyz, 1.0);\n                csmPos.xy = csmPos.xy * cc_csmAtlas[i].xy + cc_csmAtlas[i].zw;\n                shadowProjDepthInfo = cc_csmProjDepthInfo[i];\n                shadowProjInfo = cc_csmProjInfo[i];\n                shadowViewDir0 = cc_csmViewDir0[i].xyz;\n                shadowViewDir1 = cc_csmViewDir1[i].xyz;\n                shadowViewDir2 = cc_csmViewDir2[i].xyz;\n                layer = i;\n                #if CC_CASCADED_LAYERS_TRANSITION\n                  hasNextTransition = true;\n                #endif\n              }\n            }\n          }\n          return layer;\n        }\n        int CCGetCSMLevel(out vec4 csmPos, out vec4 shadowProjDepthInfo, out vec4 shadowProjInfo, out vec3 shadowViewDir0, out vec3 shadowViewDir1, out vec3 shadowViewDir2, vec3 worldPos)\n        {\n          bool hasNextTransition = false;\n          bool transitionArea = false;\n          float transitionRatio = 0.0;\n          int nextLayer = -1;\n          return CCGetCSMLevel(hasNextTransition, transitionArea, transitionRatio, csmPos, shadowProjDepthInfo, shadowProjInfo, shadowViewDir0, shadowViewDir1, shadowViewDir2, worldPos, nextLayer);\n        }\n        float CCCSMFactorBase(out vec4 csmPos, out vec4 csmNDCPosWithBias, vec3 worldPos, vec3 N, vec2 shadowBias)\n        {\n          bool hasNext = false;\n          bool transitionArea = false;\n          float ratio = 0.0;\n          csmPos = vec4(1.0);\n          vec4 shadowProjDepthInfo, shadowProjInfo;\n          vec3 shadowViewDir0, shadowViewDir1, shadowViewDir2;\n          int level = -1;\n          #if CC_CASCADED_LAYERS_TRANSITION\n            level = CCGetCSMLevel(hasNext, transitionArea, ratio, csmPos, shadowProjDepthInfo, shadowProjInfo, shadowViewDir0, shadowViewDir1, shadowViewDir2, worldPos, -1);\n          #else\n            level = CCGetCSMLevel(csmPos, shadowProjDepthInfo, shadowProjInfo, shadowViewDir0, shadowViewDir1, shadowViewDir2, worldPos);\n          #endif\n          if (level < 0) { return 1.0; }\n          vec4 pos = ApplyShadowDepthBias_FaceNormal(csmPos, N, shadowBias.y, shadowViewDir0, shadowViewDir1, shadowViewDir2, shadowProjInfo.xy);\n          pos = ApplyShadowDepthBias_Orthographic(pos, shadowBias.x, shadowProjDepthInfo.x, shadowProjDepthInfo.y);\n          csmNDCPosWithBias = pos;\n          float realtimeShadow = 1.0;\n          #if CC_DIR_SHADOW_PCF_TYPE == 3\n            realtimeShadow = CCGetDirLightShadowFactorSoft5X(pos);\n          #endif\n          #if CC_DIR_SHADOW_PCF_TYPE == 2\n            realtimeShadow = CCGetDirLightShadowFactorSoft3X(pos);\n          #endif\n          #if CC_DIR_SHADOW_PCF_TYPE == 1\n            realtimeShadow = CCGetDirLightShadowFactorSoft(pos);\n          #endif\n          #if CC_DIR_SHADOW_PCF_TYPE == 0\n            realtimeShadow = CCGetDirLightShadowFactorHard(pos);\n          #endif\n          #if CC_CASCADED_LAYERS_TRANSITION\n            vec4 nextCSMPos = vec4(1.0);\n            vec4 nextShadowProjDepthInfo, nextShadowProjInfo;\n            vec3 nextShadowViewDir0, nextShadowViewDir1, nextShadowViewDir2;\n            float nextRealtimeShadow = 1.0;\n            CCGetCSMLevel(hasNext, transitionArea, ratio, nextCSMPos, nextShadowProjDepthInfo, nextShadowProjInfo, nextShadowViewDir0, nextShadowViewDir1, nextShadowViewDir2, worldPos, level + 1);\n            if (hasNext && transitionArea) {\n              vec4 nexPos = ApplyShadowDepthBias_FaceNormal(nextCSMPos, N, shadowBias.y, nextShadowViewDir0, nextShadowViewDir1, nextShadowViewDir2, nextShadowProjInfo.xy);\n              nexPos = ApplyShadowDepthBias_Orthographic(nexPos, shadowBias.x, nextShadowProjDepthInfo.x, nextShadowProjDepthInfo.y);\n              #if CC_DIR_SHADOW_PCF_TYPE == 3\n                nextRealtimeShadow = CCGetDirLightShadowFactorSoft5X(nexPos);\n              #endif\n              #if CC_DIR_SHADOW_PCF_TYPE == 2\n                nextRealtimeShadow = CCGetDirLightShadowFactorSoft3X(nexPos);\n              #endif\n              #if CC_DIR_SHADOW_PCF_TYPE == 1\n                nextRealtimeShadow = CCGetDirLightShadowFactorSoft(nexPos);\n              #endif\n              #if CC_DIR_SHADOW_PCF_TYPE == 0\n                nextRealtimeShadow = CCGetDirLightShadowFactorHard(nexPos);\n              #endif\n              return mix(mix(nextRealtimeShadow, realtimeShadow, ratio), 1.0, cc_shadowNFLSInfo.w);\n            }\n            return mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n          #else\n            return mix(realtimeShadow, 1.0, cc_shadowNFLSInfo.w);\n          #endif\n        }\n      #else\n        int CCGetCSMLevel(out vec4 csmPos, out vec4 shadowProjDepthInfo, out vec4 shadowProjInfo, out vec3 shadowViewDir0, out vec3 shadowViewDir1, out vec3 shadowViewDir2, vec3 worldPos) {\n          return -1;\n        }\n        float CCCSMFactorBase(out vec4 csmPos, out vec4 csmNDCPosWithBias, vec3 worldPos, vec3 N, vec2 shadowBias) {\n          csmPos = cc_matLightViewProj * vec4(worldPos, 1.0);\n          return CCShadowFactorBase(csmNDCPosWithBias, csmPos, N, shadowBias);\n        }\n      #endif\n      float CCShadowFactorBase(vec4 shadowPos, vec3 N, vec2 shadowBias) {\n        vec4 shadowNDCPosWithBias;\n        return CCShadowFactorBase(shadowNDCPosWithBias, shadowPos, N, shadowBias);\n      }\n      float CCCSMFactorBase(vec3 worldPos, vec3 N, vec2 shadowBias) {\n        vec4 csmPos, csmNDCPosWithBias;\n        return CCCSMFactorBase(csmPos, csmNDCPosWithBias, worldPos, N, shadowBias);\n      }\n    #endif\n        #if CC_RECEIVE_SHADOW && CC_SHADOW_TYPE == 2\n    #endif\n  #endif\n  vec4 CCToonShading (ToonSurface s) {\n    vec3 position;\n    #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n    position = unpackHighpData(s.position, s.position_fract_part);\n    #else\n    position = s.position;\n    #endif\n    vec3 V = normalize(cc_cameraPos.xyz - position);\n    vec3 N = normalize(s.normal);\n    vec3 L = normalize(-cc_mainLitDir.xyz);\n    float NL = 0.5 * dot(N, L) + 0.5;\n    float NH = 0.5 * dot(normalize(V + L), N) + 0.5;\n    vec3 lightColor = cc_mainLitColor.rgb * cc_mainLitColor.w * s.baseStep;\n    vec3 diffuse = mix(s.shade1, s.shade2,\n      clamp(1.0 + (s.shadeStep - s.shadeFeather - NL) / s.shadeFeather, 0.0, 1.0));\n    diffuse = mix(s.baseColor.rgb, diffuse,\n      clamp(1.0 + (s.baseStep - s.baseFeather - NL) / s.baseFeather, 0.0, 1.0));\n    float specularWeight = 1.0 - pow(s.specular.a, 5.0);\n    float specularMask = step(specularWeight + EPSILON_LOWP, NH);\n    vec3 specular = s.specular.rgb * specularMask;\n    vec3 dirlightContrib = diffuse + specular;\n    float shadow = 1.0;\n    #if CC_RECEIVE_SHADOW && CC_SHADOW_TYPE == 2\n    if(s.shadowCover < NL && cc_mainLitDir.w > 0.0) {\n      if (cc_shadowLPNNInfo.w > 0.0) {\n        #if CC_DIR_LIGHT_SHADOW_TYPE == 2\n          shadow = CCCSMFactorBase(position, N, s.shadowBias);\n        #endif\n      } else {\n        #if CC_DIR_LIGHT_SHADOW_TYPE == 1\n          shadow = CCShadowFactorBase(v_shadowPos, N, s.shadowBias);\n        #endif\n      }\n    }\n    #endif\n    dirlightContrib *= shadow;\n    vec3 finalColor = lightColor * dirlightContrib;\n    finalColor += s.emissive;\n    return vec4(finalColor, s.baseColor.a);\n  }\n#endif\n    uniform vec4 baseColor;\n    uniform vec4 colorScaleAndCutoff;\n    uniform vec4 shadeColor1;\n    uniform vec4 shadeColor2;\n    uniform vec4 specular;\n    uniform vec4 shadeParams;\n    uniform vec4 miscParams;\n    uniform vec4 emissive;\n    uniform vec4 emissiveScaleAndStrenth;\nvec3 ACESToneMap (vec3 color) {\n  color = min(color, vec3(8.0));\n  const float A = 2.51;\n  const float B = 0.03;\n  const float C = 2.43;\n  const float D = 0.59;\n  const float E = 0.14;\n  return (color * (A * color + B)) / (color * (C * color + D) + E);\n}\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_WORLD_POS CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR CC_SURFACES_DEBUG_VIEW_WORLD_POS + 1\n#define CC_SURFACES_DEBUG_VIEW_FACE_SIDE CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR + 1\n#define CC_SURFACES_DEBUG_VIEW_UV0 CC_SURFACES_DEBUG_VIEW_FACE_SIDE + 1\n#define CC_SURFACES_DEBUG_VIEW_UV1 CC_SURFACES_DEBUG_VIEW_UV0 + 1\n#define CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP CC_SURFACES_DEBUG_VIEW_UV1 + 1\n#define CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP + 1\n#define CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_BASE_COLOR CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR CC_SURFACES_DEBUG_VIEW_BASE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_TRANSPARENCY CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_METALLIC CC_SURFACES_DEBUG_VIEW_TRANSPARENCY + 1\n#define CC_SURFACES_DEBUG_VIEW_ROUGHNESS CC_SURFACES_DEBUG_VIEW_METALLIC + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY CC_SURFACES_DEBUG_VIEW_ROUGHNESS + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_ALL CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE CC_SURFACES_DEBUG_VIEW_DIRECT_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_ALL CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_EMISSIVE CC_SURFACES_DEBUG_VIEW_ENV_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_LIGHT_MAP CC_SURFACES_DEBUG_VIEW_EMISSIVE + 1\n#define CC_SURFACES_DEBUG_VIEW_SHADOW CC_SURFACES_DEBUG_VIEW_LIGHT_MAP + 1\n#define CC_SURFACES_DEBUG_VIEW_AO CC_SURFACES_DEBUG_VIEW_SHADOW + 1\n#define CC_SURFACES_DEBUG_VIEW_FOG CC_SURFACES_DEBUG_VIEW_AO + 1\n#define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#define IS_DEBUG_VIEW_ENABLE_WITH_CAMERA (cc_surfaceTransform.y != 3.0)\n#define IS_DEBUG_VIEW_LIGHTING_ENABLE_WITH_ALBEDO ((cc_debug_view_mode.y > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_MISC_ENABLE_CSM_LAYER_COLORATION ((cc_debug_view_mode.z > 0.0) && IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_DIFFUSE ((cc_debug_view_composite_pack_1.x > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_SPECULAR ((cc_debug_view_composite_pack_1.y > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_DIFFUSE ((cc_debug_view_composite_pack_1.z > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_SPECULAR ((cc_debug_view_composite_pack_1.w > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_EMISSIVE ((cc_debug_view_composite_pack_2.x > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_LIGHT_MAP ((cc_debug_view_composite_pack_2.y > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_SHADOW ((cc_debug_view_composite_pack_2.z > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_AO ((cc_debug_view_composite_pack_2.w > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_NORMAL_MAP ((cc_debug_view_composite_pack_3.x > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_FOG ((cc_debug_view_composite_pack_3.y > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_TONE_MAPPING ((cc_debug_view_composite_pack_3.z > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION ((cc_debug_view_composite_pack_3.w > 0.0) || !IS_DEBUG_VIEW_ENABLE_WITH_CAMERA)\nvec3 SRGBToLinear (vec3 gamma) {\n#ifdef CC_USE_SURFACE_SHADER\n  #if CC_USE_DEBUG_VIEW == CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    if (!IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION) {\n      return gamma;\n    }\n  #endif\n#endif\n  return gamma * gamma;\n}\nvec3 LinearToSRGB(vec3 linear) {\n#ifdef CC_USE_SURFACE_SHADER\n  #if CC_USE_DEBUG_VIEW == CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    if (!IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION) {\n      return linear;\n    }\n  #endif\n#endif\n  return sqrt(linear);\n}\nvec4 CCFragOutput (vec4 color) {\n  #if CC_USE_HDR\n    color.rgb = ACESToneMap(color.rgb);\n  #endif\n  color.rgb = LinearToSRGB(color.rgb);\n  return color;\n}\nvarying vec3 v_position;\nvarying vec2 v_uv;\n#if CC_RECEIVE_SHADOW\n  varying mediump vec2 v_shadowBias;\n#endif\n#if USE_BASE_COLOR_MAP\n  uniform sampler2D baseColorMap;\n#endif\nvarying mediump vec3 v_normal;\n#if USE_NORMAL_MAP\n  varying mediump vec4 v_tangent;\n  uniform sampler2D normalMap;\n#endif\n#if USE_1ST_SHADE_MAP\n  uniform sampler2D shadeMap1;\n#endif\n#if USE_2ND_SHADE_MAP\n  uniform sampler2D shadeMap2;\n#endif\n#if USE_SPECULAR_MAP\n  uniform sampler2D specularMap;\n#endif\n#if USE_EMISSIVE_MAP\n  uniform sampler2D emissiveMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvoid surf (out ToonSurface s) {\n  s.shade2 = shadeColor2.rgb * colorScaleAndCutoff.rgb;\n  #if USE_2ND_SHADE_MAP\n    s.shade2 *= SRGBToLinear(texture2D(shadeMap2, v_uv).rgb);\n  #endif\n  s.shade1 = shadeColor1.rgb * colorScaleAndCutoff.rgb;\n  #if USE_1ST_SHADE_MAP\n    s.shade1 *= SRGBToLinear(texture2D(shadeMap1, v_uv).rgb);\n    #if SHADE_MAP_1_AS_SHADE_MAP_2\n      s.shade2 *= s.shade1.rgb;\n    #endif\n  #endif\n  vec4 baseColor = baseColor;\n  #if USE_BASE_COLOR_MAP\n    vec4 baseColorMap = texture2D(baseColorMap, v_uv);\n    baseColorMap.rgb = SRGBToLinear(baseColorMap.rgb);\n    baseColor *= baseColorMap;\n    #if BASE_COLOR_MAP_AS_SHADE_MAP_1\n      s.shade1 *= baseColorMap.rgb;\n    #endif\n    #if BASE_COLOR_MAP_AS_SHADE_MAP_2\n      s.shade2 *= baseColorMap.rgb;\n    #endif\n  #endif\n  s.baseColor = baseColor;\n  s.baseColor.rgb *= colorScaleAndCutoff.xyz;\n  #if USE_ALPHA_TEST\n    if (s.baseColor.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n  #endif\n  s.normal = v_normal;\n  #if CC_RECEIVE_SHADOW\n    s.shadowBias = v_shadowBias;\n  #endif\n  #if USE_NORMAL_MAP\n    vec3 nmmp = texture2D(normalMap, v_uv).xyz - vec3(0.5);\n    vec3 bitangent = cross(v_normal, v_tangent.xyz) * (v_tangent.w > 0.0 ? 1.0 : -1.0);\n    s.normal =\n      (nmmp.x * emissiveScaleAndStrenth.w) * normalize(v_tangent.xyz) +\n      (nmmp.y * emissiveScaleAndStrenth.w) * normalize(bitangent) +\n      nmmp.z * normalize(s.normal);\n  #endif\n  #if CC_PLATFORM_ANDROID_AND_WEBGL && CC_ENABLE_WEBGL_HIGHP_STRUCT_VALUES\n  packHighpData(s.position, s.position_fract_part, v_position);\n  #else\n  s.position = v_position;\n  #endif\n  s.specular = specular;\n  #if USE_SPECULAR_MAP\n    s.specular.rgb *= SRGBToLinear(texture2D(specularMap, v_uv).rgb);\n  #endif\n  s.emissive = emissive.rgb * emissiveScaleAndStrenth.xyz;\n  #if USE_EMISSIVE_MAP\n    s.emissive *= SRGBToLinear(texture2D(emissiveMap, v_uv).rgb);\n  #endif\n  s.baseStep = shadeParams.x;\n  s.baseFeather = shadeParams.y;\n  s.shadeStep = shadeParams.z;\n  s.shadeFeather = shadeParams.w;\n  s.shadowCover = miscParams.x;\n}\nvec4 frag () {\n  ToonSurface s; surf(s);\n  vec4 color = CCToonShading(s);\n  return CCFragOutput(color);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]},{"name":"CCShadow","defines":[]},{"name":"CCCSM","defines":["CC_SUPPORT_CASCADED_SHADOW_MAP"]}],"samplerTextures":[{"name":"cc_shadowMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_spotShadowMap","defines":["CC_RECEIVE_SHADOW"]}],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","!CC_USE_REAL_TIME_JOINT_TEXTURE"]},{"name":"CCLocal","defines":["!USE_INSTANCING"]},{"name":"CCForwardLight","defines":["CC_FORWARD_ADD","CC_ENABLE_CLUSTERED_LIGHT_CULLING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_realtimeJoint","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","CC_USE_REAL_TIME_JOINT_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":139,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":111}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_LIGHT_PROBE","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"},{"name":"CC_MORPH_TARGET_COUNT","type":"number","range":[2,8]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean"},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean"},{"name":"CC_USE_REAL_TIME_JOINT_TEXTURE","type":"boolean"},{"name":"CC_SUPPORT_CASCADED_SHADOW_MAP","type":"boolean"},{"name":"USE_NORMAL_MAP","type":"boolean"},{"name":"CC_FORWARD_ADD","type":"boolean"},{"name":"CC_PIPELINE_TYPE","type":"number","range":[0,1]},{"name":"CC_FORCE_FORWARD_SHADING","type":"boolean"},{"name":"CC_SHADOWMAP_FORMAT","type":"number","range":[0,3]},{"name":"CC_DIR_SHADOW_PCF_TYPE","type":"number","range":[0,3]},{"name":"CC_CASCADED_LAYERS_TRANSITION","type":"boolean"},{"name":"CC_SHADOW_TYPE","type":"number","range":[0,3]},{"name":"CC_DIR_LIGHT_SHADOW_TYPE","type":"number","range":[0,3]},{"name":"CC_USE_DEBUG_VIEW","type":"number","range":[0,3]},{"name":"CC_USE_HDR","type":"boolean"},{"name":"USE_BASE_COLOR_MAP","type":"boolean"},{"name":"USE_1ST_SHADE_MAP","type":"boolean"},{"name":"USE_2ND_SHADE_MAP","type":"boolean"},{"name":"USE_SPECULAR_MAP","type":"boolean"},{"name":"USE_EMISSIVE_MAP","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"ALPHA_TEST_CHANNEL","type":"string","options":["a","r","g","b"]},{"name":"SHADE_MAP_1_AS_SHADE_MAP_2","type":"boolean"},{"name":"BASE_COLOR_MAP_AS_SHADE_MAP_1","type":"boolean"},{"name":"BASE_COLOR_MAP_AS_SHADE_MAP_2","type":"boolean"}]},{"hash":519194253,"name":"builtin-toon|shadow-caster-vs:vert|shadow-caster-fs:frag","blocks":[{"name":"Constants","stageFlags":17,"binding":0,"members":[{"name":"tilingOffset","type":16,"count":1},{"name":"baseColor","type":16,"count":1},{"name":"colorScaleAndCutoff","type":16,"count":1},{"name":"shadeColor1","type":16,"count":1},{"name":"shadeColor2","type":16,"count":1},{"name":"specular","type":16,"count":1},{"name":"shadeParams","type":16,"count":1},{"name":"miscParams","type":16,"count":1},{"name":"emissive","type":16,"count":1},{"name":"emissiveScaleAndStrenth","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"baseColorMap","type":28,"count":1,"stageFlags":16,"binding":1,"defines":["USE_BASE_COLOR_MAP"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBias","format":21,"isInstanced":true,"location":11,"defines":["USE_INSTANCING","CC_RECEIVE_SHADOW"]},{"name":"a_sh_linear_const_r","format":44,"isInstanced":true,"location":12,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_g","format":44,"isInstanced":true,"location":13,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_b","format":44,"isInstanced":true,"location":14,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_vertexId","format":11,"location":15,"defines":["CC_USE_MORPH"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCMorph","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_displacementWeights","typename":"vec4","type":16,"count":15,"isArray":true},{"name":"cc_displacementTextureInfo","typename":"vec4","type":16,"count":1}],"defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_jointTextureInfo","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_jointAnimInfo","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_joints","typename":"vec4","type":16,"count":0,"precision":"highp ","isArray":true}],"defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","!CC_USE_REAL_TIME_JOINT_TEXTURE"]},{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["!USE_INSTANCING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","typename":"sampler2D","type":28,"count":1,"stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","typename":"sampler2D","type":28,"count":1,"stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","typename":"sampler2D","type":28,"count":1,"stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","typename":"sampler2D","type":28,"count":1,"precision":"highp ","stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_realtimeJoint","typename":"sampler2D","type":28,"count":1,"precision":"highp ","stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","CC_USE_REAL_TIME_JOINT_TEXTURE"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"Constants","stageFlags":17,"binding":0,"members":[{"name":"tilingOffset","type":16,"count":1},{"name":"baseColor","type":16,"count":1},{"name":"colorScaleAndCutoff","type":16,"count":1},{"name":"shadeColor1","type":16,"count":1},{"name":"shadeColor2","type":16,"count":1},{"name":"specular","type":16,"count":1},{"name":"shadeParams","type":16,"count":1},{"name":"miscParams","type":16,"count":1},{"name":"emissive","type":16,"count":1},{"name":"emissiveScaleAndStrenth","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"baseColorMap","type":28,"count":1,"stageFlags":16,"binding":1,"defines":["USE_BASE_COLOR_MAP"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCShadow","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matLightView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matLightViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_shadowInvProjDepthInfo","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_shadowProjDepthInfo","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_shadowProjInfo","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_shadowNFLSInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_shadowWHPBInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_shadowLPNNInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_shadowColor","typename":"vec4","type":16,"count":1,"precision":"lowp "},{"name":"cc_planarNDInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCSM","stageFlags":16,"tags":{"builtin":"global"},"members":[{"name":"cc_csmViewDir0","typename":"vec4","type":16,"count":4,"precision":"highp ","isArray":true},{"name":"cc_csmViewDir1","typename":"vec4","type":16,"count":4,"precision":"highp ","isArray":true},{"name":"cc_csmViewDir2","typename":"vec4","type":16,"count":4,"precision":"highp ","isArray":true},{"name":"cc_csmAtlas","typename":"vec4","type":16,"count":4,"precision":"highp ","isArray":true},{"name":"cc_matCSMViewProj","typename":"mat4","type":25,"count":4,"precision":"highp ","isArray":true},{"name":"cc_csmProjDepthInfo","typename":"vec4","type":16,"count":4,"precision":"highp ","isArray":true},{"name":"cc_csmProjInfo","typename":"vec4","type":16,"count":4,"precision":"highp ","isArray":true},{"name":"cc_csmSplitsInfo","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["CC_SUPPORT_CASCADED_SHADOW_MAP"]},{"name":"CCGlobal","stageFlags":16,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_composite_pack_1","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_composite_pack_2","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_composite_pack_3","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":["CC_RECEIVE_SHADOW"]},{"name":"CCCamera","stageFlags":16,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":["CC_RECEIVE_SHADOW"]}],"samplerTextures":[{"name":"cc_shadowMap","typename":"sampler2D","type":28,"count":1,"precision":"highp ","stageFlags":16,"tags":{"builtin":"global"},"defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_spotShadowMap","typename":"sampler2D","type":28,"count":1,"precision":"highp ","stageFlags":16,"tags":{"builtin":"global"},"defines":["CC_RECEIVE_SHADOW"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON)\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_RECEIVE_SHADOW\n    in vec2 a_localShadowBias;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    in vec4 a_sh_linear_const_r;\n    in vec4 a_sh_linear_const_g;\n    in vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n#endif\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\n#if CC_USE_MORPH\n  layout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n  #endif\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n  vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n  vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n  vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n  }\n  #endif\n  void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n  #if CC_USE_BAKED_ANIMATION\n    layout(std140) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(std140) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    uniform highp sampler2D cc_jointTexture;\n    void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n    {\n      #if USE_INSTANCING\n        highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n      #else\n        highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n      #endif\n      invSize = cc_jointTextureInfo.w;\n      highp float tempY = floor(temp * invSize);\n      x = floor(temp - tempY * cc_jointTextureInfo.x);\n      y = (tempY + 0.5) * invSize;\n    }\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      uniform highp sampler2D cc_realtimeJoint;\n    #else\n      layout(std140) uniform CCSkinning {\n        highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n      };\n    #endif\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(3.0, i, x, y, invSize);\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(12.0, i, x, y, invSize);\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          float x = i;\n          vec4 v1 = texture(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n          vec4 v2 = texture(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n          vec4 v3 = texture(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n         float x = 4.0 * i;\n          vec4 v1 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      mat4 getJointMatrix (float i) {\n        int idx = int(i);\n        vec4 v1 = cc_joints[idx * 3];\n        vec4 v2 = cc_joints[idx * 3 + 1];\n        vec4 v3 = cc_joints[idx * 3 + 2];\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    mat4 m = skinMatrix();\n    position = m * position;\n    normal = (m * vec4(normal, 0.0)).xyz;\n    tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  #if CC_USE_MORPH\n    applyMorph(In.position, In.normal, In.tangent);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In.position, In.normal, In.tangent);\n  #endif\n}\n#if !USE_INSTANCING\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n  };\n#endif\nvoid CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n{\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n    matWorldIT = matWorld;\n  #else\n    matWorld = cc_matWorld;\n    matWorldIT = cc_matWorldIT;\n  #endif\n}\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 baseColor;\n  vec4 colorScaleAndCutoff;\n  vec4 shadeColor1;\n  vec4 shadeColor2;\n  vec4 specular;\n  vec4 shadeParams;\n  vec4 miscParams;\n  vec4 emissive;\n  vec4 emissiveScaleAndStrenth;\n};\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  mediump vec4 cc_shadowNFLSInfo;\n  mediump vec4 cc_shadowWHPBInfo;\n  mediump vec4 cc_shadowLPNNInfo;\n  lowp vec4 cc_shadowColor;\n  mediump vec4 cc_planarNDInfo;\n};\nout vec2 v_uv;\nout vec4 v_worldPos;\nout highp vec2 v_clip_depth;\nvec4 vert () {\n  StandardVertInput In;\n  CCVertInput(In);\n  mat4 matWorld, matWorldIT;\n  CCGetWorldMatrixFull(matWorld, matWorldIT);\n  v_worldPos = matWorld * In.position;\n  vec4 clipPos = cc_matLightViewProj * v_worldPos;\n  v_clip_depth = clipPos.zw;\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  return clipPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(std140) uniform Constants {\n  vec4 tilingOffset;\n  vec4 baseColor;\n  vec4 colorScaleAndCutoff;\n  vec4 shadeColor1;\n  vec4 shadeColor2;\n  vec4 specular;\n  vec4 shadeParams;\n  vec4 miscParams;\n  vec4 emissive;\n  vec4 emissiveScaleAndStrenth;\n};\nvec4 packDepthToRGBA (float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\n  ret = fract(ret);\n  ret -= vec4(ret.yzw, 0.0) / 255.0;\n  return ret;\n}\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  mediump vec4 cc_shadowNFLSInfo;\n  mediump vec4 cc_shadowWHPBInfo;\n  mediump vec4 cc_shadowLPNNInfo;\n  lowp vec4 cc_shadowColor;\n  mediump vec4 cc_planarNDInfo;\n};\n#if CC_SUPPORT_CASCADED_SHADOW_MAP\n  layout(std140) uniform CCCSM {\n    highp vec4 cc_csmViewDir0[4];\n    highp vec4 cc_csmViewDir1[4];\n    highp vec4 cc_csmViewDir2[4];\n    highp vec4 cc_csmAtlas[4];\n    highp mat4 cc_matCSMViewProj[4];\n    highp vec4 cc_csmProjDepthInfo[4];\n    highp vec4 cc_csmProjInfo[4];\n    highp vec4 cc_csmSplitsInfo;\n  };\n#endif\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON)\nfloat GetLinearDepthFromViewSpace(vec3 viewPos, float near, float far) {\n  float dist = length(viewPos);\n  return (dist - near) / (far - near);\n}\nfloat CCGetLinearDepth(vec3 worldPos, float viewSpaceBias) {\n\tvec4 viewPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n  viewPos.z += viewSpaceBias;\n\treturn GetLinearDepthFromViewSpace(viewPos.xyz, cc_shadowNFLSInfo.x, cc_shadowNFLSInfo.y);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\n\treturn CCGetLinearDepth(worldPos, 0.0);\n}\n#if CC_RECEIVE_SHADOW\n  layout(std140) uniform CCGlobal {\n    highp   vec4 cc_time;\n    mediump vec4 cc_screenSize;\n    mediump vec4 cc_nativeSize;\n    mediump vec4 cc_debug_view_mode;\n    mediump vec4 cc_debug_view_composite_pack_1;\n    mediump vec4 cc_debug_view_composite_pack_2;\n    mediump vec4 cc_debug_view_composite_pack_3;\n  };\n  layout(std140) uniform CCCamera {\n    highp   mat4 cc_matView;\n    highp   mat4 cc_matViewInv;\n    highp   mat4 cc_matProj;\n    highp   mat4 cc_matProjInv;\n    highp   mat4 cc_matViewProj;\n    highp   mat4 cc_matViewProjInv;\n    highp   vec4 cc_cameraPos;\n    mediump vec4 cc_surfaceTransform;\n    mediump vec4 cc_screenScale;\n    mediump vec4 cc_exposure;\n    mediump vec4 cc_mainLitDir;\n    mediump vec4 cc_mainLitColor;\n    mediump vec4 cc_ambientSky;\n    mediump vec4 cc_ambientGround;\n    mediump vec4 cc_fogColor;\n    mediump vec4 cc_fogBase;\n    mediump vec4 cc_fogAdd;\n    mediump vec4 cc_nearFar;\n    mediump vec4 cc_viewPort;\n  };\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotShadowMap;\n  #if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #else\n  #endif\n#endif\nin vec2 v_uv;\nin vec4 v_worldPos;\nin highp vec2 v_clip_depth;\n#if USE_BASE_COLOR_MAP\n  uniform sampler2D baseColorMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\n  vec4 baseColor = baseColor;\n  #if USE_ALPHA_TEST\n    #if USE_BASE_COLOR_MAP\n      baseColor *= texture(baseColorMap, v_uv);\n    #endif\n    if (baseColor.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n  #endif\n  highp float clipDepth = v_clip_depth.x / v_clip_depth.y * 0.5 + 0.5;\n  if(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\n    #if CC_SHADOWMAP_USE_LINEAR_DEPTH\n      clipDepth = CCGetLinearDepth(v_worldPos.xyz);\n    #endif\n  }\n  #if CC_SHADOWMAP_FORMAT == 1\n    return packDepthToRGBA(clipDepth);\n  #else\n    return vec4(clipDepth, 1.0, 1.0, 1.0);\n  #endif\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON)\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_RECEIVE_SHADOW\n    attribute vec2 a_localShadowBias;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    attribute vec4 a_sh_linear_const_r;\n    attribute vec4 a_sh_linear_const_g;\n    attribute vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n#endif\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\n#if CC_USE_MORPH\n  uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n  #endif\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n        return texture2D(tex, uv);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture2D(tex, x)),\n        decode32(texture2D(tex, y)),\n        decode32(texture2D(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n  vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n  vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n  vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n  }\n  #endif\n  void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n  #if CC_USE_BAKED_ANIMATION\n    uniform highp vec4 cc_jointTextureInfo;\n    uniform highp vec4 cc_jointAnimInfo;\n    uniform highp sampler2D cc_jointTexture;\n    void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n    {\n      #if USE_INSTANCING\n        highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n      #else\n        highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n      #endif\n      invSize = cc_jointTextureInfo.w;\n      highp float tempY = floor(temp * invSize);\n      x = floor(temp - tempY * cc_jointTextureInfo.x);\n      y = (tempY + 0.5) * invSize;\n    }\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      uniform highp sampler2D cc_realtimeJoint;\n    #else\n      uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n    #endif\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(3.0, i, x, y, invSize);\n        vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(12.0, i, x, y, invSize);\n        vec4 v1 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          float x = i;\n          vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n          vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n          vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n         float x = 4.0 * i;\n          vec4 v1 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      mat4 getJointMatrix (float i) {\n        int idx = int(i);\n        vec4 v1 = cc_joints[idx * 3];\n        vec4 v2 = cc_joints[idx * 3 + 1];\n        vec4 v3 = cc_joints[idx * 3 + 2];\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    mat4 m = skinMatrix();\n    position = m * position;\n    normal = (m * vec4(normal, 0.0)).xyz;\n    tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  #if CC_USE_MORPH\n    applyMorph(In.position, In.normal, In.tangent);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In.position, In.normal, In.tangent);\n  #endif\n}\n#if !USE_INSTANCING\n  uniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\n#endif\nvoid CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n{\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n    matWorldIT = matWorld;\n  #else\n    matWorld = cc_matWorld;\n    matWorldIT = cc_matWorldIT;\n  #endif\n}\n    uniform vec4 tilingOffset;\nuniform highp mat4 cc_matLightViewProj;\nvarying vec2 v_uv;\nvarying vec4 v_worldPos;\nvarying highp vec2 v_clip_depth;\nvec4 vert () {\n  StandardVertInput In;\n  CCVertInput(In);\n  mat4 matWorld, matWorldIT;\n  CCGetWorldMatrixFull(matWorld, matWorldIT);\n  v_worldPos = matWorld * In.position;\n  vec4 clipPos = cc_matLightViewProj * v_worldPos;\n  v_clip_depth = clipPos.zw;\n  v_uv = a_texCoord * tilingOffset.xy + tilingOffset.zw;\n  return clipPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n   uniform vec4 baseColor;\n   uniform vec4 colorScaleAndCutoff;\nvec4 packDepthToRGBA (float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 16581375.0) * depth;\n  ret = fract(ret);\n  ret -= vec4(ret.yzw, 0.0) / 255.0;\n  return ret;\n}\nuniform highp mat4 cc_matLightView;\n  uniform mediump vec4 cc_shadowNFLSInfo;\n  uniform mediump vec4 cc_shadowLPNNInfo;\n#if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #endif\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON)\nfloat GetLinearDepthFromViewSpace(vec3 viewPos, float near, float far) {\n  float dist = length(viewPos);\n  return (dist - near) / (far - near);\n}\nfloat CCGetLinearDepth(vec3 worldPos, float viewSpaceBias) {\n\tvec4 viewPos = cc_matLightView * vec4(worldPos.xyz, 1.0);\n  viewPos.z += viewSpaceBias;\n\treturn GetLinearDepthFromViewSpace(viewPos.xyz, cc_shadowNFLSInfo.x, cc_shadowNFLSInfo.y);\n}\nfloat CCGetLinearDepth(vec3 worldPos) {\n\treturn CCGetLinearDepth(worldPos, 0.0);\n}\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotShadowMap;\n  #if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #else\n  #endif\n#endif\nvarying vec2 v_uv;\nvarying vec4 v_worldPos;\nvarying highp vec2 v_clip_depth;\n#if USE_BASE_COLOR_MAP\n  uniform sampler2D baseColorMap;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\n  vec4 baseColor = baseColor;\n  #if USE_ALPHA_TEST\n    #if USE_BASE_COLOR_MAP\n      baseColor *= texture2D(baseColorMap, v_uv);\n    #endif\n    if (baseColor.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n  #endif\n  highp float clipDepth = v_clip_depth.x / v_clip_depth.y * 0.5 + 0.5;\n  if(cc_shadowLPNNInfo.x > 0.000001 && cc_shadowLPNNInfo.x < 1.999999) {\n    #if CC_SHADOWMAP_USE_LINEAR_DEPTH\n      clipDepth = CCGetLinearDepth(v_worldPos.xyz);\n    #endif\n  }\n  #if CC_SHADOWMAP_FORMAT == 1\n    return packDepthToRGBA(clipDepth);\n  #else\n    return vec4(clipDepth, 1.0, 1.0, 1.0);\n  #endif\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCShadow","defines":[]},{"name":"CCCSM","defines":["CC_SUPPORT_CASCADED_SHADOW_MAP"]},{"name":"CCGlobal","defines":["CC_RECEIVE_SHADOW"]},{"name":"CCCamera","defines":["CC_RECEIVE_SHADOW"]}],"samplerTextures":[{"name":"cc_shadowMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_spotShadowMap","defines":["CC_RECEIVE_SHADOW"]}],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","!CC_USE_REAL_TIME_JOINT_TEXTURE"]},{"name":"CCLocal","defines":["!USE_INSTANCING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_realtimeJoint","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","CC_USE_REAL_TIME_JOINT_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":54,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":111}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_LIGHT_PROBE","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"},{"name":"CC_MORPH_TARGET_COUNT","type":"number","range":[2,8]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean"},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean"},{"name":"CC_USE_REAL_TIME_JOINT_TEXTURE","type":"boolean"},{"name":"CC_SUPPORT_CASCADED_SHADOW_MAP","type":"boolean"},{"name":"USE_BASE_COLOR_MAP","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"ALPHA_TEST_CHANNEL","type":"string","options":["a","r","g","b"]},{"name":"CC_SHADOWMAP_USE_LINEAR_DEPTH","type":"boolean"},{"name":"CC_SHADOWMAP_FORMAT","type":"number","range":[0,3]}]}],[{"passes":[{"program":"builtin-toon|legacy/main-functions/outline-vs:vert|legacy/main-functions/outline-fs:frag","switch":"USE_OUTLINE_PASS","rasterizerState":{"cullMode":1},"depthStencilState":{"depthFunc":3,"depthTest":true,"depthWrite":true},"properties":{"lineWidth":{"type":13,"value":[10],"handleInfo":["outlineParams",0,13]},"depthBias":{"type":13,"value":[0],"handleInfo":["outlineParams",1,13]},"baseColor":{"type":16},"baseColorMap":{"value":"grey","type":28},"outlineParams":{"type":16,"value":[10,0,0,0]}}},{"program":"builtin-toon|toon-vs:vert|toon-fs:frag","properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"linear":true,"type":16,"value":[0.6,0.6,0.6,1],"handleInfo":["baseColor",0,16]},"colorScale":{"type":15,"value":[1,1,1],"handleInfo":["colorScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"handleInfo":["colorScaleAndCutoff",3,13]},"shadeColor1":{"linear":true,"type":16,"value":[0.4,0.4,0.4,1]},"shadeColor2":{"linear":true,"type":16,"value":[0.2,0.2,0.2,1]},"specular":{"linear":true,"type":16,"value":[1,1,1,0.3]},"baseStep":{"type":13,"value":[0.8],"handleInfo":["shadeParams",0,13]},"baseFeather":{"type":13,"value":[0.001],"handleInfo":["shadeParams",1,13]},"shadeStep":{"type":13,"value":[0.5],"handleInfo":["shadeParams",2,13]},"shadeFeather":{"type":13,"value":[0.001],"handleInfo":["shadeParams",3,13]},"shadowCover":{"type":13,"value":[0.5],"handleInfo":["miscParams",0,13]},"emissive":{"linear":true,"type":16,"value":[0,0,0,1]},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleAndStrenth",0,15]},"normalStrength":{"slide":true,"step":0.001,"type":13,"value":[1],"range":[0,5],"handleInfo":["emissiveScaleAndStrenth",3,13]},"normalMap":{"value":"normal","type":28},"mainTexture":{"value":"white","type":28,"handleInfo":["baseColorMap",0,28]},"shadeMap1":{"value":"white","type":28},"shadeMap2":{"value":"white","type":28},"specularMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"baseColor":{"type":16,"value":[0.6,0.6,0.6,1]},"colorScaleAndCutoff":{"type":16,"value":[1,1,1,0.5]},"shadeParams":{"type":16,"value":[0.8,0.001,0.5,0.001]},"miscParams":{"type":16,"value":[0.5,0,0,0]},"emissiveScaleAndStrenth":{"type":16,"value":[1,1,1,1]},"baseColorMap":{"type":28,"value":"white"}}},{"phase":"forward-add","propertyIndex":1,"program":"builtin-toon|toon-vs:vert|toon-fs:frag","embeddedMacros":{"CC_FORWARD_ADD":true},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":1,"blendSrcAlpha":0,"blendDstAlpha":1}]},"depthStencilState":{"depthFunc":2,"depthTest":true,"depthWrite":false},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"linear":true,"type":16,"value":[0.6,0.6,0.6,1],"handleInfo":["baseColor",0,16]},"colorScale":{"type":15,"value":[1,1,1],"handleInfo":["colorScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"handleInfo":["colorScaleAndCutoff",3,13]},"shadeColor1":{"linear":true,"type":16,"value":[0.4,0.4,0.4,1]},"shadeColor2":{"linear":true,"type":16,"value":[0.2,0.2,0.2,1]},"specular":{"linear":true,"type":16,"value":[1,1,1,0.3]},"baseStep":{"type":13,"value":[0.8],"handleInfo":["shadeParams",0,13]},"baseFeather":{"type":13,"value":[0.001],"handleInfo":["shadeParams",1,13]},"shadeStep":{"type":13,"value":[0.5],"handleInfo":["shadeParams",2,13]},"shadeFeather":{"type":13,"value":[0.001],"handleInfo":["shadeParams",3,13]},"shadowCover":{"type":13,"value":[0.5],"handleInfo":["miscParams",0,13]},"emissive":{"linear":true,"type":16,"value":[0,0,0,1]},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleAndStrenth",0,15]},"normalStrength":{"slide":true,"step":0.001,"type":13,"value":[1],"range":[0,5],"handleInfo":["emissiveScaleAndStrenth",3,13]},"normalMap":{"value":"normal","type":28},"mainTexture":{"value":"white","type":28,"handleInfo":["baseColorMap",0,28]},"shadeMap1":{"value":"white","type":28},"shadeMap2":{"value":"white","type":28},"specularMap":{"value":"white","type":28},"emissiveMap":{"value":"grey","type":28},"baseColor":{"type":16,"value":[0.6,0.6,0.6,1]},"colorScaleAndCutoff":{"type":16,"value":[1,1,1,0.5]},"shadeParams":{"type":16,"value":[0.8,0.001,0.5,0.001]},"miscParams":{"type":16,"value":[0.5,0,0,0]},"emissiveScaleAndStrenth":{"type":16,"value":[1,1,1,1]},"baseColorMap":{"type":28,"value":"white"}}},{"phase":"shadow-caster","propertyIndex":1,"program":"builtin-toon|shadow-caster-vs:vert|shadow-caster-fs:frag","rasterizerState":{"cullMode":1},"properties":{"tilingOffset":{"type":16,"value":[1,1,0,0]},"mainColor":{"type":16,"value":[0.6,0.6,0.6,1],"handleInfo":["baseColor",0,16]},"colorScale":{"type":15,"value":[1,1,1],"handleInfo":["colorScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"handleInfo":["colorScaleAndCutoff",3,13]},"shadeColor1":{"type":16,"value":[0.4,0.4,0.4,1]},"shadeColor2":{"type":16,"value":[0.2,0.2,0.2,1]},"specular":{"type":16,"value":[1,1,1,0.3]},"baseStep":{"type":13,"value":[0.8],"handleInfo":["shadeParams",0,13]},"baseFeather":{"type":13,"value":[0.001],"handleInfo":["shadeParams",1,13]},"shadeStep":{"type":13,"value":[0.5],"handleInfo":["shadeParams",2,13]},"shadeFeather":{"type":13,"value":[0.001],"handleInfo":["shadeParams",3,13]},"emissive":{"type":16,"value":[0,0,0,1]},"emissiveScale":{"type":15,"value":[1,1,1],"handleInfo":["emissiveScaleAndStrenth",0,15]},"normalStrenth":{"type":13,"value":[1],"handleInfo":["emissiveScaleAndStrenth",3,13]},"mainTexture":{"value":"white","type":28,"handleInfo":["baseColorMap",0,28]},"baseColor":{"type":16,"value":[0.6,0.6,0.6,1]},"colorScaleAndCutoff":{"type":16,"value":[1,1,1,0.5]},"shadeParams":{"type":16,"value":[0.8,0.001,0.5,0.001]},"emissiveScaleAndStrenth":{"type":16,"value":[1,1,1,1]},"baseColorMap":{"type":28,"value":"white"}}}]}]]],0,0,[],[],[]],[[{"name":"shopremind","rect":{"x":585,"y":1322,"width":40,"height":40},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"ResultPage"],[42,"ResultPage",33554432,[-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19],[[3,-3,[0,"47phGvI6pIdpbGhxuHmH9l"],[5,640,1136]],[29,45,100,100,-4,[0,"51SFOuDEdIVb5zW8MjFa7U"]],[56,-5,[0,"4bWBdZ+AlDbJzl9fmUhqI3"]]],[64,"a7ERIEEwRNP6aVz0LcK2NL",null,null,-2,0,[-1]]],[16,"headshoot",33554432,1,[-22,-23,-24,-25],[[3,-20,[0,"caE6N0Vp1H5qxQkTONPKIY"],[5,400,50]],[36,1,0,-21,[0,"2aw1SOm15J0K8GMk78ZFJj"],12]],[1,"e46MVqJGVEl4TiWPDjoJLh",null,null,null,1,0],[1,0,30.945,0]],[16,"totalkill",33554432,1,[-28,-29,-30,-31],[[3,-26,[0,"feHpCIEEpMBq4kaNfemoBq"],[5,400,50]],[36,1,0,-27,[0,"60oS24xyJNpKpZ78VlAO/1"],17]],[1,"c0rABO80tGbqxNxxk6jtsA",null,null,null,1,0],[1,0,-34.055,0]],[16,"reward",33554432,1,[-34,-35,-36,-37],[[3,-32,[0,"5eKls4yAhDE7Uur7zkUJxU"],[5,400,50]],[36,1,0,-33,[0,"c5OMMWCuNDqYJAfC3hLVRA"],22]],[1,"f3dkVJp+5HsbEbkVQc1vUN",null,null,null,1,0],[1,0,-99.055,0]],[16,"income",33554432,1,[-40,-41,-42],[[3,-38,[0,"1eCaHokSNBr5Clt12E53y5"],[5,400,50]],[36,1,0,-39,[0,"a1RVlBuBdCWpVNh58Yu1Ym"],26]],[1,"f12tVyUVBNraO3vgX4Qhhc",null,null,null,1,0],[1,0,-164.055,0]],[17,"bg",33554432,1,[[3,-43,[0,"a9Ruvi3DhPYaAsATASdYCh"],[5,640,1136]],[24,0,-44,[0,"d0fu8hRw5AsbLtegRAcvDw"],0],[29,45,120,120,-45,[0,"20NUPDTOBJNoxDNuVw2HL+"]],[37,-46,[0,"feDwZ+VfFO45HfXr2vvMO3"]]],[1,"2c/Si+Av5Ep6ywERBBm++L",null,null,null,1,0]],[6,"btnhome",33554432,1,[[3,-47,[0,"d8gLYkTkZNK7j7uC6hX3Fc"],[5,60,60]],[7,-48,[0,"5b7ncbQ+ZLi7cYnQrVg2sp"],1],[84,9,15,15,-49,[0,"7cYUiIX+RBC5gnEfUisokJ"]],[30,1,-50,[0,"3fwpLGRbJF9ZTMp9iXls7Q"],[4,4292072403],2]],[1,"2eijIayQFAhIwt3mRK9bq1",null,null,null,1,0],[1,-275,523,0]],[16,"NumGoldTT",33554432,1,[-54],[[3,-51,[0,"a7aT/BYftFGKrRDN6gGVhZ"],[5,140,50]],[36,1,0,-52,[0,"ffk/sOHHxGG451sVAu9e+w"],4],[79,33,15,20,-53,[0,"77Y/85sCxFV6CRt1Kmr3cD"]]],[1,"cbhcIhii9Nt7B7bUhdojYZ",null,null,null,1,0],[1,235,523,0]],[6,"btnclaim",33554432,1,[[3,-55,[0,"976SfA4fxP4qvTmtHr8KJ0"],[5,226,96]],[7,-56,[0,"aeGi3s0hNMPoh0rA7GknSk"],27],[99,1,-58,[0,"e7nxChIHdP7LQqzXFw4uDk"],[4,4292072403],-57,28]],[1,"1fOFeHu1VMcZtvcQn+7x4x",null,null,null,1,0],[1,0,-270,0]],[6,"btnnext",33554432,1,[[3,-59,[0,"42AdLlkv5HGZRwfxfgNPO/"],[5,220,80]],[7,-60,[0,"284RVkmOdH4qX6jCiO5FMM"],29],[99,1,-62,[0,"1aRrFjrCtEW6kPoAcEucKz"],[4,4292072403],-61,30]],[1,"55ywg0actM9pw0WGX54Uel",null,null,null,1,0],[1,0,-360,0]],[16,"title",33554432,1,[-65],[[3,-63,[0,"02Y8+artlByIslgRTfATJF"],[5,330,282]],[7,-64,[0,"6fvZTp9U1OTI6/aDFP1fGV"],6]],[1,"84w5bME+BJ+4JqZa+aQubE",null,null,null,1,0],[1,0,360,0]],[6,"btnshare",33554432,1,[[3,-66,[0,"2cdWAKoyFFb7fLyunwvOSy"],[5,0,0]],[7,-67,[0,"f2aRo3IlVBzJ+vt4vrYChg"],31],[30,1,-68,[0,"dfj2JErQVMOJn1dDGjormB"],[4,4292072403],32]],[1,"5fWIiuYBlK9JyY7oodejN+",null,null,null,1,0],[1,198.513,51.705,0]],[43,0,{},1,[44,"84/gB38qxIbJVJJ+NABhar",null,null,-74,[149,"a5f69oOXNMyJoREsxFUIbd",1,[[158,[31,["84/gB38qxIbJVJJ+NABhar"]],[[37,-73,[0,"1cvbf8aX1LXpen0/sIajDx"]]]]],[[14,"moregameView",["_name"],-69],[11,["_lpos"],-70,[1,-320,-488,0]],[11,["_lrot"],-71,[3,0,0,0,1]],[11,["_euler"],-72,[1,0,0,0]]]],33]],[31,["84/gB38qxIbJVJJ+NABhar"]],[6,"text",33554432,8,[[3,-75,[0,"c1b85H1W1PqYqgEd/yPbNe"],[5,70.34,30]],[35,"10000",30,30,30,false,-76,[0,"53H2JWWgZNtJ538g51BNuw"],3]],[1,"90BrHBV01C7KsEtJURI7U+",null,null,null,1,0],[1,12,1,0]],[17,"icon",33554432,11,[[3,-77,[0,"b0wnR00xpDbrDwPynxc1gV"],[5,640,80]],[7,-78,[0,"b3+cAi1zRMvYnirTpmlJzn"],5]],[1,"f6/N7PTxxPoZfA+8YCYJx+",null,null,null,1,0]],[6,"praise",33554432,1,[[3,-79,[0,"96W42nymZMmJ0R4CqCA6lP"],[5,520,86]],[7,-80,[0,"813AP0oZRJ87FhMq409V00"],7]],[1,"3btLJZtZ9A4o/oOe4H79Jl",null,null,null,1,0],[1,0,215,0]],[6,"showLevel",33554432,1,[[3,-81,[0,"0eEthKaUVKq6J4or3wTbX8"],[5,450,58]],[141,1,20,-82,[0,"9a7MNIVUREupphkuZc2ntm"]]],[1,"0c6NEsAxtCa7Eg+oDkxhwV",null,null,null,1,0],[1,0,130,0]],[6,"icon1",33554432,2,[[3,-83,[0,"a2ZMtUDZtLraE936RrYU7H"],[5,76,41]],[7,-84,[0,"cco0UIQr9Ku6VuyOxx83iV"],8]],[1,"d5j+xJ7UNHlLfVFTN9gxQq",null,null,null,1,0],[1,-130,0,0]],[6,"icon2",33554432,2,[[20,-85,[0,"4dcyyEa2RLdbMIGC5bOuf4"],[5,115,14],[0,1,0.5]],[7,-86,[0,"26p8KmTaRCO5EwKrMH9SiX"],9]],[1,"54QaD26V9GXYrUzruscH11",null,null,null,1,0],[1,50,0,0]],[6,"icon3",33554432,2,[[3,-87,[0,"b5Fk5RpI5OJbLaXB/yC77i"],[5,19.86,24]],[35,"F",24,24,24,false,-88,[0,"d8ds7HxMNLIbgMcx/3jDX8"],10]],[1,"59GDGvmS5OablvIdgssaJC",null,null,null,1,0],[1,100,0,0]],[6,"text",33554432,2,[[20,-89,[0,"ceynoNaZNM3o7Dq3zpdB/r"],[5,31.79,24],[0,0,0.5]],[66,"B0",24,24,24,false,2,-90,[0,"b5OTE/JuxP34YvzV35d9p1"],[4,4281791485],11]],[1,"17Zg3ojkhNnJ6lcQEtDznI",null,null,null,1,0],[1,111,0,0]],[6,"icon1",33554432,3,[[3,-91,[0,"fe2iMTNvdO164aZj9kA9tV"],[5,43,43]],[7,-92,[0,"9f012EV4xIpbVXLTwBej+O"],13]],[1,"dalm3WU45GDbqcY+owGuzB",null,null,null,1,0],[1,-130,0,0]],[6,"icon2",33554432,3,[[20,-93,[0,"f2TjXhR+RNN6m2v2v3Ad0r"],[5,119,15],[0,1,0.5]],[7,-94,[0,"4eGqe4pWdJeb8wVmoiAZQt"],14]],[1,"4ejC1z8j5Jgpw5DiuMMJXR",null,null,null,1,0],[1,50,0,0]],[6,"icon3",33554432,3,[[3,-95,[0,"23QYOqdJdK1obVvNqXt7ii"],[5,19.86,24]],[35,"F",24,24,24,false,-96,[0,"145ZvgmGRAs7+XbeOQ6WGq"],15]],[1,"343685YqxJnZkKFdkO82JV",null,null,null,1,0],[1,100,0,0]],[6,"text",33554432,3,[[20,-97,[0,"fcrVxTdCRKwKfOq1Km6cfT"],[5,58.14,24],[0,0,0.5]],[66,"B120",24,24,24,false,2,-98,[0,"c67tsUiklB16wO+UshZ8Yn"],[4,4281791485],16]],[1,"bcKB1EA7NLBbcJWGJNjg5I",null,null,null,1,0],[1,111,0,0]],[94,"icon1",33554432,4,[[3,-99,[0,"19c4UL0JlLe5gt3fFixNpf"],[5,35,36]],[7,-100,[0,"1b1hT4ZFBC5YbUlqgx+C6b"],18]],[1,"a4HiRwdXNJcrYQjzDLO3QZ",null,null,null,1,0],[1,-130,0,0],[1,1.1,1.1,1.1]],[6,"icon2",33554432,4,[[20,-101,[0,"51sgVGLPlKxYRLU0mPL350"],[5,134,14],[0,1,0.5]],[7,-102,[0,"a7LvRyIxFGoo0zmkwJvehe"],19]],[1,"f38A+LpQtFDbCHoWQBx7+c",null,null,null,1,0],[1,50,0,0]],[6,"icon3",33554432,4,[[3,-103,[0,"2fzIhc+nlH67y95psKrI3a"],[5,19.86,24]],[35,"F",24,24,24,false,-104,[0,"4cy5oTubZMqZ6NzqDu9Km1"],20]],[1,"1epsK9MChDArLTY8jA7Pjc",null,null,null,1,0],[1,100,0,0]],[6,"text",33554432,4,[[20,-105,[0,"35Esu5UmlHPId95gw4RDte"],[5,58.14,24],[0,0,0.5]],[66,"B120",24,24,24,false,2,-106,[0,"e9OzkoiENNgp+HuU4g1D4V"],[4,4281791485],21]],[1,"e5152fVTFKNZYhfkVtg6k0",null,null,null,1,0],[1,111,0,0]],[6,"icon2",33554432,5,[[20,-107,[0,"34j/ixbSJGqYyJXQztugD9"],[5,71,14],[0,1,0.5]],[7,-108,[0,"9622E9bWhL5LUnJfUii6qJ"],23]],[1,"05DI78MS9NOrj8L8ApySLj",null,null,null,1,0],[1,50,0,0]],[6,"icon3",33554432,5,[[3,-109,[0,"5a+TrRN99MhKHz3e0taFZz"],[5,19.86,24]],[35,"F",24,24,24,false,-110,[0,"523vcShFtOUISo52hRBAbV"],24]],[1,"d7iuZflJ5IXo8263bfLgiN",null,null,null,1,0],[1,100,0,0]],[6,"text",33554432,5,[[20,-111,[0,"91XMFP2DpLnI4fkioFrsm4"],[5,58.14,24],[0,0,0.5]],[66,"B120",24,24,24,false,2,-112,[0,"f1sk/urlhDbJTJonlolXNl"],[4,4281791485],25]],[1,"50VvZFVaRBDIzDjVPmAOck",null,null,null,1,0],[1,111,0,0]]],0,[0,-1,13,0,4,1,0,0,1,0,0,1,0,0,1,0,-1,6,0,-2,7,0,-3,8,0,-4,11,0,-5,17,0,-6,18,0,-7,2,0,-8,3,0,-9,4,0,-10,5,0,-11,9,0,-12,10,0,-13,12,0,-14,13,0,0,2,0,0,2,0,-1,19,0,-2,20,0,-3,21,0,-4,22,0,0,3,0,0,3,0,-1,23,0,-2,24,0,-3,25,0,-4,26,0,0,4,0,0,4,0,-1,27,0,-2,28,0,-3,29,0,-4,30,0,0,5,0,0,5,0,-1,31,0,-2,32,0,-3,33,0,0,6,0,0,6,0,0,6,0,0,6,0,0,7,0,0,7,0,0,7,0,0,7,0,0,8,0,0,8,0,0,8,0,-1,15,0,0,9,0,0,9,0,19,9,0,0,9,0,0,10,0,0,10,0,19,10,0,0,10,0,0,11,0,0,11,0,-1,16,0,0,12,0,0,12,0,0,12,0,18,14,0,18,14,0,18,14,0,18,14,0,0,13,0,4,13,0,0,15,0,0,15,0,0,16,0,0,16,0,0,17,0,0,17,0,0,18,0,0,18,0,0,19,0,0,19,0,0,20,0,0,20,0,0,21,0,0,21,0,0,22,0,0,22,0,0,23,0,0,23,0,0,24,0,0,24,0,0,25,0,0,25,0,0,26,0,0,26,0,0,27,0,0,27,0,0,28,0,0,28,0,0,29,0,0,29,0,0,30,0,0,30,0,0,31,0,0,31,0,0,32,0,0,32,0,0,33,0,0,33,0,5,1,112],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,11,9,1,1,1,1,1,1,9,9,1,1,1,9,9,1,1,1,9,9,1,1,9,9,1,1,11,1,11,1,11,13],[35,7,7,1,18,282,283,284,111,112,1,1,16,113,114,1,1,16,115,116,1,1,16,117,1,1,16,118,118,119,119,120,120,121]],[[{"name":"hp1","rect":{"x":333,"y":895,"width":60,"height":10},"offset":{"x":0,"y":0},"originalSize":{"width":60,"height":10},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"resultbg6","rect":{"x":1085,"y":759,"width":60,"height":50},"offset":{"x":0,"y":0},"originalSize":{"width":60,"height":50},"rotated":false,"capInsets":[20,0,20,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,2,2,0,0","mipmaps":["abPvRPjkZLm75cGQwTWo6k"]}],[2],0,[],[],[]],[[{"name":"numimage2","rect":{"x":5,"y":31,"width":229,"height":305},"offset":{"x":-1,"y":53},"originalSize":{"width":241,"height":473},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-114.5,-152.5,0,114.5,-152.5,0,-114.5,152.5,0,114.5,152.5,0],"indexes":[0,1,2,2,1,3],"uv":[5,442,234,442,5,137,234,137],"nuv":[0.02074688796680498,0.28964059196617337,0.970954356846473,0.28964059196617337,0.02074688796680498,0.9344608879492601,0.970954356846473,0.9344608879492601],"minPos":{"x":-114.5,"y":-152.5,"z":0},"maxPos":{"x":114.5,"y":152.5,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[285]],[[[9,"weapon_rpg_rocket"],[167,"weapon_rpg_rocket",[[21,1,-2,[0,"1cmaKcq1RdKLGoutsqmVOg"],[0],[8,true,true],1]],[1,"57hgtGi9tam7JbIM1cxAh/",null,null,null,-1,0],[1,3,3,3]]],0,[0,4,1,0,0,1,0,5,1,2],[0,0],[-1,3],[27,122]],[[{"name":"resultbg19","rect":{"x":528,"y":1643,"width":54,"height":54},"offset":{"x":0,"y":0},"originalSize":{"width":54,"height":54},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[26,"soundwarn",".mp3",0.91175],-1],0,0,[],[],[]],[[{"name":"homebg4","rect":{"x":1060,"y":1567,"width":135,"height":61},"offset":{"x":0,"y":0},"originalSize":{"width":135,"height":61},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[22,"HERO2",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0.645,"metallic":0.109,"specularIntensity":0.136},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[85,2]],[[[47,"nature","0",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainTexture",6,0]],11]]],0,0,[0,0],[8,7],[75,15]],[[{"name":"resultbg7","rect":{"x":585,"y":1120,"width":76,"height":41},"offset":{"x":0,"y":0},"originalSize":{"width":76,"height":41},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"leader3","rect":{"x":1,"y":844,"width":342,"height":49},"offset":{"x":0,"y":0},"originalSize":{"width":342,"height":49},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[10,".bin",1998329630,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":14208,"length":1920,"count":480,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":14208,"count":296,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.35992005467414856,-1.6486629247665405,-9.340622901916504],"maxPosition",8,[1,0.35992005467414856,1.6486626863479614,9.340621948242188]]],-1],0,0,[],[],[]],[[[22,"treasure_chest",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true,"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0,"specularIntensity":0},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[123,2]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["b5aqPfDzBC/5FS17tNosR6"]}],[2],0,[],[],[]],[[[10,".bin",2694655735,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":9888,"length":1488,"count":372,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":9888,"count":206,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.8103733062744141,-0.8123826384544373,-0.8102383613586426],"maxPosition",8,[1,0.8103733062744141,0.8123828172683716,0.810238242149353]]],-1],0,0,[],[],[]],[[{"name":"weaponbg1","rect":{"x":858,"y":1377,"width":200,"height":200},"offset":{"x":0,"y":0},"originalSize":{"width":200,"height":200},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"leaderAim"],[95,"leaderAim",33554432,[[3,-2,[0,"a9vRajzrtPJKMDKLDKbIEX"],[5,116,116]],[7,-3,[0,"d2REUD1BZMg7bUOgQynq/N"],0]],[1,"16soXCe21Gia12INQsuXmM",null,null,null,-1,0]]],0,[0,4,1,0,0,1,0,0,1,0,5,1,3],[0],[1],[286]],[[[9,"moregame"],[95,"moregame",33554432,[[3,-2,[0,"31Fix/JlRISbIy5B00I0iI"],[5,120,140]],[7,-3,[0,"8fJQm2uaFIOryyPL5iKIf5"],0],[30,1,-4,[0,"caCnLDLQlOZbaQJHE17Itu"],[4,4292072403],1]],[1,"6cxIx0hupP+Ia7+96/LppW",null,null,null,-1,0]]],0,[0,4,1,0,0,1,0,0,1,0,0,1,0,5,1,4],[0,0],[1,11],[49,49]],[[{"name":"leader5","rect":{"x":1,"y":661,"width":359,"height":49},"offset":{"x":0,"y":0},"originalSize":{"width":359,"height":49},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"weapon_rpg"],[71,"weapon_rpg",[-2],[1,"806mtaRLRS7axHOEsCR3Eu",null,null,null,-1,0]],[109,"weapon_rpg",1,[-4],[[21,1,-3,[0,"307+hwmUtSpJZBsJBjPV/q"],[2],[8,true,true],3]],[1,"e4i6XJ+KxRYrYITIzv/BQE",null,null,null,1,0]],[27,"weapon_rpg_rocket",2,[[21,1,-5,[0,"ddsallPH9JL6bbqPgDPRWB"],[0],[8,true,true],1]],[1,"0aMU79WdhGFrpmfIuAB7S8",null,null,null,1,0]]],0,[0,4,1,0,-1,2,0,0,2,0,-1,3,0,0,3,0,5,1,5],[0,0,0,0],[-1,3,-1,3],[27,122,27,287]],[[[22,"box_border",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_OUTLINE_PASS":true,"USE_INSTANCING":true,"USE_POSITION_SCALING":true},{"USE_INSTANCING":true,"USE_BASE_COLOR_MAP":true,"BASE_COLOR_MAP_AS_SHADE_MAP_1":true,"BASE_COLOR_MAP_AS_SHADE_MAP_2":true},{},{}],[[[{"lineWidth":80},"baseColor",8,[4,4278255615]],[{"baseStep":0.5,"baseFeather":1,"shadeStep":10,"shadeFeather":10},"mainColor",8,[4,4294967295],"specular",8,[4,16777215],"mainTexture",6,0],{},{}],11,11,0,0]]],0,0,[0,0],[8,7],[124,25]],[[[10,".bin",3059394547,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":12864,"length":2496,"count":624,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":12864,"count":268,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.8665550351142883,-0.022086920216679573,-6.200936794281006],"maxPosition",8,[1,0.8665553331375122,5.664636611938477,-5.039062976837158]]],-1],0,0,[],[],[]],[[[10,".bin",1255874542,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":19536,"length":4752,"count":1188,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":19536,"count":407,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-5.185731887817383,-2.1823979068358312e-7,-5.18572998046875],"maxPosition",8,[1,5.185731887817383,6.417799472808838,5.185729503631592]]],-1],0,0,[],[],[]],[[{"name":"share","rect":{"x":515,"y":523,"width":77,"height":75},"offset":{"x":0,"y":0},"originalSize":{"width":77,"height":75},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"leader1","rect":{"x":523,"y":165,"width":116,"height":116},"offset":{"x":0,"y":0},"originalSize":{"width":116,"height":116},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[22,"treasure_chest_border",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_OUTLINE_PASS":true,"USE_INSTANCING":true},{"USE_INSTANCING":true,"USE_BASE_COLOR_MAP":true},{},{}],[[[{"lineWidth":100},"baseColor",8,[4,4278255615]],[{"baseStep":0.5,"baseFeather":1,"shadeStep":10,"shadeFeather":10},"mainColor",8,[4,4294967295],"specular",8,[4,16777215],"mainTexture",6,0],{},{}],11,11,0,0]]],0,0,[0,0],[8,7],[123,25]],[[[9,"boss2"],[34,"boss2",[-9,-10],[[69,true,false,-4,[0,"c2ovL2/v5ZF5MoWVegEgeJ"],[13,14,15,16,17,18,19,20],[[70,"group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm/Bip001 R Hand",-3]],21],[104,-5,[0,"40QTFOiPpImrljPnqk1LZI"],[22,23]],[105,0.3,-6,[0,"51kxvi2p5DyJtn54TWeadY"],[1,0,2.3,0.05]],[106,0.35,1.5,-7,[0,"df8KgYjqxAKZl2pO4UwYEf"],[1,0,1,0]],[102,2,false,-8,[0,"4f8t6mDU9IQKaRF7X5uNSh"],[1,0,1,1]]],[64,"98L6Qz/fpRkKOUAtG2zw7L",null,null,-2,0,[-1]]],[48,"group1",1,[-11,-12,-13,-14,-15],[1,"43VdW9GuJe3KU00e1qrPWu",null,null,null,1,0]],[31,["61w+jJ2RdTMKeJA84fbFSH"]],[62,"Bip001 Pelvis",[-16,-17,-18],[1,"da4pFHR09asb8UBfi3SjdH",null,null,null,1,0],[3,-0.49999999254917427,-0.49999999254917427,-0.49999930709576956,0.5000007078049009],[1,-89.99991974527727,-89.99991974527727,-0.0000017074910602964197]],[4,"Bip001 Spine",4,[-19,-20,-21],[1,"3dHriYAgRawIKAq3bsC/av",null,null,null,1,0],[1,0.06345447897911072,-0.00018557309522293508,8.825598030171022e-8],[3,-0.0000020895975280582397,-7.029299899061134e-7,0.013839598922637322,0.9999042281622775],[1,-0.00023840385348735112,-0.00007725782883960567,1.5859518471693235]],[63,"Bip001",2,[[[28,"Bip001 Footsteps",-22,[1,"3b93I5JdZZY7YrnjfNLlkt",null,null,null,1,0],[1,2.2204459996194763e-18,-4.235164641608193e-24,-0.48366937041282654],[3,-5.855533932713747e-36,8.721625300910364e-33,0.7071063043492204,0.7071072580235531],[1,0,-9.489292531882443e-34,90]],4],4,1],[1,"60una63sJeh6qV108eUTCK",null,null,null,1,0],[1,1.5575574163761985e-9,1.223509669303894,-0.03563276305794716],[3,-0.5000003576277408,-0.49999964237200345,-0.49999964237200345,0.5000003576277408],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90,-89.99991803772996,0]],[93,"Bip001 R Hand Socket",1,[-23],[1,"1bHD3OjLpBH6PcxmCcmrTD",null,null,null,1,0],[1,-1.1131373801939857,1.838145354003317,-0.02885021111468119],[3,0.048865442948463636,-0.04720239446017907,0.9958501437579962,-0.060552403516946525],[1,2.540000116945136,2.5400002612904107,2.5400001129065592],[1,174.9057677591496,-174.70201326474557,-7.19319336926635]],[43,0,{},7,[44,"61w+jJ2RdTMKeJA84fbFSH",null,null,-24,[50,"21VwXhKkZLcbp61/OqYeUR",1,[[14,"weapon5",["_name"],3],[11,["_lpos"],3,[1,0.085,0.011,0.041]],[11,["_lrot"],3,[3,-4.329780281177466e-17,0.7071067811865476,0.7071067811865475,4.329780281177467e-17]],[11,["_euler"],3,[1,-90,180,0]],[11,["_lscale"],3,[1,0.5,0.5,0.5]]]],12]],[19,"head_M",2,[[18,1,-25,[0,"7bkNKNE4de4LKTyuO8lx8A"],[0],[8,true,true],1,1,2]],[1,"d7IM/hf4NeyqCD4YiOWHPS",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.7476730346679688,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[4,"Bip001 Neck",5,[-26],[1,"29e5rkDpFQU6M34+6mXMqZ",null,null,null,1,0],[1,0.24925068020820618,0.002057993318885565,2.225801765121105e-9],[3,-2.5382543063059532e-14,-3.4013390465250123e-7,0.12263263619889618,0.9924521331221942],[1,0.00000492800718908746,-0.00003988183168096121,14.088127942062796]],[15,"Bip001 Head",10,[[38,"Bip001 HeadNub",-27,[1,"c0DDt+8c9cAZN4HfLr2GlV",null,null,null,1,0],[1,0.14218726754188538,0,-1.3552526853146218e-22]]],[1,"7e0R6njY1ZyIbfI16jkdXN",null,null,null,1,0],[1,0.04924758896231651,1.907348590179936e-8,0],[3,-3.4882480159419137e-13,3.7819707678111146e-7,-0.13635667822804998,0.9906598085631964],[1,0.000006137648761566025,0.00004459159608868198,-15.674154664616246]],[4,"Bip001 L Clavicle",5,[-28],[1,"94n3euuR9WRZQD6k3f5+29",null,null,null,1,0],[1,0.22444087266921997,0.000241467947489582,0.05013936385512352],[3,0.6646332882242292,-0.041312624648330666,0.7451421777055485,-0.036317960200814375],[1,179.23387337832077,-96.57884308222117,-6.259954481230718]],[4,"Bip001 L UpperArm",12,[-29],[1,"3awekmEb9WcZTL/koi9JbS",null,null,null,1,0],[1,0.09830138832330704,-2.38418573772492e-9,1.4210854397564648e-16],[3,0.04255099175736575,-0.0012785928417488632,-0.040795269909396685,0.9982602487597254],[1,4.883685295492153,0.05283206706572578,-4.678090947669645]],[15,"Bip001 L Forearm",13,[[28,"Bip001 L Hand",-30,[1,"0bcOT+gcFe46aSSyJ2AqWQ",null,null,null,1,0],[1,0.13451942801475525,0,0],[3,-0.7068251826029146,1.3165644977296043e-9,-1.3176133253999859e-9,0.7073882676708432],[1,-89.95437407813083,0,-2.1344341156289847e-7]]],[1,"d4UXRs7HxamLMte0Vw46fu",null,null,null,1,0],[1,0.159247487783432,-9.53674295089968e-9,-7.629394360719743e-8],[3,-1.3211275627375078e-17,1.1242273068600845e-17,-0.0615115136775642,0.998106373932706],[1,-1.4427079470210262e-15,1.2018022123098817e-15,-7.053152824002574]],[4,"Bip001 R Clavicle",5,[-31],[1,"8cuTkfJBRZ/I0e52dpeC5c",null,null,null,1,0],[1,0.22444087266921997,0.0002417469077045098,-0.05013935640454292],[3,-0.6646333971699345,0.04131056392481429,0.7451422854079972,-0.036316100720105285],[1,-179.23390833343123,96.57883794429625,-6.259637834225308]],[4,"Bip001 R UpperArm",15,[-32],[1,"6akMWcUxdTrLbRzBMwFoJo",null,null,null,1,0],[1,0.09830138087272644,2.38418573772492e-9,1.4210854397564648e-16],[3,-0.042550999201322014,0.0012785855073846203,-0.04079526617775551,0.9982602486043184],[1,-4.883686184053137,-0.05283292551134381,-4.678090483855789]],[4,"Bip001 R Forearm",16,[-33],[1,"232rQqVTZT/a3NRcvD0KNF",null,null,null,1,0],[1,0.15924744307994843,0,7.629394360719743e-8],[3,1.4171622405368395e-17,4.3406712685104826e-18,-0.0615115136775642,0.998106373932706],[1,1.6640617539843948e-15,6.009011272576598e-16,-7.053152824002574]],[15,"Bip001 R Hand",17,[[28,"WeaponContainer",-34,[1,"a6S68w6Lha8ZBLTVopHbw4",null,null,null,1,0],[1,0.08682487159967422,0.009681015275418758,0.058159179985523224],[3,0.07951347495774536,0.6636559934753525,0.7431398598259328,0.03132855506211496],[1,-96.80771665888834,-175.55522297722828,8.748770928418296]]],[1,"9ckzs3mOZarYaWD5UFCf+Z",null,null,null,1,0],[1,0.13451938331127167,1.776356799695581e-17,-7.629394360719743e-8],[3,0.7068252124052276,2.306085595844923e-9,-2.9625327292760735e-9,0.7073882378922517],[1,89.95437890588063,4.268868636040652e-7,-5.336086190280782e-8]],[4,"Bip001 L Thigh",4,[-35],[1,"40m3LGo5NZEbjaA/6RE3UN",null,null,null,1,0],[1,-1.1444091541079615e-7,1.2516974834397843e-7,0.07466395199298859],[3,0.018307237243421235,0.999761299171899,-0.0005939877685746522,-0.011909530685995871],[1,0.04309417898204713,-178.63579635154264,2.09863395998742]],[4,"Bip001 L Calf",19,[-36],[1,"e09EMcvZlZzIaUBH51t0li",null,null,null,1,0],[1,0.23993217945098877,0,0],[3,-1.9135070445383419e-19,-2.632967114808625e-18,-0.05198767289971633,0.9986477266115776],[1,-3.778728342000386e-17,-3.040914943161604e-16,-5.960035262353657]],[4,"Bip001 L Foot",20,[-37],[1,"70YL49wyRTz78DeHzNucG9",null,null,null,1,0],[1,0.16850009560585022,4.440891999238953e-18,9.53674295089968e-9],[3,0.00002668103463277201,-0.011924974547102866,0.03369276949931899,0.9993610916748956],[1,0.04920839647513726,-1.3689689338390039,3.8613259886719686]],[15,"Bip001 L Toe0",21,[[51,"Bip001 L Toe0Nub",-38,[1,"fdG0QFAdRZ67wbHSb8bcY0",null,null,null,1,0],[1,0.0584682933986187,-2.98023217215615e-10,0],[3,-5.910146639665284e-14,1.776806190378769e-15,1,-6.123234262925839e-17],[1,-1,-0.9999999403953552,-0.9999999403953552],[1,-179.9999999999998,179.99999999999324,-7.0167096047230345e-15]]],[1,"53/PUyh/5fiqkhQjUqDtSK",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,1.5454350301197766e-8,1.5454268588785198e-8,0.7071067513842251,0.7071068109888683],[1,0,0.0000025044845661635244,90]],[4,"Bip001 R Thigh",4,[-39],[1,"1fNDbbfV5Z4JD3zQ9S3rgd",null,null,null,1,0],[1,1.1444091541079615e-7,-8.225440950582197e-8,-0.07466395199298859],[3,0.018307220172854872,0.9997612824196819,0.0005926282604946994,0.01191103084710343],[1,-0.042935196277668404,178.6356214928802,2.09863021316722]],[4,"Bip001 R Calf",23,[-40],[1,"acyZTbi0NVxo022688GDjX",null,null,null,1,0],[1,0.23993214964866638,0,0],[3,1.3034441181491747e-20,2.503826801162521e-19,-0.051987676614938125,0.9986477264181702],[1,2.9994474418916213e-18,2.8886738744973417e-17,-5.9600356886632015]],[4,"Bip001 R Foot",24,[-41],[1,"0aFhksJ+JbwKKADX+yfyLV",null,null,null,1,0],[1,0.16850009560585022,0,9.53674295089968e-9],[3,-0.000026684054124251007,0.011925061146287096,0.033692773185577625,0.9993610905171781],[1,-0.04920908323064725,1.3689788872170112,3.861326402895733]],[15,"Bip001 R Toe0",25,[[38,"Bip001 R Toe0Nub",-42,[1,"94etp5c7xRRZXaUtu8JEQc",null,null,null,1,0],[1,0.0584682859480381,0,1.776356799695581e-17]]],[1,"49fbrLHzhSe70YYdZ7iJ2Z",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,-1.5454308319985075e-8,-1.5454308319985075e-8,0.7071067811865474,0.7071067811865474],[1,0,-0.0000025044778683729144,90]],[19,"Legs_C",2,[[18,1,-43,[0,"96aZoGzXJcBZ79yx1KfRwt"],[3],[8,true,true],1,4,5]],[1,"6dqanZ5GBThavZfpngXw/s",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"Body_D",2,[[18,1,-44,[0,"catF4Xvr1UkLQw8n/dkern"],[6],[8,true,true],1,7,8]],[1,"922YEHJnhblrpJJBE8Ppdw",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"extra_equip_D",2,[[18,1,-45,[0,"7aEQYWZFFY0bSLVocyVi6C"],[9],[8,true,true],1,10,11]],[1,"b6Nh12CEdWBp8zFZBy97o0",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]]],0,[0,-1,8,0,4,1,0,14,7,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,-2,7,0,-1,9,0,-2,6,0,-3,27,0,-4,28,0,-5,29,0,-1,5,0,-2,19,0,-3,23,0,-1,10,0,-2,12,0,-3,15,0,6,6,0,-1,8,0,4,8,0,0,9,0,-1,11,0,6,11,0,-1,13,0,-1,14,0,6,14,0,-1,16,0,-1,17,0,-1,18,0,6,18,0,-1,20,0,-1,21,0,-1,22,0,6,22,0,-1,24,0,-1,25,0,-1,26,0,6,26,0,0,27,0,0,28,0,0,29,0,5,1,4,6,6,45],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,3,10,-1,3,10,-1,3,10,-1,3,10,13,-1,-2,-3,-4,-5,-6,-7,-8,17,-1,-2],[36,288,289,36,44,45,36,290,291,36,47,48,21,9,10,11,5,12,6,13,14,5,8,3]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["bdfG1TfFlLRoHzyTTEZIDR"]}],[2],0,[],[],[]],[[[26,"soundshoot5",".mp3",0.612],-1],0,0,[],[],[]],[[[22,"block",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true,"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0,"specularIntensity":0},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[292,2]],[[[9,"Coin"],[95,"Coin",33554432,[[3,-2,[0,"45GR0KD8hFA5eKr8GsyZ7M"],[5,33.1,40]],[142,"F",40,false,-3,[0,"1exHL5GspHHb2qgxyFmKIk"],0]],[1,"4aJTMFt8lGcJh2pdEnlcE2",null,null,null,-1,0]]],0,[0,4,1,0,0,1,0,0,1,0,5,1,3],[0],[9],[1]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["c1t/8hWKVHBax/tx5iRlVB"]}],[2],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["c29i6gnTtGpInGm7/0sIb2"]}],[2],0,[],[],[]],[[{"name":"resultbg17","rect":{"x":0,"y":0,"width":12,"height":12},"offset":{"x":0,"y":0},"originalSize":{"width":12,"height":12},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-6,-6,0,6,-6,0,-6,6,0,6,6,0],"indexes":[0,1,2,2,1,3],"uv":[0,12,12,12,0,0,12,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-6,"y":-6,"z":0},"maxPos":{"x":6,"y":6,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[293]],[[[10,".bin",2147785200,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":283680,"length":32628,"count":8157,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":283680,"count":3546,"stride":80},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_color","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false},{"name":"a_texCoord2","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.8352837562561035,-0.23648956418037415,-0.05655641853809357],"maxPosition",8,[1,0.5984652042388916,0.1914084404706955,0.0467967614531517]]],-1],0,0,[],[],[]],[[[10,".bin",1920125048,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":45632,"length":8136,"count":2034,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":45632,"count":713,"stride":64},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false},{"name":"a_texCoord2","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.3841588497161865,0.15999986231327057,-0.04251633211970329],"maxPosition",8,[1,0.148227259516716,0.30663925409317017,0.05618773028254509]]],-1],0,0,[],[],[]],[[[26,"soundshoot1",".mp3",0.731429],-1],0,0,[],[],[]],[[[9,"leader"],[168,"leader",33554432,[[3,-2,[0,"abUKosB1dEprqBZHmWynki"],[5,225,49]],[7,-3,[0,"34AQPYTBdLn7zghbmdNwQU"],0]],[1,"9a4toSnL5ABqJLOwJeqk7S",null,null,null,-1,0],[1,0,300,0],[1,1.1,1.1,1.1]]],0,[0,4,1,0,0,1,0,0,1,0,5,1,3],[0],[1],[83]],[[{"name":"resultbg9","rect":{"x":523,"y":283,"width":115,"height":14},"offset":{"x":0,"y":0},"originalSize":{"width":115,"height":14},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["c6y8ORgMNBM7y8vNGZOIqd"]}],[2],0,[],[],[]],[[[26,"soundhit2",".mp3",0.966531],-1],0,0,[],[],[]],[[[157,"numimage",116,{"commonHeight":164,"fontSize":116,"atlasName":"numimage.png","fontDefDictionary":{"48":{"xOffset":0,"yOffset":0,"xAdvance":56,"rect":{"x":444,"y":120,"width":56,"height":116}},"49":{"xOffset":0,"yOffset":0,"xAdvance":48,"rect":{"x":60,"y":238,"width":48,"height":116}},"50":{"xOffset":0,"yOffset":0,"xAdvance":60,"rect":{"x":320,"y":120,"width":60,"height":116}},"51":{"xOffset":0,"yOffset":0,"xAdvance":56,"rect":{"x":502,"y":120,"width":56,"height":116}},"52":{"xOffset":0,"yOffset":0,"xAdvance":56,"rect":{"x":560,"y":120,"width":56,"height":116}},"53":{"xOffset":0,"yOffset":0,"xAdvance":56,"rect":{"x":618,"y":120,"width":56,"height":116}},"54":{"xOffset":0,"yOffset":0,"xAdvance":56,"rect":{"x":676,"y":120,"width":56,"height":116}},"55":{"xOffset":0,"yOffset":0,"xAdvance":56,"rect":{"x":734,"y":120,"width":56,"height":116}},"56":{"xOffset":0,"yOffset":0,"xAdvance":56,"rect":{"x":792,"y":120,"width":56,"height":116}},"57":{"xOffset":0,"yOffset":0,"xAdvance":56,"rect":{"x":2,"y":238,"width":56,"height":116}},"65":{"xOffset":0,"yOffset":0,"xAdvance":320,"rect":{"x":2,"y":2,"width":320,"height":116}},"66":{"xOffset":0,"yOffset":0,"xAdvance":88,"rect":{"x":230,"y":120,"width":88,"height":116}},"67":{"xOffset":0,"yOffset":0,"xAdvance":60,"rect":{"x":382,"y":120,"width":60,"height":116}},"68":{"xOffset":0,"yOffset":0,"xAdvance":264,"rect":{"x":324,"y":2,"width":264,"height":116}},"69":{"xOffset":0,"yOffset":0,"xAdvance":44,"rect":{"x":110,"y":238,"width":44,"height":116}},"70":{"xOffset":0,"yOffset":0,"xAdvance":96,"rect":{"x":132,"y":120,"width":96,"height":116}},"71":{"xOffset":0,"yOffset":0,"xAdvance":128,"rect":{"x":2,"y":120,"width":128,"height":116}},"72":{"xOffset":0,"yOffset":0,"xAdvance":160,"rect":{"x":590,"y":2,"width":160,"height":116}}},"kerningDict":{"4259907":-2,"4259911":-2,"4325441":-1,"4456513":-4,"4587585":-10}}]],0,0,[0],[25],[294]],[[[9,"warning"],[95,"warning",33554432,[[3,-2,[0,"c8MLhVOHZIBaMVqSs1Aibt"],[5,12,36]],[7,-3,[0,"23z0FlfeNAV7Wjh6sdenQJ"],0]],[1,"8aapDc1tVPUKk9Xp2W+QPU",null,null,null,-1,0]]],0,[0,4,1,0,0,1,0,0,1,0,5,1,3],[0],[1],[295]],[[[47,"wall2_2",1,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true,"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0.314,"metallic":0.153,"specularIntensity":0.261},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[296,2]],[[[22,"wall2_1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true,"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0.314,"metallic":0.153,"specularIntensity":0.261},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[297,2]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,2,2,0,0","mipmaps":["c9bON9D0ZPmZZ7nTuCv50X"]}],[2],0,[],[],[]],[[{"name":"snipermirror2","rect":{"x":0,"y":0,"width":680,"height":1200},"offset":{"x":0,"y":0},"originalSize":{"width":680,"height":1200},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-340,-600,0,340,-600,0,-340,600,0,340,600,0],"indexes":[0,1,2,2,1,3],"uv":[0,1200,680,1200,0,0,680,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-340,"y":-600,"z":0},"maxPos":{"x":340,"y":600,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[298]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["caM76F9ehObZo919ojGI5Z"]}],[2],0,[],[],[]],[[{"name":"gamebg1","rect":{"x":533,"y":1229,"width":150,"height":50},"offset":{"x":0,"y":0},"originalSize":{"width":150,"height":50},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[26,"soundreload",".mp3",0.757551],-1],0,0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["cbG8chHjpB+ZXJO1zb2QM0"]}],[2],0,[],[],[]],[[[9,"bossTitle"],[169,"bossTitle",[-2],[1,"efJTAvidZLYq04O/A/o9xd",null,null,null,-1,0],[1,-4.440892098500626e-16,3.5999999999999996,0],[3,0.7071067811914954,8.774256328969895e-11,1.0067646355943179e-10,0.7071067811815996],[1,0.17999999999974242,0.17999999999985755,0.179999999999882],[1,90.00000000080185,-1.0480141301018646e-9,1.526730517319713e-8]],[27,"title",1,[[103,"Plane<ModelComponent>",1,-3,[0,"1569xqUqBLmJ/wBM82OnvX"],[0],[8,true,true],1]],[1,"44I52nzSNNXr0Q1xXonzL0",null,null,null,1,0]]],0,[0,4,1,0,-1,2,0,0,2,0,5,1,3],[0,0],[-1,3],[299,26]],[[[9,"SniperMirror"],[42,"SniperMirror",33554432,[-6,-7,-8],[[3,-2,[0,"decwQXtF5LuZzPbyDsN7Jx"],[5,640,1136]],[29,45,100,100,-3,[0,"25Nq9YjptE4avvAKFd80Kq"]],[37,-4,[0,"74DuyAf3VBzrxfDOtTc+6N"]],[180,false,-5,[0,"1dUchRA7dHtpREAPQaFnC9"]]],[1,"35v6PUHkpIEaJAMrGpY72A",null,null,null,-1,0]],[77,"mask",33554432,1,[-12],[[3,-9,[0,"84sE6SiGJNT5BMPntgdDg+"],[5,500,500]],[155,1,true,-10,[0,"60zUTfe3lB3625Pye8ZN2z"]],[156,-11,[0,"90hkyyY2ZJZ7KUl8NPDb0e"],[4,16777215]]],[1,"82jhyAZmtJF5/GgP9YED/B",null,null,null,1,0]],[6,"icon",33554432,1,[[3,-13,[0,"cfK/3om2ZNYJvLHmyLhXhC"],[5,574,1002]],[7,-14,[0,"beLWbL0eZAjKpvLkKBNCnn"],1],[176,4,-31.1,-15,[0,"26jpgxJNhOtahPzEl1GIvx"]]],[1,"39UOr4zPhGa7NhiNOUUUW7",null,null,null,1,0],[1,0,-98.10000000000002,0]],[17,"bg",33554432,2,[[3,-16,[0,"77a5gyis9KdojxYpxET5Gb"],[5,1000,2000]],[24,0,-17,[0,"2dx4RBwidPwYqspK+WV6ip"],0]],[1,"e5otxJFVNN6r+GC78rhwoN",null,null,null,1,0]],[170,"rpg",false,33554432,1,[[3,-18,[0,"6ejiPYsY1OZKM8W48D3pFB"],[5,150,150]],[7,-19,[0,"6b43IaBd1KJaXtfusFOPq9"],2]],[1,"443Q9opmtNgrAlE6xWvFWk",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,-2,3,0,-3,5,0,0,2,0,0,2,0,0,2,0,-1,4,0,0,3,0,0,3,0,0,3,0,0,4,0,0,4,0,0,5,0,0,5,0,5,1,19],[0,0,0],[1,1,1],[24,82,300]],[[[9,"moregameView"],[96,"moregameView",33554432,[-11],[[20,-7,[0,"4enAgSUmZO94NftJLl94s8"],[5,640,160],[0,0,0.5]],[177,44,100,-8,[0,"8bjxqcB8dMyYG4low/vkE/"]],[24,0,-9,[0,"42jXaHOaRM2afiGTCSQLJj"],5],[211,-10,[0,"5cTjo9XuRFOZ5LauJAzpW3"],[6,7,8,9]]],[64,"84/gB38qxIbJVJJ+NABhar",null,null,-6,0,[-1,-2,-3,-4,-5]],[1,-320,-488,0]],[77,"View",33554432,1,[-14,-15,-16,-17,-18],[[20,-12,[0,"d915fNTLdDQbYHuXL4+bpK"],[5,1000,160],[0,0,0.5]],[186,1,10,20,-13,[0,"45rnc21G5KkLljC4kmXSZW"]]],[1,"f4C1Tra+JGYY4bv+zsU9sg",null,null,null,1,0]],[31,["6cxIx0hupP+Ia7+96/LppW"]],[31,["6cxIx0hupP+Ia7+96/LppW"]],[31,["6cxIx0hupP+Ia7+96/LppW"]],[31,["6cxIx0hupP+Ia7+96/LppW"]],[31,["6cxIx0hupP+Ia7+96/LppW"]],[43,0,{},2,[44,"6cxIx0hupP+Ia7+96/LppW",null,null,-19,[50,"baVK2+4whLIKjNV19BGNaN",1,[[14,"moregame",["_name"],3],[11,["_lpos"],3,[1,70,0,0]],[11,["_lrot"],3,[3,0,0,0,1]],[11,["_euler"],3,[1,0,0,0]]]],0]],[43,0,{},2,[44,"6cxIx0hupP+Ia7+96/LppW",null,null,-20,[50,"63fwpzgWVDgaxFgGXjcSwm",1,[[14,"moregame",["_name"],4],[11,["_lpos"],4,[1,210,0,0]],[11,["_lrot"],4,[3,0,0,0,1]],[11,["_euler"],4,[1,0,0,0]]]],1]],[43,0,{},2,[44,"6cxIx0hupP+Ia7+96/LppW",null,null,-21,[50,"d7pY3ApQZPC59BTkvv5Ond",1,[[14,"moregame",["_name"],5],[11,["_lpos"],5,[1,350,0,0]],[11,["_lrot"],5,[3,0,0,0,1]],[11,["_euler"],5,[1,0,0,0]]]],2]],[43,0,{},2,[44,"6cxIx0hupP+Ia7+96/LppW",null,null,-22,[50,"31VGOsF71HJobt61fJHbE6",1,[[14,"moregame",["_name"],6],[11,["_lpos"],6,[1,490,0,0]],[11,["_lrot"],6,[3,0,0,0,1]],[11,["_euler"],6,[1,0,0,0]]]],3]],[43,0,{},2,[44,"6cxIx0hupP+Ia7+96/LppW",null,null,-23,[50,"57Hbt1lFtJrIRrE0JZnB/1",1,[[14,"moregame",["_name"],7],[11,["_lpos"],7,[1,630,0,0]],[11,["_lrot"],7,[3,0,0,0,1]],[11,["_euler"],7,[1,0,0,0]]]],4]]],0,[0,-1,12,0,-2,11,0,-3,10,0,-4,9,0,-5,8,0,4,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,0,2,0,0,2,0,-1,8,0,-2,9,0,-3,10,0,-4,11,0,-5,12,0,4,8,0,4,9,0,4,10,0,4,11,0,4,12,0,5,1,23],[0,0,0,0,0,0,0,0,0,0],[13,13,13,13,13,1,-1,-2,-3,-4],[28,28,28,28,28,301,49,302,303,304]],[[[22,"storehouse2",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true,"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0,"specularIntensity":0},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[305,2]],[[[10,".bin",1781394007,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":20784,"length":3804,"count":951,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":20784,"count":433,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.8703351020812988,-0.007447701878845692,-0.8571163415908813],"maxPosition",8,[1,0.8703387379646301,5.17684268951416,0.8571142554283142]]],-1],0,0,[],[],[]],[[{"name":"trybg2","rect":{"x":1111,"y":1225,"width":197,"height":27},"offset":{"x":0,"y":0},"originalSize":{"width":197,"height":27},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"weapon3"],[71,"weapon3",[-2,-3],[1,"63v8jymSFbRJcr5lbyp5Ez",null,null,null,-1,0]],[48,"weapon",1,[-4,-5],[1,"a6kYhHds1Tya+9NaelaM58",null,null,null,1,0]],[27,"weapon_1",2,[[21,1,-6,[0,"75l1zifzReiqCo9K9vEmm4"],[0],[8,true,true],1]],[1,"4b9Al38LVepJBFnTZ4seEV",null,null,null,1,0]],[27,"weapon_2",2,[[21,1,-7,[0,"02MW4XSqldyJbEKipIzlzw"],[2],[8,true,true],3]],[1,"9e/F/wkRtdLaRUJCFuDRAq",null,null,null,1,0]],[72,"bulletstart",1,[[92,"Cube<ModelComponent>",false,1,[null],-8,[0,"8ditWS+TdPJqzIkk+l1KU8"],[8,true,true],4]],[1,"21c5BmMKdFpaoXQzeA4kzL",null,null,null,1,0],[1,-0.838,0.104,0]]],0,[0,4,1,0,-1,2,0,-2,5,0,-1,3,0,-2,4,0,0,3,0,0,4,0,0,5,0,5,1,8],[0,0,0,0,0],[-1,3,-1,3,3],[306,307,308,309,22]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["cdVTvGjoZEOrk7yEQfxcJa"]}],[2],0,[],[],[]],[[{"name":"follow","rect":{"x":0,"y":0,"width":640,"height":640},"offset":{"x":0,"y":0},"originalSize":{"width":640,"height":640},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-320,-320,0,320,-320,0,-320,320,0,320,320,0],"indexes":[0,1,2,2,1,3],"uv":[0,640,640,640,0,0,640,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-320,"y":-320,"z":0},"maxPos":{"x":320,"y":320,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[310]],[[{"name":"resultbg18","rect":{"x":588,"y":506,"width":12,"height":8},"offset":{"x":0,"y":0},"originalSize":{"width":12,"height":8},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"1","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["cePG+5G1RA6I0096VGjkbm"]}],[2],0,[],[],[]],[[[9,"resultlevel"],[96,"resultlevel",33554432,[-3,-4,-5,-6,-7,-8,-9,-10],[[3,-2,[0,"e5FuKMokBHFoqTWq+CNl8Q"],[5,74,74]]],[1,"91RxQ7RxVOcILHR5atdHIA",null,null,null,-1,0],[1,-188,-6.655999999999949,0]],[17,"bomline",33554432,1,[[20,-11,[0,"c8Tkjgl5JLD4KU0AeCSpK0"],[5,100,12],[0,0,0.5]],[24,0,-12,[0,"7cNt0t5bpDhK+xpz7uXIL6"],0]],[1,"95/P305AxFEKGf3XU+ovCT",null,null,null,1,0]],[17,"topline",33554432,1,[[20,-13,[0,"b1WZnl1PJEva0mKnlv1auW"],[5,100,8],[0,0,0.5]],[24,0,-14,[0,"b1EEveukdOvJocv02u+4x4"],1]],[1,"5bzQEpvS1CJqMWfmYOy6Ko",null,null,null,1,0]],[17,"after",33554432,1,[[3,-15,[0,"c7Gtp/teZFbY/9xVj4uhxM"],[5,58,58]],[7,-16,[0,"a5zbnffVpAGKPY+vPdHdwm"],2]],[1,"329+QAVkBK2bjhT3V0xpir",null,null,null,1,0]],[17,"before",33554432,1,[[3,-17,[0,"eeIIY0d6hG/KHmY9X4Hef8"],[5,58,58]],[7,-18,[0,"01nHe7SMlN64p49vofVoW4"],3]],[1,"1cDr5/d3lOIZ1PG3tJyTXx",null,null,null,1,0]],[17,"now",33554432,1,[[3,-19,[0,"f0c1JelIJByI8ji5qKtikC"],[5,74,74]],[7,-20,[0,"0e46mI90hE0ZBxdVAD2qh/"],4]],[1,"1fcftQhM1Hapc+FbIVKPKo",null,null,null,1,0]],[17,"text",33554432,1,[[3,-21,[0,"12g+pnPZlKZqvw2NUURqKf"],[5,10.76,26]],[35,"1",26,26,26,false,-22,[0,"50mDGBDrdPhrDKjHNkYOrn"],5]],[1,"90gh0ZNVNLh6G9w511e//a",null,null,null,1,0]],[94,"chesticon",33554432,1,[[3,-23,[0,"e4S1rsbJ1AObL7DXde8O0N"],[5,54,54]],[7,-24,[0,"70SBnvpLxNPbCAFb/cme+7"],6]],[1,"f8RjfsuvVBH5UStIx9/LIA",null,null,null,1,0],[1,0,-0.983,0],[1,0.8,0.8,0.8]],[17,"bossicon",33554432,1,[[3,-25,[0,"36FTRnG9FOH4jS3cLjt6zp"],[5,42,40]],[7,-26,[0,"61bnmlknFPC5RBVeMv0nTq"],7]],[1,"66EKNZPaFP2rabhGCeNd37",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,-1,2,0,-2,3,0,-3,4,0,-4,5,0,-5,6,0,-6,7,0,-7,8,0,-8,9,0,0,2,0,0,2,0,0,3,0,0,3,0,0,4,0,0,4,0,0,5,0,0,5,0,0,6,0,0,6,0,0,7,0,0,7,0,0,8,0,0,8,0,0,9,0,0,9,0,5,1,26],[0,0,0,0,0,0,0,0],[1,1,1,1,1,9,1,1],[311,312,313,314,315,1,316,317]],[[{"name":"sureadbg2","rect":{"x":964,"y":889,"width":166,"height":76},"offset":{"x":0,"y":-2},"originalSize":{"width":176,"height":86},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"trybg1","rect":{"x":643,"y":1,"width":400,"height":480},"offset":{"x":0,"y":0},"originalSize":{"width":400,"height":480},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[26,"sounddie",".mp3",1.253878],-1],0,0,[],[],[]],[[[9,"SettingPage"],[42,"SettingPage",33554432,[-7,-8],[[3,-2,[0,"47phGvI6pIdpbGhxuHmH9l"],[5,640,1136]],[29,45,100,100,-3,[0,"51SFOuDEdIVb5zW8MjFa7U"]],[56,-4,[0,"4bWBdZ+AlDbJzl9fmUhqI3"]],[212,-5,[0,"9eGkpYiVNMSqK4/NFe3sxd"],[10,11,12,13,14,15,16,17]],[37,-6,[0,"dc7QuRaQ1KzbsLAYPOcnaZ"]]],[1,"a7ERIEEwRNP6aVz0LcK2NL",null,null,null,-1,0]],[16,"panel",33554432,1,[-11,-12,-13,-14,-15,-16,-17],[[3,-9,[0,"02r8MgbhFG+LrT1FCE0itx"],[5,360,440]],[7,-10,[0,"73fBHJw2dIH79RMEou+v6/"],9]],[1,"01EXpiMERAC7/RCFCgQYS0",null,null,null,1,0],[1,0,80,0]],[17,"bg",33554432,1,[[3,-18,[0,"a9Ruvi3DhPYaAsATASdYCh"],[5,640,1136]],[24,0,-19,[0,"d0fu8hRw5AsbLtegRAcvDw"],0],[29,45,120,120,-20,[0,"20NUPDTOBJNoxDNuVw2HL+"]],[100,180,-21,[0,"feDwZ+VfFO45HfXr2vvMO3"]]],[1,"2c/Si+Av5Ep6ywERBBm++L",null,null,null,1,0]],[6,"btnclose",33554432,2,[[3,-22,[0,"746zm3TddKA6e6+U3uaPa+"],[5,226,90]],[24,0,-23,[0,"c4xTUPAwBAIIMbDBPZczhz"],1],[30,1,-24,[0,"9cuITfzfxEpJlan3PG362v"],[4,4292072403],2]],[1,"dasbAJYiVEzaT8PS5F/YX3",null,null,null,1,0],[1,0,-130.49,0]],[6,"musicicon",33554432,2,[[3,-25,[0,"56JE47ukFPFJIVwRmSmVvP"],[5,33,37]],[7,-26,[0,"e0JewUTGRDKLtliJUvpUxw"],3]],[1,"1eN7xRPt1C4LWJL9ggpY+I",null,null,null,1,0],[1,-140,117,0]],[6,"musicbtn",33554432,2,[[3,-27,[0,"c9bt7yT7BDnZGYU4TOl6yI"],[5,56,30]],[7,-28,[0,"f69na9OPdESrMBxNj1kBiz"],4]],[1,"d4BTDO/uBMILx+JuVjPdtq",null,null,null,1,0],[1,120,117,0]],[6,"audioicon",33554432,2,[[3,-29,[0,"ceE4hCWrNDj5MiFr3sVNd2"],[5,38,32]],[7,-30,[0,"6bxZlZBGJCEL/3RU/t1vb4"],5]],[1,"ac9pGIEtpItJxQqNagLRRq",null,null,null,1,0],[1,-140,53,0]],[6,"audiobtn",33554432,2,[[3,-31,[0,"e68BvmKRNG2b7eoBgvrPzY"],[5,56,30]],[7,-32,[0,"13QHkGafBPbLjhB+zsH0+Q"],6]],[1,"87+iqC4iNCwolIcuZ2XScY",null,null,null,1,0],[1,120,53,0]],[6,"shockicon",33554432,2,[[3,-33,[0,"b84qhe0rtPx5QjBoyMNKOS"],[5,38,34]],[7,-34,[0,"64rAjPMEhGcItgKX4yZGYs"],7]],[1,"a6533/KcpLN4RAQssqJJHS",null,null,null,1,0],[1,-140,-10,0]],[6,"shockbtn",33554432,2,[[3,-35,[0,"c8lyPb9INNkqb5zGmDRxrr"],[5,56,30]],[7,-36,[0,"05j/WIxj5CdZkWSnn10IQn"],8]],[1,"93tcjkiFREC6Jw2v4bL3Xg",null,null,null,1,0],[1,120,-10,0]]],0,[0,4,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,3,0,-2,2,0,0,2,0,0,2,0,-1,4,0,-2,5,0,-3,6,0,-4,7,0,-5,8,0,-6,9,0,-7,10,0,0,3,0,0,3,0,0,3,0,0,3,0,0,4,0,0,4,0,0,4,0,0,5,0,0,5,0,0,6,0,0,6,0,0,7,0,0,7,0,0,8,0,0,8,0,0,9,0,0,9,0,0,10,0,0,10,0,5,1,36],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,11,1,1,1,1,1,1,1,-1,-2,-3,-4,-5,-6,-7,-8],[24,125,125,126,37,127,37,128,37,318,126,319,127,320,128,321,37,322]],[[[9,"boss1"],[34,"boss1",[-9,-10],[[69,true,false,-4,[0,"c2ovL2/v5ZF5MoWVegEgeJ"],[13,14,15,16,17,18,19,20],[[70,"group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm/Bip001 R Hand",-3]],21],[104,-5,[0,"229KaggsBCdouwuFihgxLa"],[22,23]],[105,0.3,-6,[0,"301joHMWxHt5+RwUsUNb/k"],[1,0,2.3,0.05]],[106,0.35,1.5,-7,[0,"37ckafHu5ICp/qt0X/begu"],[1,0,1,0]],[102,2,false,-8,[0,"87Ou3Su2BBi7zDmE/VZ31M"],[1,0,1,1]]],[64,"98L6Qz/fpRkKOUAtG2zw7L",null,null,-2,0,[-1]]],[48,"group1",1,[-11,-12,-13,-14,-15],[1,"43VdW9GuJe3KU00e1qrPWu",null,null,null,1,0]],[31,["61w+jJ2RdTMKeJA84fbFSH"]],[62,"Bip001 Pelvis",[-16,-17,-18],[1,"da4pFHR09asb8UBfi3SjdH",null,null,null,1,0],[3,-0.49999999254917427,-0.49999999254917427,-0.49999930709576956,0.5000007078049009],[1,-89.99991974527727,-89.99991974527727,-0.0000017074910602964197]],[4,"Bip001 Spine",4,[-19,-20,-21],[1,"3dHriYAgRawIKAq3bsC/av",null,null,null,1,0],[1,0.06345447897911072,-0.00018557309522293508,8.825598030171022e-8],[3,-0.0000020895975280582397,-7.029299899061134e-7,0.013839598922637322,0.9999042281622775],[1,-0.00023840385348735112,-0.00007725782883960567,1.5859518471693235]],[63,"Bip001",2,[[[28,"Bip001 Footsteps",-22,[1,"3b93I5JdZZY7YrnjfNLlkt",null,null,null,1,0],[1,2.2204459996194763e-18,-4.235164641608193e-24,-0.48366937041282654],[3,-5.855533932713747e-36,8.721625300910364e-33,0.7071063043492204,0.7071072580235531],[1,0,-9.489292531882443e-34,90]],4],4,1],[1,"60una63sJeh6qV108eUTCK",null,null,null,1,0],[1,1.5575574163761985e-9,1.223509669303894,-0.03563276305794716],[3,-0.5000003576277408,-0.49999964237200345,-0.49999964237200345,0.5000003576277408],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90,-89.99991803772996,0]],[93,"Bip001 R Hand Socket",1,[-23],[1,"a087wZnxNM7IaUOpew/38f",null,null,null,1,0],[1,-1.1131373801939857,1.838145354003317,-0.02885021111468119],[3,0.048865442948463636,-0.04720239446017907,0.9958501437579962,-0.060552403516946525],[1,2.540000116945136,2.5400002612904107,2.5400001129065592],[1,174.9057677591496,-174.70201326474557,-7.19319336926635]],[43,0,{},7,[44,"61w+jJ2RdTMKeJA84fbFSH",null,null,-24,[50,"5akXp9vK5NmIChTjhJDobm",1,[[14,"weapon5",["_name"],3],[11,["_lpos"],3,[1,0.085,0.011,0.041]],[11,["_lrot"],3,[3,-4.329780281177466e-17,0.7071067811865476,0.7071067811865475,4.329780281177467e-17]],[11,["_euler"],3,[1,-90,180,0]],[11,["_lscale"],3,[1,0.5,0.5,0.5]]]],12]],[19,"head_I",2,[[18,1,-25,[0,"a95pus5jxZ0aT9Vv9vffte"],[0],[8,true,true],1,1,2]],[1,"24Al7BoDBfwr4dW8cz3qum",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[4,"Bip001 Neck",5,[-26],[1,"29e5rkDpFQU6M34+6mXMqZ",null,null,null,1,0],[1,0.24925068020820618,0.002057993318885565,2.225801765121105e-9],[3,-2.5382543063059532e-14,-3.4013390465250123e-7,0.12263263619889618,0.9924521331221942],[1,0.00000492800718908746,-0.00003988183168096121,14.088127942062796]],[15,"Bip001 Head",10,[[38,"Bip001 HeadNub",-27,[1,"c0DDt+8c9cAZN4HfLr2GlV",null,null,null,1,0],[1,0.14218726754188538,0,-1.3552526853146218e-22]]],[1,"7e0R6njY1ZyIbfI16jkdXN",null,null,null,1,0],[1,0.04924758896231651,1.907348590179936e-8,0],[3,-3.4882480159419137e-13,3.7819707678111146e-7,-0.13635667822804998,0.9906598085631964],[1,0.000006137648761566025,0.00004459159608868198,-15.674154664616246]],[4,"Bip001 L Clavicle",5,[-28],[1,"94n3euuR9WRZQD6k3f5+29",null,null,null,1,0],[1,0.22444087266921997,0.000241467947489582,0.05013936385512352],[3,0.6646332882242292,-0.041312624648330666,0.7451421777055485,-0.036317960200814375],[1,179.23387337832077,-96.57884308222117,-6.259954481230718]],[4,"Bip001 L UpperArm",12,[-29],[1,"3awekmEb9WcZTL/koi9JbS",null,null,null,1,0],[1,0.09830138832330704,-2.38418573772492e-9,1.4210854397564648e-16],[3,0.04255099175736575,-0.0012785928417488632,-0.040795269909396685,0.9982602487597254],[1,4.883685295492153,0.05283206706572578,-4.678090947669645]],[15,"Bip001 L Forearm",13,[[28,"Bip001 L Hand",-30,[1,"0bcOT+gcFe46aSSyJ2AqWQ",null,null,null,1,0],[1,0.13451942801475525,0,0],[3,-0.7068251826029146,1.3165644977296043e-9,-1.3176133253999859e-9,0.7073882676708432],[1,-89.95437407813083,0,-2.1344341156289847e-7]]],[1,"d4UXRs7HxamLMte0Vw46fu",null,null,null,1,0],[1,0.159247487783432,-9.53674295089968e-9,-7.629394360719743e-8],[3,-1.3211275627375078e-17,1.1242273068600845e-17,-0.0615115136775642,0.998106373932706],[1,-1.4427079470210262e-15,1.2018022123098817e-15,-7.053152824002574]],[4,"Bip001 R Clavicle",5,[-31],[1,"8cuTkfJBRZ/I0e52dpeC5c",null,null,null,1,0],[1,0.22444087266921997,0.0002417469077045098,-0.05013935640454292],[3,-0.6646333971699345,0.04131056392481429,0.7451422854079972,-0.036316100720105285],[1,-179.23390833343123,96.57883794429625,-6.259637834225308]],[4,"Bip001 R UpperArm",15,[-32],[1,"6akMWcUxdTrLbRzBMwFoJo",null,null,null,1,0],[1,0.09830138087272644,2.38418573772492e-9,1.4210854397564648e-16],[3,-0.042550999201322014,0.0012785855073846203,-0.04079526617775551,0.9982602486043184],[1,-4.883686184053137,-0.05283292551134381,-4.678090483855789]],[4,"Bip001 R Forearm",16,[-33],[1,"232rQqVTZT/a3NRcvD0KNF",null,null,null,1,0],[1,0.15924744307994843,0,7.629394360719743e-8],[3,1.4171622405368395e-17,4.3406712685104826e-18,-0.0615115136775642,0.998106373932706],[1,1.6640617539843948e-15,6.009011272576598e-16,-7.053152824002574]],[15,"Bip001 R Hand",17,[[28,"WeaponContainer",-34,[1,"a6S68w6Lha8ZBLTVopHbw4",null,null,null,1,0],[1,0.08682487159967422,0.009681015275418758,0.058159179985523224],[3,0.07951347495774536,0.6636559934753525,0.7431398598259328,0.03132855506211496],[1,-96.80771665888834,-175.55522297722828,8.748770928418296]]],[1,"9ckzs3mOZarYaWD5UFCf+Z",null,null,null,1,0],[1,0.13451938331127167,1.776356799695581e-17,-7.629394360719743e-8],[3,0.7068252124052276,2.306085595844923e-9,-2.9625327292760735e-9,0.7073882378922517],[1,89.95437890588063,4.268868636040652e-7,-5.336086190280782e-8]],[4,"Bip001 L Thigh",4,[-35],[1,"40m3LGo5NZEbjaA/6RE3UN",null,null,null,1,0],[1,-1.1444091541079615e-7,1.2516974834397843e-7,0.07466395199298859],[3,0.018307237243421235,0.999761299171899,-0.0005939877685746522,-0.011909530685995871],[1,0.04309417898204713,-178.63579635154264,2.09863395998742]],[4,"Bip001 L Calf",19,[-36],[1,"e09EMcvZlZzIaUBH51t0li",null,null,null,1,0],[1,0.23993217945098877,0,0],[3,-1.9135070445383419e-19,-2.632967114808625e-18,-0.05198767289971633,0.9986477266115776],[1,-3.778728342000386e-17,-3.040914943161604e-16,-5.960035262353657]],[4,"Bip001 L Foot",20,[-37],[1,"70YL49wyRTz78DeHzNucG9",null,null,null,1,0],[1,0.16850009560585022,4.440891999238953e-18,9.53674295089968e-9],[3,0.00002668103463277201,-0.011924974547102866,0.03369276949931899,0.9993610916748956],[1,0.04920839647513726,-1.3689689338390039,3.8613259886719686]],[15,"Bip001 L Toe0",21,[[51,"Bip001 L Toe0Nub",-38,[1,"fdG0QFAdRZ67wbHSb8bcY0",null,null,null,1,0],[1,0.0584682933986187,-2.98023217215615e-10,0],[3,-5.910146639665284e-14,1.776806190378769e-15,1,-6.123234262925839e-17],[1,-1,-0.9999999403953552,-0.9999999403953552],[1,-179.9999999999998,179.99999999999324,-7.0167096047230345e-15]]],[1,"53/PUyh/5fiqkhQjUqDtSK",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,1.5454350301197766e-8,1.5454268588785198e-8,0.7071067513842251,0.7071068109888683],[1,0,0.0000025044845661635244,90]],[4,"Bip001 R Thigh",4,[-39],[1,"1fNDbbfV5Z4JD3zQ9S3rgd",null,null,null,1,0],[1,1.1444091541079615e-7,-8.225440950582197e-8,-0.07466395199298859],[3,0.018307220172854872,0.9997612824196819,0.0005926282604946994,0.01191103084710343],[1,-0.042935196277668404,178.6356214928802,2.09863021316722]],[4,"Bip001 R Calf",23,[-40],[1,"acyZTbi0NVxo022688GDjX",null,null,null,1,0],[1,0.23993214964866638,0,0],[3,1.3034441181491747e-20,2.503826801162521e-19,-0.051987676614938125,0.9986477264181702],[1,2.9994474418916213e-18,2.8886738744973417e-17,-5.9600356886632015]],[4,"Bip001 R Foot",24,[-41],[1,"0aFhksJ+JbwKKADX+yfyLV",null,null,null,1,0],[1,0.16850009560585022,0,9.53674295089968e-9],[3,-0.000026684054124251007,0.011925061146287096,0.033692773185577625,0.9993610905171781],[1,-0.04920908323064725,1.3689788872170112,3.861326402895733]],[15,"Bip001 R Toe0",25,[[38,"Bip001 R Toe0Nub",-42,[1,"94etp5c7xRRZXaUtu8JEQc",null,null,null,1,0],[1,0.0584682859480381,0,1.776356799695581e-17]]],[1,"49fbrLHzhSe70YYdZ7iJ2Z",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,-1.5454308319985075e-8,-1.5454308319985075e-8,0.7071067811865474,0.7071067811865474],[1,0,-0.0000025044778683729144,90]],[80,"Legs_B",2,[[18,1,-43,[0,"a9cZTyWg9Q/6J6+kCRhjuA"],[3],[8,true,true],1,4,5]],[1,"1fUeS1n45Yqbgks5vs75+z",null,null,null,1,0],[1,0,0,0.041211970150470734],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,4.260214805603027,4.260214805603027,4.260214805603027],[1,-90.00000000000003,0,0]],[19,"Body_F",2,[[18,1,-44,[0,"a4To4LKFhcF43e2vGpQH8n"],[6],[8,true,true],1,7,8]],[1,"35CbDC545Q0rm8Z/OFp4LX",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[19,"extra_equip_D",2,[[18,1,-45,[0,"7aEQYWZFFY0bSLVocyVi6C"],[9],[8,true,true],1,10,11]],[1,"b6Nh12CEdWBp8zFZBy97o0",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]]],0,[0,-1,8,0,4,1,0,14,7,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,-2,7,0,-1,9,0,-2,6,0,-3,27,0,-4,28,0,-5,29,0,-1,5,0,-2,19,0,-3,23,0,-1,10,0,-2,12,0,-3,15,0,6,6,0,-1,8,0,4,8,0,0,9,0,-1,11,0,6,11,0,-1,13,0,-1,14,0,6,14,0,-1,16,0,-1,17,0,-1,18,0,6,18,0,-1,20,0,-1,21,0,-1,22,0,6,22,0,-1,24,0,-1,25,0,-1,26,0,6,26,0,0,27,0,0,28,0,0,29,0,5,1,4,6,6,45],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,3,10,-1,3,10,-1,3,10,-1,3,10,13,-1,-2,-3,-4,-5,-6,-7,-8,17,-1,-2],[4,323,324,4,129,130,4,325,326,4,47,48,21,9,10,11,5,12,6,13,14,5,8,3]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["d4dkm8WNRDTKXOq24MFsC5"]}],[2],0,[],[],[]],[[{"name":"shopbtn2","rect":{"x":5,"y":7,"width":226,"height":96},"offset":{"x":0,"y":-2},"originalSize":{"width":236,"height":106},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-113,-48,0,113,-48,0,-113,48,0,113,48,0],"indexes":[0,1,2,2,1,3],"uv":[5,99,231,99,5,3,231,3],"nuv":[0.0211864406779661,0.02830188679245283,0.9788135593220338,0.02830188679245283,0.0211864406779661,0.9339622641509434,0.9788135593220338,0.9339622641509434],"minPos":{"x":-113,"y":-48,"z":0},"maxPos":{"x":113,"y":48,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[327]],[[[22,"oil_tank1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true,"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0,"specularIntensity":0},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[328,2]],[[{"name":"shopbg3","rect":{"x":631,"y":402,"width":220,"height":10},"offset":{"x":0,"y":0},"originalSize":{"width":220,"height":10},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"weaponshopitem"],[96,"weaponshopitem",33554432,[-4,-5,-6,-7,-8],[[3,-2,[0,"9csfKbkvNLmLaKOD+pBlcb"],[5,200,250]],[24,0,-3,[0,"20jJZ3jrxLA4kdKfAg8gI0"],5]],[1,"22qayhxtVN1IptL8hO+PeQ",null,null,null,-1,0],[1,125,0,0]],[17,"bg",33554432,1,[[3,-9,[0,"571ojrftFODacXpgq2JJkX"],[5,200,250]],[24,0,-10,[0,"01i7YMYn9IFL6m//rCETHi"],2],[29,45,120,120,-11,[0,"95oY4zRIFImY4gEi3+66LH"]],[100,150,-12,[0,"eeAuo02uFMJ4BohaNxOERc"]]],[1,"e21DDucP1C5JuNq+dSX2IL",null,null,null,1,0]],[6,"lock",33554432,1,[[3,-13,[0,"1eb+Ff1AZHg4O9OajhThgN"],[5,48,60]],[7,-14,[0,"23q9/q1UJDe7zcIyJbHWtd"],4],[178,36,25,25,-15,[0,"36Nh0+wsBBQKiReFB68FEc"]]],[1,"60GPJ/6BBFlrXWe/juNKyg",null,null,null,1,0],[1,51,-70,0]],[17,"use",33554432,1,[[3,-16,[0,"3fVjOMYZlF5bH0s7VBhmcy"],[5,200,250]],[36,1,0,-17,[0,"f9EevrHGpCfKX30miUmziH"],0]],[1,"d1WmpnRKhJCqINTTuXAYww",null,null,null,1,0]],[17,"weapon",33554432,1,[[3,-18,[0,"c4/dn4rxdFrJGR4eg8sIc2"],[5,200,200]],[7,-19,[0,"51RGRr6ptDe43BsbZLqcbk"],1]],[1,"8eWN/GEeNJ/paECBYkkwak",null,null,null,1,0]],[17,"choose",33554432,1,[[3,-20,[0,"01Qu3tjUpHOaByKkue83JV"],[5,200,250]],[36,1,0,-21,[0,"00D2hgHC9JrKLNuNSfqsXf"],3]],[1,"2ahx8imRRKD5AtOf2N64TK",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,4,0,-2,5,0,-3,2,0,-4,6,0,-5,3,0,0,2,0,0,2,0,0,2,0,0,2,0,0,3,0,0,3,0,0,3,0,0,4,0,0,4,0,0,5,0,0,5,0,0,6,0,0,6,0,5,1,21],[0,0,0,0,0,0],[1,1,1,1,1,1],[329,65,24,330,331,332]],[[[47,"explosion",1,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainTexture",6,0]],11]]],0,0,[0,0],[8,7],[107,15]],[[[26,"soundshopbgm",".mp3",13.824],-1],0,0,[],[],[]],[[[9,"hero4"],[107,"hero4",[-2],[85,"8enAhkha5LVpp79fLbYOch",null,null,[],-1,0],[1,-0.5,0,1.923],[3,0,-0.17364817766693033,0,0.984807753012208],[1,0,-20,0]],[108,"role",1,[-5,-6],[[69,true,false,-4,[0,"2cQ8fDaGZG9IqTHsmGulv5"],[9,10,11,12,13,14,15,16],[[70,"group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm/Bip001 R Hand",-3]],17]],[1,"295Mxv/OlF/6PjIlD5QXwG",null,null,null,1,0],[3,0,0.15643446504023087,0,0.9876883405951378],[1,0,18,0]],[48,"group1",2,[-7,-8,-9,-10],[1,"b4MBDuiz1L3oUB8mU3QS2T",null,null,null,1,0]],[62,"Bip001 Pelvis",[-11,-12,-13],[1,"ecCOvZN4NF46zuCeVH5CRT",null,null,null,1,0],[3,-0.49999999254917427,-0.49999999254917427,-0.49999930709576956,0.5000007078049009],[1,-89.99991974527727,-89.99991974527727,-0.0000017074910602964197]],[4,"Bip001 Spine",4,[-14,-15,-16],[1,"87c22KfbpKVaGohfG/YSmi",null,null,null,1,0],[1,0.06345447897911072,-0.00018557309522293508,8.825598030171022e-8],[3,-0.0000020895975280582397,-7.029299899061134e-7,0.013839598922637322,0.9999042281622775],[1,-0.00023840385348735112,-0.00007725782883960567,1.5859518471693235]],[63,"Bip001",3,[[[28,"Bip001 Footsteps",-17,[1,"7a0ylUMFNHb5EfTsHH4XtD",null,null,null,1,0],[1,2.2204459996194763e-18,-4.235164641608193e-24,-0.48366937041282654],[3,-5.855533932713747e-36,8.721625300910364e-33,0.7071063043492204,0.7071072580235531],[1,0,-9.489292531882443e-34,90]],4],4,1],[1,"50lW7EXuVJrYtR/X8UyXMU",null,null,null,1,0],[1,1.5575574163761985e-9,1.223509669303894,-0.03563276305794716],[3,-0.5000003576277408,-0.49999964237200345,-0.49999964237200345,0.5000003576277408],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90,-89.99991803772996,0]],[19,"Body_A",3,[[18,1,-18,[0,"de99hwW99FIKwbFMIhdQu0"],[0],[8,true,true],2,1,2]],[1,"1dV5GXGllDP70KaU4PiB+v",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[4,"Bip001 Neck",5,[-19],[1,"2aAZuuxnJBAaRjX0HrPHa6",null,null,null,1,0],[1,0.24925068020820618,0.002057993318885565,2.225801765121105e-9],[3,-2.5382543063059532e-14,-3.4013390465250123e-7,0.12263263619889618,0.9924521331221942],[1,0.00000492800718908746,-0.00003988183168096121,14.088127942062796]],[15,"Bip001 Head",8,[[38,"Bip001 HeadNub",-20,[1,"5cZ/ccizdF+Y/91prfMRhW",null,null,null,1,0],[1,0.14218726754188538,0,-1.3552526853146218e-22]]],[1,"0bw42KSgxNWIiPfpw0FFKK",null,null,null,1,0],[1,0.04924758896231651,1.907348590179936e-8,0],[3,-3.4882480159419137e-13,3.7819707678111146e-7,-0.13635667822804998,0.9906598085631964],[1,0.000006137648761566025,0.00004459159608868198,-15.674154664616246]],[4,"Bip001 L Clavicle",5,[-21],[1,"e0RV3jUGlFfqvrPL3nvDRN",null,null,null,1,0],[1,0.22444087266921997,0.000241467947489582,0.05013936385512352],[3,0.6646332882242292,-0.041312624648330666,0.7451421777055485,-0.036317960200814375],[1,179.23387337832077,-96.57884308222117,-6.259954481230718]],[4,"Bip001 L UpperArm",10,[-22],[1,"273g6Z1llKNowcXcvR98Nj",null,null,null,1,0],[1,0.09830138832330704,-2.38418573772492e-9,1.4210854397564648e-16],[3,0.04255099175736575,-0.0012785928417488632,-0.040795269909396685,0.9982602487597254],[1,4.883685295492153,0.05283206706572578,-4.678090947669645]],[15,"Bip001 L Forearm",11,[[28,"Bip001 L Hand",-23,[1,"10RJCoD6xNn59918CqUwUU",null,null,null,1,0],[1,0.13451942801475525,0,0],[3,-0.7068251826029146,1.3165644977296043e-9,-1.3176133253999859e-9,0.7073882676708432],[1,-89.95437407813083,0,-2.1344341156289847e-7]]],[1,"94J/kWab5Dg7ltTpvvSb1A",null,null,null,1,0],[1,0.159247487783432,-9.53674295089968e-9,-7.629394360719743e-8],[3,-1.3211275627375078e-17,1.1242273068600845e-17,-0.0615115136775642,0.998106373932706],[1,-1.4427079470210262e-15,1.2018022123098817e-15,-7.053152824002574]],[4,"Bip001 R Clavicle",5,[-24],[1,"6exWpAr9BPfa5Ux/74KDL5",null,null,null,1,0],[1,0.22444087266921997,0.0002417469077045098,-0.05013935640454292],[3,-0.6646333971699345,0.04131056392481429,0.7451422854079972,-0.036316100720105285],[1,-179.23390833343123,96.57883794429625,-6.259637834225308]],[4,"Bip001 R UpperArm",13,[-25],[1,"37vaKl3+5MaJcsdQJ7FZEK",null,null,null,1,0],[1,0.09830138087272644,2.38418573772492e-9,1.4210854397564648e-16],[3,-0.042550999201322014,0.0012785855073846203,-0.04079526617775551,0.9982602486043184],[1,-4.883686184053137,-0.05283292551134381,-4.678090483855789]],[4,"Bip001 R Forearm",14,[-26],[1,"7cjQ9fRkVHu6uYRN+ZPvJM",null,null,null,1,0],[1,0.15924744307994843,0,7.629394360719743e-8],[3,1.4171622405368395e-17,4.3406712685104826e-18,-0.0615115136775642,0.998106373932706],[1,1.6640617539843948e-15,6.009011272576598e-16,-7.053152824002574]],[15,"Bip001 R Hand",15,[[28,"WeaponContainer",-27,[1,"c71GSp+INK54U5zi+iwqtg",null,null,null,1,0],[1,0.08682487159967422,0.009681015275418758,0.058159179985523224],[3,0.07951347495774536,0.6636559934753525,0.7431398598259328,0.03132855506211496],[1,-96.80771665888834,-175.55522297722828,8.748770928418296]]],[1,"e5Bpru4RVMTqboEhYHZ6Hj",null,null,null,1,0],[1,0.13451938331127167,1.776356799695581e-17,-7.629394360719743e-8],[3,0.7068252124052276,2.306085595844923e-9,-2.9625327292760735e-9,0.7073882378922517],[1,89.95437890588063,4.268868636040652e-7,-5.336086190280782e-8]],[4,"Bip001 L Thigh",4,[-28],[1,"dfsJhALH1PPrH7CI8x34vP",null,null,null,1,0],[1,-1.1444091541079615e-7,1.2516974834397843e-7,0.07466395199298859],[3,0.018307237243421235,0.999761299171899,-0.0005939877685746522,-0.011909530685995871],[1,0.04309417898204713,-178.63579635154264,2.09863395998742]],[4,"Bip001 L Calf",17,[-29],[1,"8aBk7Sa8VNaJYezG8+fSO5",null,null,null,1,0],[1,0.23993217945098877,0,0],[3,-1.9135070445383419e-19,-2.632967114808625e-18,-0.05198767289971633,0.9986477266115776],[1,-3.778728342000386e-17,-3.040914943161604e-16,-5.960035262353657]],[4,"Bip001 L Foot",18,[-30],[1,"7djvpbh/VPXqK6yce1bauJ",null,null,null,1,0],[1,0.16850009560585022,4.440891999238953e-18,9.53674295089968e-9],[3,0.00002668103463277201,-0.011924974547102866,0.03369276949931899,0.9993610916748956],[1,0.04920839647513726,-1.3689689338390039,3.8613259886719686]],[15,"Bip001 L Toe0",19,[[51,"Bip001 L Toe0Nub",-31,[1,"8d+KhMC49Ct67syp4N+kkL",null,null,null,1,0],[1,0.0584682933986187,-2.98023217215615e-10,0],[3,-5.910146639665284e-14,1.776806190378769e-15,1,-6.123234262925839e-17],[1,-1,-0.9999999403953552,-0.9999999403953552],[1,-179.9999999999998,179.99999999999324,-7.0167096047230345e-15]]],[1,"10pLzH45lEaaCVjV0Kr5C/",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,1.5454350301197766e-8,1.5454268588785198e-8,0.7071067513842251,0.7071068109888683],[1,0,0.0000025044845661635244,90]],[4,"Bip001 R Thigh",4,[-32],[1,"7dK2QmJ5ZPtJQ9Pjx2gW+v",null,null,null,1,0],[1,1.1444091541079615e-7,-8.225440950582197e-8,-0.07466395199298859],[3,0.018307220172854872,0.9997612824196819,0.0005926282604946994,0.01191103084710343],[1,-0.042935196277668404,178.6356214928802,2.09863021316722]],[4,"Bip001 R Calf",21,[-33],[1,"dbTuY0h19KdIDYQuXojMZj",null,null,null,1,0],[1,0.23993214964866638,0,0],[3,1.3034441181491747e-20,2.503826801162521e-19,-0.051987676614938125,0.9986477264181702],[1,2.9994474418916213e-18,2.8886738744973417e-17,-5.9600356886632015]],[4,"Bip001 R Foot",22,[-34],[1,"04ygt/fAhOFprIhutTZ4jV",null,null,null,1,0],[1,0.16850009560585022,0,9.53674295089968e-9],[3,-0.000026684054124251007,0.011925061146287096,0.033692773185577625,0.9993610905171781],[1,-0.04920908323064725,1.3689788872170112,3.861326402895733]],[15,"Bip001 R Toe0",23,[[38,"Bip001 R Toe0Nub",-35,[1,"faQk26BW5OEoGHmesKTFV5",null,null,null,1,0],[1,0.0584682859480381,0,1.776356799695581e-17]]],[1,"b0RzWbsJVFbb5pEuowfIx6",null,null,null,1,0],[1,0.07134721428155899,0.10741207003593445,1.776356799695581e-17],[3,-1.5454308319985075e-8,-1.5454308319985075e-8,0.7071067811865474,0.7071067811865474],[1,0,-0.0000025044778683729144,90]],[80,"Legs_B",3,[[18,1,-36,[0,"acum7AuCtED5g77Ue8Wg6J"],[3],[8,true,true],2,4,5]],[1,"2d9Q5hrAZEbr8fATRTi27t",null,null,null,1,0],[1,0,0,0.041211970150470734],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,4.260214805603027,4.260214805603027,4.260214805603027],[1,-90.00000000000003,0,0]],[19,"head_C",3,[[18,1,-37,[0,"637EdU4T9KlazUFHy73PCz"],[6],[8,true,true],2,7,8]],[1,"e0ShXLsjdCmLiaIJ7Cn/gr",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,2.5399999618530273,2.5399999618530273,2.5399999618530273],[1,-90.00000000000003,0,0]],[51,"Bip001 R Hand Socket",2,[1,"87Xgu06s5OD6ciiCb+ks/Y",null,null,null,1,0],[1,-1.1131373801939857,1.838145354003317,-0.02885021111468119],[3,0.048865442948463636,-0.04720239446017907,0.9958501437579962,-0.060552403516946525],[1,2.540000116945136,2.5400002612904107,2.5400001129065592],[1,174.9057677591496,-174.70201326474557,-7.19319336926635]]],0,[0,4,1,0,-1,2,0,14,27,0,0,2,0,-1,3,0,-2,27,0,-1,7,0,-2,6,0,-3,25,0,-4,26,0,-1,5,0,-2,17,0,-3,21,0,-1,8,0,-2,10,0,-3,13,0,6,6,0,0,7,0,-1,9,0,6,9,0,-1,11,0,-1,12,0,6,12,0,-1,14,0,-1,15,0,-1,16,0,6,16,0,-1,18,0,-1,19,0,-1,20,0,6,20,0,-1,22,0,-1,23,0,-1,24,0,6,24,0,0,25,0,0,26,0,5,1,4,6,6,37],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,3,10,-1,3,10,-1,3,10,-1,-2,-3,-4,-5,-6,-7,-8,17],[3,333,334,3,129,130,3,335,336,9,10,11,5,12,6,13,14,6]],[[{"name":"weaponbg4","rect":{"x":614,"y":1549,"width":200,"height":200},"offset":{"x":0,"y":0},"originalSize":{"width":200,"height":200},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["dcD/kptcVIya6+rO5lIsON"]}],[2],0,[],[],[]],[[{"name":"weapon3","rect":{"x":581,"y":1811,"width":150,"height":50},"offset":{"x":0,"y":0},"originalSize":{"width":150,"height":50},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"moregame2","rect":{"x":803,"y":1893,"width":120,"height":140},"offset":{"x":0,"y":0},"originalSize":{"width":120,"height":140},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"storehouse1"],[34,"storehouse1",[-4],[[127,-2,[0,"14y+H+rv9G4Z9uYsK4Kxkk"],2],[76,2,-3,[0,"20wo4nP45KjLEOOm9Rg9VT"]]],[1,"1cDaF4DeJcL58hIcx6NuL0",null,null,null,-1,0]],[27,"storehouse1",1,[[21,1,-5,[0,"ebqlYcWONfroB9fk0kggwJ"],[0],[8,true,true],1]],[1,"89zBzEUfBUKaVy4jkxTdVZ",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,2,0,0,2,0,5,1,5],[0,0,0],[-1,3,3],[337,131,131]],[[[26,"soundwin2",".mp3",5.067755],-1],0,0,[],[],[]],[[{"name":"audio12","rect":{"x":605,"y":820,"width":38,"height":32},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[26,"soundpress",".mp3",0.444082],-1],0,0,[],[],[]],[[{"name":"weaponbg3","rect":{"x":326,"y":1633,"width":200,"height":200},"offset":{"x":0,"y":0},"originalSize":{"width":200,"height":200},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["e2IM4gYSdD+rMWF7EM4v8L"]}],[2],0,[],[],[]],[[[26,"soundshoot6",".mp3",1.872],-1],0,0,[],[],[]],[[[33,"Skin-25",2514283661,["group1/Bip001/Bip001 Pelvis/Bip001 Spine"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.029296670109033585,6.141211628118981e-8,1]],8]]],0,0,[],[],[]],[[[10,".bin",1704365759,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":3240,"length":864,"count":216,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":3240,"count":45,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.08459993451833725,-0.1435927152633667,0.7049300670623779],"maxPosition",8,[1,0.08170164376497269,0.09105123579502106,0.8756101131439209]]],-1],0,0,[],[],[]],[[[10,".bin",1209839532,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":10800,"length":1584,"count":396,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":10800,"count":150,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1]]},"minPosition",8,[1,-0.15527093410491943,-0.1433020979166031,0.5099337100982666],"maxPosition",8,[1,0.14719457924365997,0.1401096135377884,0.6876615881919861]]],-1],0,0,[],[],[]],[[[33,"Skin-15",1028990140,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh","group1/Bip001/Bip001 Pelvis","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh/Bip001 R Calf","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh/Bip001 R Calf/Bip001 R Foot","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh/Bip001 R Calf/Bip001 R Foot/Bip001 R Toe0","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh/Bip001 L Calf","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh/Bip001 L Calf/Bip001 L Foot/Bip001 L Toe0","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh/Bip001 L Calf/Bip001 L Foot"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.02929666079580784,6.14120168052068e-8,1],[7,-0.023793159052729607,0.0016238460084423423,-0.99971604347229,0,-0.03661974146962166,-0.9993299841880798,-0.0007516688201576471,0,-0.9990454912185669,0.03659149259328842,0.023836681619286537,0,0.4799744486808777,-0.003485690103843808,-0.08611422032117844,1],[7,0.0000013867993402527645,0.0000027577034416026436,1.0000005960464478,0,3.824440330396639e-12,-1.0000005960464478,0.0000027577034416026436,0,1.0000005960464478,6.123307054819744e-17,-0.0000013867993402527645,0,-0.481696754693985,0.014028649777173996,6.287169753704802e-7,1],[7,-0.02383316494524479,-0.0008556008106097579,-0.99971604347229,0,0.06734324246644974,-0.9977297782897949,-0.0007515581673942506,0,-0.997445285320282,-0.06734200567007065,0.023836679756641388,0,0.2391066700220108,0.021457869559526443,-0.08611422032117844,1],[7,4.3711366970455856e-8,0.000001370906602460309,-1.0000005960464478,0,5.98629354637073e-14,-1.0000005960464478,-0.000001370906602460309,0,-1.0000005960464478,6.12323624815931e-17,-4.3711366970455856e-8,0,0.07392387837171555,0.016589680686593056,-0.08438856899738312,1],[7,0.0000013716025932808407,4.3711366970455856e-8,-1.0000005960464478,0,-1.0000005960464478,6.001582152255491e-14,-0.0000013716025932808407,0,6.12323757164829e-17,1.0000005960464478,4.3711366970455856e-8,0,-0.09082239866256714,-0.0025766498874872923,-0.08438857644796371,1],[7,0.023793082684278488,-0.0016210799803957343,-0.99971604347229,0,-0.036619674414396286,-0.9993299841880798,0.0007489082054235041,0,-0.9990454912185669,0.03659149259328842,-0.02383650280535221,0,0.4799744486808777,-0.0034857001155614853,0.08611416816711426,1],[7,0.023832805454730988,0.0008582777227275074,-0.99971604347229,0,0.06734330207109451,-0.9977297782897949,0.000748863909393549,0,-0.997445285320282,-0.06734200567007065,-0.02383650280535221,0,0.239106684923172,0.021457869559526443,0.08611418306827545,1],[7,0.0000013747953744314145,-4.3711366970455856e-8,-1.0000005960464478,0,-1.0000005960464478,-6.00329180355623e-14,-0.0000013747953744314145,0,6.12323757164829e-17,1.0000005960464478,-4.3711366970455856e-8,0,-0.09082239866256714,-0.0025766498874872923,0.08438853919506073,1],[7,4.3711366970455856e-8,0.000001370906602460309,-1.0000005960464478,0,5.98629354637073e-14,-1.0000005960464478,-0.000001370906602460309,0,-1.0000005960464478,6.12323624815931e-17,-4.3711366970455856e-8,0,0.07392387092113495,0.016589680686593056,0.08438853919506073,1]],8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[33,"Skin-16",1500946782,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh","group1/Bip001/Bip001 Pelvis","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 Neck/Bip001 Head","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm/Bip001 R Hand","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm/Bip001 L Forearm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm/Bip001 L Forearm/Bip001 L Hand"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.02929666079580784,6.14120168052068e-8,1],[7,-0.023793159052729607,0.0016238460084423423,-0.99971604347229,0,-0.03661974146962166,-0.9993299841880798,-0.0007516688201576471,0,-0.9990454912185669,0.03659149259328842,0.023836681619286537,0,0.4799744486808777,-0.003485690103843808,-0.08611422032117844,1],[7,0.0000013867993402527645,0.0000027577034416026436,1.0000005960464478,0,3.824440330396639e-12,-1.0000005960464478,0.0000027577034416026436,0,1.0000005960464478,6.123307054819744e-17,-0.0000013867993402527645,0,-0.481696754693985,0.014028649777173996,6.287169753704802e-7,1],[7,-0.9930561780929565,0.019132856279611588,0.11607241630554199,0,0.030750488862395287,0.9945979714393616,0.09914055466651917,0,-0.11354848742485046,0.10202138125896454,-0.9882809519767761,0,-0.06062823906540871,-0.09326086193323135,0.7649393081665039,1],[7,-0.9874935150146484,0.10983975976705551,0.11311177909374237,0,0.11214597523212433,0.9935895800590515,0.014210515655577183,0,-0.1108260452747345,0.026717782020568848,-0.993480384349823,0,0.034898027777671814,-0.02276325225830078,0.7700437903404236,1],[7,0.000001343088456451369,-0.0000014026921917320578,1.0000005960464478,0,-1.8838773856860724e-12,-1.0000005960464478,-0.0000014026921917320578,0,1.0000005960464478,6.12323823339278e-17,-0.000001343088456451369,0,-0.8416656255722046,-0.008046329952776432,0.0000010917500503637712,1],[7,-0.98788982629776,-0.10294950753450394,0.1160724014043808,0,-0.09160910546779633,0.9908463954925537,0.09914062917232513,0,-0.12521634995937347,0.0873066857457161,-0.9882809519767761,0,-0.20676039159297943,-0.11955368518829346,0.7649392485618591,1],[7,0.9874910712242126,-0.10984230041503906,0.11311177909374237,0,0.1121482253074646,0.9935895800590515,-0.01421019434928894,0,-0.11082576215267181,0.02671774849295616,0.993480384349823,0,0.034897781908512115,-0.022763218730688095,-0.7700437903404236,1],[7,-0.98788982629776,0.11599037796258926,0.10304170846939087,0,-0.09160885959863663,0.09992936998605728,-0.9907676577568054,0,-0.12521645426750183,-0.9882098436355591,-0.08809357136487961,0,-0.34127968549728394,0.7648438811302185,0.120162732899189,1],[7,0.023793082684278488,-0.0016210799803957343,-0.99971604347229,0,-0.036619674414396286,-0.9993299841880798,0.0007489082054235041,0,-0.9990454912185669,0.03659149259328842,-0.02383650280535221,0,0.4799744486808777,-0.0034857001155614853,0.08611416816711426,1],[7,0.9930561780929565,-0.019135573878884315,0.11607266217470169,0,0.030753202736377716,0.9945979714393616,-0.0991402342915535,0,-0.11354847997426987,0.10202138125896454,0.9882810115814209,0,-0.06062827631831169,-0.09326085448265076,-0.7649393081665039,1],[7,0.9878923892974854,0.1029467061161995,0.11607268452644348,0,-0.09160631895065308,0.9908488988876343,-0.09914006292819977,0,-0.12521658837795258,0.0873066633939743,0.9882810115814209,0,-0.2067602425813675,-0.11955367773771286,-0.7649393081665039,1],[7,0.9878923296928406,-0.11599063873291016,0.10303916037082672,0,-0.09160655736923218,0.0999290719628334,0.9907676577568054,0,-0.12521673738956451,-0.9882098436355591,0.08809354156255722,0,-0.341279536485672,0.7648438811302185,-0.1201627254486084,1]],8,8,8,8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[33,"Skin-24",2472004557,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh/Bip001 R Calf","group1/Bip001/Bip001 Pelvis","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm/Bip001 L Forearm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 Neck/Bip001 Head","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm/Bip001 R Hand","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh/Bip001 L Calf","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm/Bip001 L Forearm/Bip001 L Hand"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.029296670109033585,6.141211628118981e-8,1],[7,-0.9930561780929565,0.019132856279611588,0.11607241630554199,0,0.030750488862395287,0.9945979714393616,0.09914055466651917,0,-0.11354848742485046,0.10202138125896454,-0.9882809519767761,0,-0.06062823906540871,-0.09326086193323135,0.7649393081665039,1],[7,-0.023793159052729607,0.0016238460084423423,-0.99971604347229,0,-0.03661974146962166,-0.9993299841880798,-0.0007516688201576471,0,-0.9990454912185669,0.03659149259328842,0.023836681619286537,0,0.4799744486808777,-0.003485690103843808,-0.08611422032117844,1],[7,-0.98788982629776,-0.10294950753450394,0.1160724014043808,0,-0.09160910546779633,0.9908463954925537,0.09914062917232513,0,-0.12521634995937347,0.0873066857457161,-0.9882809519767761,0,-0.20676039159297943,-0.11955367028713226,0.7649392485618591,1],[7,-0.9874935150146484,0.10983975976705551,0.11311177909374237,0,0.11214597523212433,0.9935895800590515,0.014210515655577183,0,-0.1108260452747345,0.0267177801579237,-0.993480384349823,0,0.034898027777671814,-0.022763261571526527,0.7700437903404236,1],[7,-0.02383316494524479,-0.0008556008106097579,-0.99971604347229,0,0.06734324246644974,-0.9977297782897949,-0.0007515581673942506,0,-0.997445285320282,-0.06734200567007065,0.023836679756641388,0,0.2391066700220108,0.021457869559526443,-0.08611422032117844,1],[7,0.0000013867993402527645,0.0000027577034416026436,1.0000005960464478,0,3.824440330396639e-12,-1.0000005960464478,0.0000027577034416026436,0,1.0000005960464478,6.123307054819744e-17,-0.0000013867993402527645,0,-0.481696754693985,0.014028649777173996,6.287169753704802e-7,1],[7,0.9930561780929565,-0.019135573878884315,0.11607266217470169,0,0.030753202736377716,0.9945979714393616,-0.0991402342915535,0,-0.11354847997426987,0.10202138125896454,0.9882810115814209,0,-0.06062827631831169,-0.09326085448265076,-0.7649393081665039,1],[7,0.9878923892974854,0.1029467061161995,0.11607268452644348,0,-0.09160631895065308,0.9908488988876343,-0.09914006292819977,0,-0.12521658837795258,0.0873066633939743,0.9882810115814209,0,-0.2067602425813675,-0.11955367028713226,-0.7649393081665039,1],[7,0.9874910712242126,-0.10984230041503906,0.11311177164316177,0,0.1121482253074646,0.9935895800590515,-0.01421019434928894,0,-0.11082576215267181,0.02671774849295616,0.993480384349823,0,0.03489777073264122,-0.022763237357139587,-0.7700437903404236,1],[7,0.000001343088456451369,-0.0000014026921917320578,1.0000005960464478,0,-1.8838773856860724e-12,-1.0000005960464478,-0.0000014026921917320578,0,1.0000005960464478,6.12323823339278e-17,-0.000001343088456451369,0,-0.8416656255722046,-0.008046340197324753,0.0000010917500503637712,1],[7,0.023793082684278488,-0.0016210799803957343,-0.99971604347229,0,-0.036619674414396286,-0.9993299841880798,0.0007489082054235041,0,-0.9990454912185669,0.03659149259328842,-0.02383650280535221,0,0.4799744486808777,-0.0034857001155614853,0.08611416816711426,1],[7,-0.98788982629776,0.11599037796258926,0.10304170846939087,0,-0.09160885959863663,0.09992936998605728,-0.9907676577568054,0,-0.12521645426750183,-0.9882098436355591,-0.08809357136487961,0,-0.34127968549728394,0.7648438811302185,0.120162732899189,1],[7,0.023832805454730988,0.0008582777227275074,-0.99971604347229,0,0.06734330207109451,-0.9977297782897949,0.000748863909393549,0,-0.997445285320282,-0.06734200567007065,-0.02383650280535221,0,0.239106684923172,0.021457869559526443,0.08611418306827545,1],[7,0.9878923296928406,-0.11599063873291016,0.10303916037082672,0,-0.09160655736923218,0.0999290719628334,0.9907676577568054,0,-0.12521673738956451,-0.9882098436355591,0.08809354156255722,0,-0.341279536485672,0.7648438811302185,-0.1201627254486084,1]],8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[33,"Skin-14",459677159,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle","group1/Bip001/Bip001 Pelvis","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 Neck/Bip001 Head","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm/Bip001 L Forearm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm/Bip001 R Hand","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm/Bip001 L Forearm/Bip001 L Hand"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.029296670109033585,6.141211628118981e-8,1],[7,-0.9930561780929565,0.019132856279611588,0.11607241630554199,0,0.030750488862395287,0.9945979714393616,0.09914055466651917,0,-0.11354848742485046,0.10202138125896454,-0.9882809519767761,0,-0.06062823906540871,-0.09326086193323135,0.7649393081665039,1],[7,-0.98788982629776,-0.10294950753450394,0.1160724014043808,0,-0.09160910546779633,0.9908463954925537,0.09914062917232513,0,-0.12521634995937347,0.0873066857457161,-0.9882809519767761,0,-0.20676039159297943,-0.11955367028713226,0.7649392485618591,1],[7,-0.9874935150146484,0.10983975976705551,0.11311177909374237,0,0.11214597523212433,0.9935895800590515,0.014210515655577183,0,-0.1108260452747345,0.0267177801579237,-0.993480384349823,0,0.034898027777671814,-0.022763261571526527,0.7700437903404236,1],[7,0.0000013867993402527645,0.0000027577034416026436,1.0000005960464478,0,3.824440330396639e-12,-1.0000005960464478,0.0000027577034416026436,0,1.0000005960464478,6.123307054819744e-17,-0.0000013867993402527645,0,-0.481696754693985,0.014028649777173996,6.287169753704802e-7,1],[7,0.9874910712242126,-0.10984230041503906,0.11311177164316177,0,0.1121482253074646,0.9935895800590515,-0.01421019434928894,0,-0.11082576215267181,0.02671774849295616,0.993480384349823,0,0.03489777073264122,-0.022763237357139587,-0.7700437903404236,1],[7,0.000001343088456451369,-0.0000014026921917320578,1.0000005960464478,0,-1.8838773856860724e-12,-1.0000005960464478,-0.0000014026921917320578,0,1.0000005960464478,6.12323823339278e-17,-0.000001343088456451369,0,-0.8416656255722046,-0.008046340197324753,0.0000010917500503637712,1],[7,0.9930561780929565,-0.019135573878884315,0.11607266217470169,0,0.030753202736377716,0.9945979714393616,-0.0991402342915535,0,-0.11354847997426987,0.10202138125896454,0.9882810115814209,0,-0.06062827631831169,-0.09326085448265076,-0.7649393081665039,1],[7,0.9878923892974854,0.1029467061161995,0.11607268452644348,0,-0.09160631895065308,0.9908488988876343,-0.09914006292819977,0,-0.12521658837795258,0.0873066633939743,0.9882810115814209,0,-0.2067602425813675,-0.11955367028713226,-0.7649393081665039,1],[7,-0.98788982629776,0.11599037796258926,0.10304170846939087,0,-0.09160885959863663,0.09992936998605728,-0.9907676577568054,0,-0.12521645426750183,-0.9882098436355591,-0.08809357136487961,0,-0.34127968549728394,0.7648438811302185,0.120162732899189,1],[7,0.9878923296928406,-0.11599063873291016,0.10303916037082672,0,-0.09160655736923218,0.0999290719628334,0.9907676577568054,0,-0.12521673738956451,-0.9882098436355591,0.08809354156255722,0,-0.341279536485672,0.7648438811302185,-0.1201627254486084,1]],8,8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[33,"Skin-4",332897744,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 Neck/Bip001 Head"],[[[7,4.4399865117839e-8,-0.0000014033988691153354,0.9999991059303284,0,-0.027676602825522423,-0.9996169805526733,-0.000001197763481286529,0,0.9996169805526733,-0.027676602825522423,-7.111911770607549e-8,0,-0.5445489883422852,0.029296670109033585,5.543719083789256e-8,1],[7,0.0000015716937014076393,-0.000001402692532792571,0.9999991059303284,0,-1.88388063829259e-12,-1.0000005960464478,-0.0000011986687695753062,0,1.0000005960464478,6.1232369099038e-17,-0.000001343088456451369,0,-0.8416656255722046,-0.008046340197324753,0.0000010933916883004713,1]],8,8]]],0,0,[],[],[]],[[[33,"Skin-12",1085022182,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 Neck/Bip001 Head"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.029296670109033585,6.141211628118981e-8,1],[7,0.000001343088456451369,-0.0000014026921917320578,1.0000005960464478,0,-1.8838773856860724e-12,-1.0000005960464478,-0.0000014026921917320578,0,1.0000005960464478,6.12323823339278e-17,-0.000001343088456451369,0,-0.8416656255722046,-0.008046340197324753,0.0000010917500503637712,1]],8,8]]],0,0,[],[],[]],[[[10,".bin",1546315,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":24840,"length":5040,"count":1260,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":24840,"count":345,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1,2,3,4,5,6,7,8,9,10]]},"minPosition",8,[1,-0.5420324802398682,-0.10360804200172424,0.49680086970329285],"maxPosition",8,[1,0.5420324802398682,0.12477114051580429,0.8691986203193665]]],-1],0,0,[],[],[]],[[[33,"Skin-8",217248287,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 Neck/Bip001 Head"],[[[7,0.027676602825522423,0.9996169805526733,0.0000015645518942619674,0,0.9996169805526733,-0.027676602825522423,-1.2047507880197372e-7,0,-7.712741734167139e-8,0.00000156728617639601,-1.0000005960464478,0,0.31585893034935,0.05278706178069115,6.172879807309073e-8,1],[7,2.1027559034270116e-12,1.0000005960464478,0.000001565613047205261,0,1.0000005960464478,6.843516638793679e-14,-0.0000013867999086869531,0,-0.0000013867999086869531,0.000001565613047205261,-1.0000005960464478,0,0.017762916162610054,0.03924823924899101,3.801699843819506e-9,1]],8,8]]],0,0,[],[],[]],[[[10,".bin",1517481283,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":8568,"length":1416,"count":354,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":8568,"count":119,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1]]},"minPosition",8,[1,-0.14284442365169525,-0.14824701845645905,0.49769648909568787],"maxPosition",8,[1,0.16895818710327148,0.16248294711112976,0.6593225002288818]]],-1],0,0,[],[],[]],[[[33,"Skin-0",1085022182,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 Neck/Bip001 Head"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.029296670109033585,6.141211628118981e-8,1],[7,0.000001343088456451369,-0.0000014026921917320578,1.0000005960464478,0,-1.8838773856860724e-12,-1.0000005960464478,-0.0000014026921917320578,0,1.0000005960464478,6.12323823339278e-17,-0.000001343088456451369,0,-0.8416656255722046,-0.008046340197324753,0.0000010917500503637712,1]],8,8]]],0,0,[],[],[]],[[[10,".bin",1012412886,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":8496,"length":1392,"count":348,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":8496,"count":118,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1]]},"minPosition",8,[1,-0.1490049809217453,-0.14032091200351715,0.5018290281295776],"maxPosition",8,[1,0.17277792096138,0.1596677452325821,0.6587703227996826]]],-1],0,0,[],[],[]],[[[10,".bin",1555801096,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":4968,"length":1368,"count":342,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":4968,"count":69,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1]]},"minPosition",8,[1,-0.06372028589248657,-0.10780427604913712,0.78865647315979],"maxPosition",8,[1,0.06372028589248657,0.05958384647965431,1.0018672943115234]]],-1],0,0,[],[],[]],[[[10,".bin",2122786076,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":15984,"length":3336,"count":834,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":15984,"count":222,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1,2,3,4,5,6,7,8,9]]},"minPosition",8,[1,-0.15325553715229034,-0.17288273572921753,0.000041732786485226825],"maxPosition",8,[1,0.15325553715229034,0.10326651483774185,0.5775505304336548]]],-1],0,0,[],[],[]],[[[10,".bin",2317096090,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":15048,"length":3264,"count":816,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":15048,"count":209,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1,2,3,4,5,6,7,8,9,10]]},"minPosition",8,[1,-0.5420324802398682,-0.09460858255624771,0.5043463706970215],"maxPosition",8,[1,0.5420324802398682,0.10806537419557571,0.8427055478096008]]],-1],0,0,[],[],[]],[[[33,"Skin-26",2943778424,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.029296670109033585,6.141211628118981e-8,1],[7,0.0000013867993402527645,0.0000027577034416026436,1.0000005960464478,0,3.824440330396639e-12,-1.0000005960464478,0.0000027577034416026436,0,1.0000005960464478,6.123307054819744e-17,-0.0000013867993402527645,0,-0.481696754693985,0.014028649777173996,6.287169753704802e-7,1]],8,8]]],0,0,[],[],[]],[[[33,"Skin-21",1912087271,["group1/Bip001/Bip001 Pelvis/Bip001 R Thigh/Bip001 R Calf/Bip001 R Foot/Bip001 R Toe0","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh/Bip001 R Calf/Bip001 R Foot","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh/Bip001 R Calf","group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh/Bip001 L Calf","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh/Bip001 L Calf/Bip001 L Foot/Bip001 L Toe0","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh/Bip001 L Calf/Bip001 L Foot"],[[[7,0.0000023005204639048316,7.331489371154021e-8,-1.677250862121582,0,-1.677250862121582,1.0066153775323619e-13,-0.0000023005204639048316,0,1.0270199708331017e-16,1.677250862121582,7.331489371154021e-8,0,-0.07459720969200134,-0.0025766498874872923,-0.08438855409622192,1],[7,-0.039907075464725494,0.0027235958259552717,-1.6767737865447998,0,-0.06142045930027962,-1.67612624168396,-0.0012607364915311337,0,-1.6756490468978882,0.06137308478355408,0.039980072528123856,0,0.4805685877799988,0.012728624045848846,-0.08610202372074127,1],[7,7.331489371154021e-8,0.000002299353127455106,-1.677250862121582,0,1.0040511038691621e-13,-1.677250862121582,-0.000002299353127455106,0,-1.677250862121582,1.0270197723097547e-16,-7.331489371154021e-8,0,0.07392387837171555,0.0328148752450943,-0.08438854664564133,1],[7,-0.03997417539358139,-0.0014350564451888204,-1.6767737865447998,0,0.11295145004987717,-1.6734422445297241,-0.0012605509255081415,0,-1.6729650497436523,-0.11294937878847122,0.039980072528123856,0,0.23801401257514954,0.03764621913433075,-0.08610202372074127,1],[7,6.363794824437718e-8,-0.0000023535471882496495,1.677250862121582,0,-0.04642058163881302,-1.676607608795166,-0.000002350885552004911,0,1.676607608795166,-0.04642058163881302,-1.2875182164862053e-7,0,-0.5440999269485474,0.04551564157009125,8.415383945248323e-8,1],[7,0.0000023260092802956933,0.000004625358087650966,1.677250862121582,0,6.41454294195154e-12,-1.677250862121582,0.000004625358087650966,0,1.677250862121582,1.0270316837105754e-16,-0.0000023260092802956933,0,-0.481696754693985,0.03025384433567524,5.83972735057614e-7,1],[7,0.03990694880485535,-0.0027189564425498247,-1.6767737865447998,0,-0.06142034754157066,-1.67612624168396,0.001256106304936111,0,-1.6756490468978882,0.06137308478355408,-0.03997977450489998,0,0.48056861758232117,0.012728613801300526,0.08610201627016068,1],[7,0.03997357189655304,0.0014395463513210416,-1.6767737865447998,0,0.11295155435800552,-1.6734422445297241,0.0012560320319607854,0,-1.672965168952942,-0.11294937878847122,-0.03997977450489998,0,0.23801402747631073,0.03764621913433075,0.08610203117132187,1],[7,0.000002305875341335195,-7.331489371154021e-8,-1.677250862121582,0,-1.677250862121582,-1.0069021490069843e-13,-0.000002305875341335195,0,1.0270199708331017e-16,1.677250862121582,-7.331489371154021e-8,0,-0.07459720969200134,-0.0025766498874872923,0.08438856154680252,1],[7,7.331489371154021e-8,0.000002299353127455106,-1.677250862121582,0,1.0040511038691621e-13,-1.677250862121582,-0.000002299353127455106,0,-1.677250862121582,1.0270197723097547e-16,-7.331489371154021e-8,0,0.07392387092113495,0.0328148752450943,0.08438856154680252,1]],8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[10,".bin",545360891,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":6840,"length":1632,"count":408,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":6840,"count":95,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1]]},"minPosition",8,[1,-0.06522172689437866,-0.10780427604913712,0.78865647315979],"maxPosition",8,[1,0.06522172689437866,0.06604102998971939,1.0153515338897705]]],-1],0,0,[],[],[]],[[[33,"Skin-19",459677159,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle","group1/Bip001/Bip001 Pelvis","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 Neck/Bip001 Head","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm/Bip001 L Forearm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm/Bip001 R Hand","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm/Bip001 L Forearm/Bip001 L Hand"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.029296670109033585,6.141211628118981e-8,1],[7,-0.9930561780929565,0.019132856279611588,0.11607241630554199,0,0.030750488862395287,0.9945979714393616,0.09914055466651917,0,-0.11354848742485046,0.10202138125896454,-0.9882809519767761,0,-0.06062823906540871,-0.09326086193323135,0.7649393081665039,1],[7,-0.98788982629776,-0.10294950753450394,0.1160724014043808,0,-0.09160910546779633,0.9908463954925537,0.09914062917232513,0,-0.12521634995937347,0.0873066857457161,-0.9882809519767761,0,-0.20676039159297943,-0.11955367028713226,0.7649392485618591,1],[7,-0.9874935150146484,0.10983975976705551,0.11311177909374237,0,0.11214597523212433,0.9935895800590515,0.014210515655577183,0,-0.1108260452747345,0.0267177801579237,-0.993480384349823,0,0.034898027777671814,-0.022763261571526527,0.7700437903404236,1],[7,0.0000013867993402527645,0.0000027577034416026436,1.0000005960464478,0,3.824440330396639e-12,-1.0000005960464478,0.0000027577034416026436,0,1.0000005960464478,6.123307054819744e-17,-0.0000013867993402527645,0,-0.481696754693985,0.014028649777173996,6.287169753704802e-7,1],[7,0.9874910712242126,-0.10984230041503906,0.11311177164316177,0,0.1121482253074646,0.9935895800590515,-0.01421019434928894,0,-0.11082576215267181,0.02671774849295616,0.993480384349823,0,0.03489777073264122,-0.022763237357139587,-0.7700437903404236,1],[7,0.000001343088456451369,-0.0000014026921917320578,1.0000005960464478,0,-1.8838773856860724e-12,-1.0000005960464478,-0.0000014026921917320578,0,1.0000005960464478,6.12323823339278e-17,-0.000001343088456451369,0,-0.8416656255722046,-0.008046340197324753,0.0000010917500503637712,1],[7,0.9930561780929565,-0.019135573878884315,0.11607266217470169,0,0.030753202736377716,0.9945979714393616,-0.0991402342915535,0,-0.11354847997426987,0.10202138125896454,0.9882810115814209,0,-0.06062827631831169,-0.09326085448265076,-0.7649393081665039,1],[7,0.9878923892974854,0.1029467061161995,0.11607268452644348,0,-0.09160631895065308,0.9908488988876343,-0.09914006292819977,0,-0.12521658837795258,0.0873066633939743,0.9882810115814209,0,-0.2067602425813675,-0.11955367028713226,-0.7649393081665039,1],[7,-0.98788982629776,0.11599037796258926,0.10304170846939087,0,-0.09160885959863663,0.09992936998605728,-0.9907676577568054,0,-0.12521645426750183,-0.9882098436355591,-0.08809357136487961,0,-0.34127968549728394,0.7648438811302185,0.120162732899189,1],[7,0.9878923296928406,-0.11599063873291016,0.10303916037082672,0,-0.09160655736923218,0.0999290719628334,0.9907676577568054,0,-0.12521673738956451,-0.9882098436355591,0.08809354156255722,0,-0.341279536485672,0.7648438811302185,-0.1201627254486084,1]],8,8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[33,"Skin-13",2943778424,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.029296670109033585,6.141211628118981e-8,1],[7,0.0000013867993402527645,0.0000027577034416026436,1.0000005960464478,0,3.824440330396639e-12,-1.0000005960464478,0.0000027577034416026436,0,1.0000005960464478,6.123307054819744e-17,-0.0000013867993402527645,0,-0.481696754693985,0.014028649777173996,6.287169753704802e-7,1]],8,8]]],0,0,[],[],[]],[[[10,".bin",636854225,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":19656,"length":3864,"count":966,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":19656,"count":273,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1,2,3,4,6,7,8,9,10,11,12,14]]},"minPosition",8,[1,-0.5420324802398682,-0.10351087898015976,0.424570232629776],"maxPosition",8,[1,0.5420324802398682,0.13451524078845978,0.840220034122467]]],-1],0,0,[],[],[]],[[[10,".bin",559312751,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":10296,"length":1944,"count":486,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":10296,"count":143,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1]]},"minPosition",8,[1,-0.06372028589248657,-0.10780427604913712,0.78865647315979],"maxPosition",8,[1,0.06372028589248657,0.05958384647965431,1.0018672943115234]]],-1],0,0,[],[],[]],[[[10,".bin",380793462,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":21888,"length":4356,"count":1089,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":21888,"count":304,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1,2,3,4,6,7,8,9,10,11,12,14]]},"minPosition",8,[1,-0.5420324802398682,-0.11315707862377167,0.424570232629776],"maxPosition",8,[1,0.5420324802398682,0.13689036667346954,0.8628447651863098]]],-1],0,0,[],[],[]],[[[10,".bin",3866170896,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":7848,"length":1704,"count":426,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":7848,"count":109,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1]]},"minPosition",8,[1,-0.06372028589248657,-0.13664217293262482,0.78865647315979],"maxPosition",8,[1,0.06372028589248657,0.05958384647965431,1.0018672943115234]]],-1],0,0,[],[],[]],[[[33,"Skin-2",1085022182,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 Neck/Bip001 Head"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.029296670109033585,6.141211628118981e-8,1],[7,0.000001343088456451369,-0.0000014026921917320578,1.0000005960464478,0,-1.8838773856860724e-12,-1.0000005960464478,-0.0000014026921917320578,0,1.0000005960464478,6.12323823339278e-17,-0.000001343088456451369,0,-0.8416656255722046,-0.008046340197324753,0.0000010917500503637712,1]],8,8]]],0,0,[],[],[]],[[[10,".bin",1974539737,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":15048,"length":3264,"count":816,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":15048,"count":209,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1,2,3,4,5,6,7,8,9,10]]},"minPosition",8,[1,-0.5420324802398682,-0.10403136163949966,0.48406583070755005],"maxPosition",8,[1,0.5420324802398682,0.10743696242570877,0.8427055478096008]]],-1],0,0,[],[],[]],[[[10,".bin",1686856981,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":15984,"length":3336,"count":834,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":15984,"count":222,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1,2,3,4,5,6,7,8,9]]},"minPosition",8,[1,-0.15325553715229034,-0.17288273572921753,0.000041732786485226825],"maxPosition",8,[1,0.15325553715229034,0.10326651483774185,0.5775505304336548]]],-1],0,0,[],[],[]],[[[33,"Skin-18",1912087271,["group1/Bip001/Bip001 Pelvis/Bip001 R Thigh/Bip001 R Calf/Bip001 R Foot/Bip001 R Toe0","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh/Bip001 R Calf/Bip001 R Foot","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh/Bip001 R Calf","group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh/Bip001 L Calf","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh/Bip001 L Calf/Bip001 L Foot/Bip001 L Toe0","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh/Bip001 L Calf/Bip001 L Foot"],[[[7,0.0000023005204639048316,7.331489371154021e-8,-1.677250862121582,0,-1.677250862121582,1.0066153775323619e-13,-0.0000023005204639048316,0,1.0270199708331017e-16,1.677250862121582,7.331489371154021e-8,0,-0.07459720969200134,-0.0025766498874872923,-0.08438855409622192,1],[7,-0.039907075464725494,0.0027235958259552717,-1.6767737865447998,0,-0.06142045930027962,-1.67612624168396,-0.0012607364915311337,0,-1.6756490468978882,0.06137308478355408,0.039980072528123856,0,0.4805685877799988,0.012728624045848846,-0.08610202372074127,1],[7,7.331489371154021e-8,0.000002299353127455106,-1.677250862121582,0,1.0040511038691621e-13,-1.677250862121582,-0.000002299353127455106,0,-1.677250862121582,1.0270197723097547e-16,-7.331489371154021e-8,0,0.07392387837171555,0.0328148752450943,-0.08438854664564133,1],[7,-0.03997417539358139,-0.0014350564451888204,-1.6767737865447998,0,0.11295145004987717,-1.6734422445297241,-0.0012605509255081415,0,-1.6729650497436523,-0.11294937878847122,0.039980072528123856,0,0.23801401257514954,0.03764621913433075,-0.08610202372074127,1],[7,6.363794824437718e-8,-0.0000023535471882496495,1.677250862121582,0,-0.04642058163881302,-1.676607608795166,-0.000002350885552004911,0,1.676607608795166,-0.04642058163881302,-1.2875182164862053e-7,0,-0.5440999269485474,0.04551564157009125,8.415383945248323e-8,1],[7,0.0000023260092802956933,0.000004625358087650966,1.677250862121582,0,6.41454294195154e-12,-1.677250862121582,0.000004625358087650966,0,1.677250862121582,1.0270316837105754e-16,-0.0000023260092802956933,0,-0.481696754693985,0.03025384433567524,5.83972735057614e-7,1],[7,0.03990694880485535,-0.0027189564425498247,-1.6767737865447998,0,-0.06142034754157066,-1.67612624168396,0.001256106304936111,0,-1.6756490468978882,0.06137308478355408,-0.03997977450489998,0,0.48056861758232117,0.012728613801300526,0.08610201627016068,1],[7,0.03997357189655304,0.0014395463513210416,-1.6767737865447998,0,0.11295155435800552,-1.6734422445297241,0.0012560320319607854,0,-1.672965168952942,-0.11294937878847122,-0.03997977450489998,0,0.23801402747631073,0.03764621913433075,0.08610203117132187,1],[7,0.000002305875341335195,-7.331489371154021e-8,-1.677250862121582,0,-1.677250862121582,-1.0069021490069843e-13,-0.000002305875341335195,0,1.0270199708331017e-16,1.677250862121582,-7.331489371154021e-8,0,-0.07459720969200134,-0.0025766498874872923,0.08438856154680252,1],[7,7.331489371154021e-8,0.000002299353127455106,-1.677250862121582,0,1.0040511038691621e-13,-1.677250862121582,-0.000002299353127455106,0,-1.677250862121582,1.0270197723097547e-16,-7.331489371154021e-8,0,0.07392387092113495,0.0328148752450943,0.08438856154680252,1]],8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[33,"Skin-28",2943778424,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.029296670109033585,6.141211628118981e-8,1],[7,0.0000013867993402527645,0.0000027577034416026436,1.0000005960464478,0,3.824440330396639e-12,-1.0000005960464478,0.0000027577034416026436,0,1.0000005960464478,6.123307054819744e-17,-0.0000013867993402527645,0,-0.481696754693985,0.014028649777173996,6.287169753704802e-7,1]],8,8]]],0,0,[],[],[]],[[[33,"Skin-7",488258588,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle","group1/Bip001/Bip001 Pelvis","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm/Bip001 L Forearm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 Neck/Bip001 Head","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm/Bip001 R Hand","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm/Bip001 L Forearm/Bip001 L Hand"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.029296670109033585,6.141211628118981e-8,1],[7,-0.9930561780929565,0.019132856279611588,0.11607241630554199,0,0.030750488862395287,0.9945979714393616,0.09914055466651917,0,-0.11354848742485046,0.10202138125896454,-0.9882809519767761,0,-0.06062823906540871,-0.09326086193323135,0.7649393081665039,1],[7,-0.98788982629776,-0.10294950753450394,0.1160724014043808,0,-0.09160910546779633,0.9908463954925537,0.09914062917232513,0,-0.12521634995937347,0.0873066857457161,-0.9882809519767761,0,-0.20676039159297943,-0.11955367028713226,0.7649392485618591,1],[7,-0.9874935150146484,0.10983975976705551,0.11311177909374237,0,0.11214597523212433,0.9935895800590515,0.014210515655577183,0,-0.1108260452747345,0.0267177801579237,-0.993480384349823,0,0.034898027777671814,-0.022763261571526527,0.7700437903404236,1],[7,0.0000013867993402527645,0.0000027577034416026436,1.0000005960464478,0,3.824440330396639e-12,-1.0000005960464478,0.0000027577034416026436,0,1.0000005960464478,6.123307054819744e-17,-0.0000013867993402527645,0,-0.481696754693985,0.014028649777173996,6.287169753704802e-7,1],[7,0.9930561780929565,-0.019135573878884315,0.11607266217470169,0,0.030753202736377716,0.9945979714393616,-0.0991402342915535,0,-0.11354847997426987,0.10202138125896454,0.9882810115814209,0,-0.06062827631831169,-0.09326085448265076,-0.7649393081665039,1],[7,0.9878923892974854,0.1029467061161995,0.11607268452644348,0,-0.09160631895065308,0.9908488988876343,-0.09914006292819977,0,-0.12521658837795258,0.0873066633939743,0.9882810115814209,0,-0.2067602425813675,-0.11955367028713226,-0.7649393081665039,1],[7,0.9874910712242126,-0.10984230041503906,0.11311177164316177,0,0.1121482253074646,0.9935895800590515,-0.01421019434928894,0,-0.11082576215267181,0.02671774849295616,0.993480384349823,0,0.03489777073264122,-0.022763237357139587,-0.7700437903404236,1],[7,0.000001343088456451369,-0.0000014026921917320578,1.0000005960464478,0,-1.8838773856860724e-12,-1.0000005960464478,-0.0000014026921917320578,0,1.0000005960464478,6.12323823339278e-17,-0.000001343088456451369,0,-0.8416656255722046,-0.008046340197324753,0.0000010917500503637712,1],[7,-0.98788982629776,0.11599037796258926,0.10304170846939087,0,-0.09160885959863663,0.09992936998605728,-0.9907676577568054,0,-0.12521645426750183,-0.9882098436355591,-0.08809357136487961,0,-0.34127968549728394,0.7648438811302185,0.120162732899189,1],[7,0.9878923296928406,-0.11599063873291016,0.10303916037082672,0,-0.09160655736923218,0.0999290719628334,0.9907676577568054,0,-0.12521673738956451,-0.9882098436355591,0.08809354156255722,0,-0.341279536485672,0.7648438811302185,-0.1201627254486084,1]],8,8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[10,".bin",4131972762,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":15912,"length":3504,"count":876,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":15912,"count":221,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1,2,3,4,5,6,7,8,9,10]]},"minPosition",8,[1,-0.5420324802398682,-0.10412226617336273,0.48754680156707764],"maxPosition",8,[1,0.5420324802398682,0.11021928489208221,0.8427055478096008]]],-1],0,0,[],[],[]],[[[10,".bin",611800795,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":17568,"length":3600,"count":900,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":17568,"count":244,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1,2,3,4,5,6,7,8,9]]},"minPosition",8,[1,-0.09022615104913712,-0.08483771979808807,0.00002488167410774622],"maxPosition",8,[1,0.08663284033536911,0.06855328381061554,0.34401530027389526]]],-1],0,0,[],[],[]],[[[10,".bin",2198802001,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":11664,"length":2304,"count":576,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":11664,"count":162,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1]]},"minPosition",8,[1,-0.06372028589248657,-0.1375090628862381,0.78865647315979],"maxPosition",8,[1,0.07584276050329208,0.06319525837898254,1.0054816007614136]]],-1],0,0,[],[],[]],[[[10,".bin",475331396,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":7848,"length":1752,"count":438,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":7848,"count":109,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1]]},"minPosition",8,[1,-0.07421635091304779,-0.10780427604913712,0.78865647315979],"maxPosition",8,[1,0.06372028589248657,0.07407593727111816,1.01518714427948]]],-1],0,0,[],[],[]],[[[33,"Skin-23",3888337597,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh/Bip001 R Calf","group1/Bip001/Bip001 Pelvis","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 Neck/Bip001 Head","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm/Bip001 L Forearm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm/Bip001 R Hand","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh/Bip001 L Calf","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm/Bip001 L Forearm/Bip001 L Hand"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.029296670109033585,6.141211628118981e-8,1],[7,-0.9930561780929565,0.019132856279611588,0.11607241630554199,0,0.030750488862395287,0.9945979714393616,0.09914055466651917,0,-0.11354848742485046,0.10202138125896454,-0.9882809519767761,0,-0.06062823906540871,-0.09326086193323135,0.7649393081665039,1],[7,-0.023793159052729607,0.0016238460084423423,-0.99971604347229,0,-0.03661974146962166,-0.9993299841880798,-0.0007516688201576471,0,-0.9990454912185669,0.03659149259328842,0.023836681619286537,0,0.4799744486808777,-0.003485690103843808,-0.08611422032117844,1],[7,-0.98788982629776,-0.10294950753450394,0.1160724014043808,0,-0.09160910546779633,0.9908463954925537,0.09914062917232513,0,-0.12521634995937347,0.0873066857457161,-0.9882809519767761,0,-0.20676039159297943,-0.11955367028713226,0.7649392485618591,1],[7,-0.9874935150146484,0.10983975976705551,0.11311177909374237,0,0.11214597523212433,0.9935895800590515,0.014210515655577183,0,-0.1108260452747345,0.0267177801579237,-0.993480384349823,0,0.034898027777671814,-0.022763261571526527,0.7700437903404236,1],[7,-0.02383316494524479,-0.0008556008106097579,-0.99971604347229,0,0.06734324246644974,-0.9977297782897949,-0.0007515581673942506,0,-0.997445285320282,-0.06734200567007065,0.023836679756641388,0,0.2391066700220108,0.021457869559526443,-0.08611422032117844,1],[7,0.0000013867993402527645,0.0000027577034416026436,1.0000005960464478,0,3.824440330396639e-12,-1.0000005960464478,0.0000027577034416026436,0,1.0000005960464478,6.123307054819744e-17,-0.0000013867993402527645,0,-0.481696754693985,0.014028649777173996,6.287169753704802e-7,1],[7,0.000001343088456451369,-0.0000014026921917320578,1.0000005960464478,0,-1.8838773856860724e-12,-1.0000005960464478,-0.0000014026921917320578,0,1.0000005960464478,6.12323823339278e-17,-0.000001343088456451369,0,-0.8416656255722046,-0.008046340197324753,0.0000010917500503637712,1],[7,0.9874910712242126,-0.10984230041503906,0.11311177164316177,0,0.1121482253074646,0.9935895800590515,-0.01421019434928894,0,-0.11082576215267181,0.02671774849295616,0.993480384349823,0,0.03489777073264122,-0.022763237357139587,-0.7700437903404236,1],[7,0.9930561780929565,-0.019135573878884315,0.11607266217470169,0,0.030753202736377716,0.9945979714393616,-0.0991402342915535,0,-0.11354847997426987,0.10202138125896454,0.9882810115814209,0,-0.06062827631831169,-0.09326085448265076,-0.7649393081665039,1],[7,0.023793082684278488,-0.0016210799803957343,-0.99971604347229,0,-0.036619674414396286,-0.9993299841880798,0.0007489082054235041,0,-0.9990454912185669,0.03659149259328842,-0.02383650280535221,0,0.4799744486808777,-0.0034857001155614853,0.08611416816711426,1],[7,0.9878923892974854,0.1029467061161995,0.11607268452644348,0,-0.09160631895065308,0.9908488988876343,-0.09914006292819977,0,-0.12521658837795258,0.0873066633939743,0.9882810115814209,0,-0.2067602425813675,-0.11955367028713226,-0.7649393081665039,1],[7,-0.98788982629776,0.11599037796258926,0.10304170846939087,0,-0.09160885959863663,0.09992936998605728,-0.9907676577568054,0,-0.12521645426750183,-0.9882098436355591,-0.08809357136487961,0,-0.34127968549728394,0.7648438811302185,0.120162732899189,1],[7,0.023832805454730988,0.0008582777227275074,-0.99971604347229,0,0.06734330207109451,-0.9977297782897949,0.000748863909393549,0,-0.997445285320282,-0.06734200567007065,-0.02383650280535221,0,0.239106684923172,0.021457869559526443,0.08611418306827545,1],[7,0.9878923296928406,-0.11599063873291016,0.10303916037082672,0,-0.09160655736923218,0.0999290719628334,0.9907676577568054,0,-0.12521673738956451,-0.9882098436355591,0.08809354156255722,0,-0.341279536485672,0.7648438811302185,-0.1201627254486084,1]],8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[33,"Skin-22",488258588,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle","group1/Bip001/Bip001 Pelvis","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm/Bip001 L Forearm","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 Neck/Bip001 Head","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 R Clavicle/Bip001 R UpperArm/Bip001 R Forearm/Bip001 R Hand","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 L Clavicle/Bip001 L UpperArm/Bip001 L Forearm/Bip001 L Hand"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.029296670109033585,6.141211628118981e-8,1],[7,-0.9930561780929565,0.019132856279611588,0.11607241630554199,0,0.030750488862395287,0.9945979714393616,0.09914055466651917,0,-0.11354848742485046,0.10202138125896454,-0.9882809519767761,0,-0.06062823906540871,-0.09326086193323135,0.7649393081665039,1],[7,-0.98788982629776,-0.10294950753450394,0.1160724014043808,0,-0.09160910546779633,0.9908463954925537,0.09914062917232513,0,-0.12521634995937347,0.0873066857457161,-0.9882809519767761,0,-0.20676039159297943,-0.11955367028713226,0.7649392485618591,1],[7,-0.9874935150146484,0.10983975976705551,0.11311177909374237,0,0.11214597523212433,0.9935895800590515,0.014210515655577183,0,-0.1108260452747345,0.0267177801579237,-0.993480384349823,0,0.034898027777671814,-0.022763261571526527,0.7700437903404236,1],[7,0.0000013867993402527645,0.0000027577034416026436,1.0000005960464478,0,3.824440330396639e-12,-1.0000005960464478,0.0000027577034416026436,0,1.0000005960464478,6.123307054819744e-17,-0.0000013867993402527645,0,-0.481696754693985,0.014028649777173996,6.287169753704802e-7,1],[7,0.9930561780929565,-0.019135573878884315,0.11607266217470169,0,0.030753202736377716,0.9945979714393616,-0.0991402342915535,0,-0.11354847997426987,0.10202138125896454,0.9882810115814209,0,-0.06062827631831169,-0.09326085448265076,-0.7649393081665039,1],[7,0.9878923892974854,0.1029467061161995,0.11607268452644348,0,-0.09160631895065308,0.9908488988876343,-0.09914006292819977,0,-0.12521658837795258,0.0873066633939743,0.9882810115814209,0,-0.2067602425813675,-0.11955367028713226,-0.7649393081665039,1],[7,0.9874910712242126,-0.10984230041503906,0.11311177164316177,0,0.1121482253074646,0.9935895800590515,-0.01421019434928894,0,-0.11082576215267181,0.02671774849295616,0.993480384349823,0,0.03489777073264122,-0.022763237357139587,-0.7700437903404236,1],[7,0.000001343088456451369,-0.0000014026921917320578,1.0000005960464478,0,-1.8838773856860724e-12,-1.0000005960464478,-0.0000014026921917320578,0,1.0000005960464478,6.12323823339278e-17,-0.000001343088456451369,0,-0.8416656255722046,-0.008046340197324753,0.0000010917500503637712,1],[7,-0.98788982629776,0.11599037796258926,0.10304170846939087,0,-0.09160885959863663,0.09992936998605728,-0.9907676577568054,0,-0.12521645426750183,-0.9882098436355591,-0.08809357136487961,0,-0.34127968549728394,0.7648438811302185,0.120162732899189,1],[7,0.9878923296928406,-0.11599063873291016,0.10303916037082672,0,-0.09160655736923218,0.0999290719628334,0.9907676577568054,0,-0.12521673738956451,-0.9882098436355591,0.08809354156255722,0,-0.341279536485672,0.7648438811302185,-0.1201627254486084,1]],8,8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[10,".bin",3365924557,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":10800,"length":1956,"count":489,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":10800,"count":150,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1]]},"minPosition",8,[1,-0.12806251645088196,-0.103596992790699,-0.07698094099760056],"maxPosition",8,[1,0.06801418960094452,0.14524760842323303,0.07579606026411057]]],-1],0,0,[],[],[]],[[[33,"Skin-11",2514283661,["group1/Bip001/Bip001 Pelvis/Bip001 Spine"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.029296670109033585,6.141211628118981e-8,1]],8]]],0,0,[],[],[]],[[[33,"Skin-20",1028990140,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh","group1/Bip001/Bip001 Pelvis","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh/Bip001 R Calf","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh/Bip001 R Calf/Bip001 R Foot","group1/Bip001/Bip001 Pelvis/Bip001 R Thigh/Bip001 R Calf/Bip001 R Foot/Bip001 R Toe0","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh/Bip001 L Calf","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh/Bip001 L Calf/Bip001 L Foot/Bip001 L Toe0","group1/Bip001/Bip001 Pelvis/Bip001 L Thigh/Bip001 L Calf/Bip001 L Foot"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.02929666079580784,6.14120168052068e-8,1],[7,-0.023793159052729607,0.0016238460084423423,-0.99971604347229,0,-0.03661974146962166,-0.9993299841880798,-0.0007516688201576471,0,-0.9990454912185669,0.03659149259328842,0.023836681619286537,0,0.4799744486808777,-0.003485690103843808,-0.08611422032117844,1],[7,0.0000013867993402527645,0.0000027577034416026436,1.0000005960464478,0,3.824440330396639e-12,-1.0000005960464478,0.0000027577034416026436,0,1.0000005960464478,6.123307054819744e-17,-0.0000013867993402527645,0,-0.481696754693985,0.014028649777173996,6.287169753704802e-7,1],[7,-0.02383316494524479,-0.0008556008106097579,-0.99971604347229,0,0.06734324246644974,-0.9977297782897949,-0.0007515581673942506,0,-0.997445285320282,-0.06734200567007065,0.023836679756641388,0,0.2391066700220108,0.021457869559526443,-0.08611422032117844,1],[7,4.3711366970455856e-8,0.000001370906602460309,-1.0000005960464478,0,5.98629354637073e-14,-1.0000005960464478,-0.000001370906602460309,0,-1.0000005960464478,6.12323624815931e-17,-4.3711366970455856e-8,0,0.07392387837171555,0.016589680686593056,-0.08438856899738312,1],[7,0.0000013716025932808407,4.3711366970455856e-8,-1.0000005960464478,0,-1.0000005960464478,6.001582152255491e-14,-0.0000013716025932808407,0,6.12323757164829e-17,1.0000005960464478,4.3711366970455856e-8,0,-0.09082239866256714,-0.0025766498874872923,-0.08438857644796371,1],[7,0.023793082684278488,-0.0016210799803957343,-0.99971604347229,0,-0.036619674414396286,-0.9993299841880798,0.0007489082054235041,0,-0.9990454912185669,0.03659149259328842,-0.02383650280535221,0,0.4799744486808777,-0.0034857001155614853,0.08611416816711426,1],[7,0.023832805454730988,0.0008582777227275074,-0.99971604347229,0,0.06734330207109451,-0.9977297782897949,0.000748863909393549,0,-0.997445285320282,-0.06734200567007065,-0.02383650280535221,0,0.239106684923172,0.021457869559526443,0.08611418306827545,1],[7,0.0000013747953744314145,-4.3711366970455856e-8,-1.0000005960464478,0,-1.0000005960464478,-6.00329180355623e-14,-0.0000013747953744314145,0,6.12323757164829e-17,1.0000005960464478,-4.3711366970455856e-8,0,-0.09082239866256714,-0.0025766498874872923,0.08438853919506073,1],[7,4.3711366970455856e-8,0.000001370906602460309,-1.0000005960464478,0,5.98629354637073e-14,-1.0000005960464478,-0.000001370906602460309,0,-1.0000005960464478,6.12323624815931e-17,-4.3711366970455856e-8,0,0.07392387092113495,0.016589680686593056,0.08438853919506073,1]],8,8,8,8,8,8,8,8,8,8]]],0,0,[],[],[]],[[[10,".bin",1326922140,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":3096,"length":648,"count":162,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":3096,"count":43,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.10258302092552185,0.06574029475450516,0.5911976099014282],"maxPosition",8,[1,0.09935801476240158,0.17882655560970306,0.8351060748100281]]],-1],0,0,[],[],[]],[[[33,"Skin-29",1085022182,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 Neck/Bip001 Head"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.029296670109033585,6.141211628118981e-8,1],[7,0.000001343088456451369,-0.0000014026921917320578,1.0000005960464478,0,-1.8838773856860724e-12,-1.0000005960464478,-0.0000014026921917320578,0,1.0000005960464478,6.12323823339278e-17,-0.000001343088456451369,0,-0.8416656255722046,-0.008046340197324753,0.0000010917500503637712,1]],8,8]]],0,0,[],[],[]],[[[33,"Skin-1",1085022182,["group1/Bip001/Bip001 Pelvis/Bip001 Spine","group1/Bip001/Bip001 Pelvis/Bip001 Spine/Bip001 Neck/Bip001 Head"],[[[7,3.7941838115784776e-8,-0.0000014032178796696826,1.0000005960464478,0,-0.027676602825522423,-0.9996169805526733,-0.0000014016309251019266,0,0.9996169805526733,-0.027676602825522423,-7.676364077724429e-8,0,-0.5445489883422852,0.029296670109033585,6.141211628118981e-8,1],[7,0.000001343088456451369,-0.0000014026921917320578,1.0000005960464478,0,-1.8838773856860724e-12,-1.0000005960464478,-0.0000014026921917320578,0,1.0000005960464478,6.12323823339278e-17,-0.000001343088456451369,0,-0.8416656255722046,-0.008046340197324753,0.0000010917500503637712,1]],8,8]]],0,0,[],[],[]],[[[10,".bin",3277008803,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":17568,"length":3600,"count":900,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":17568,"count":244,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,1,2,3,4,5,6,7,8,9]]},"minPosition",8,[1,-0.09022615104913712,-0.08483771979808807,0.00002488167410774622],"maxPosition",8,[1,0.08663284033536911,0.06855328381061554,0.34401530027389526]]],-1],0,0,[],[],[]],[[[10,".bin",2613669784,[{"primitives":[{"primitiveMode":7,"jointMapIndex":0,"vertexBundelIndices":[0],"indexView":{"offset":15048,"length":3264,"count":816,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":15048,"count":209,"stride":72},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_joints","format":42,"isNormalized":false},{"name":"a_weights","format":44,"isNormalized":false}]}],"jointMaps":[[0,2,3,4,5,6,7,8,10,11,12]]},"minPosition",8,[1,-0.5420324802398682,-0.09776173532009125,0.47366389632225037],"maxPosition",8,[1,0.5420324802398682,0.10715954005718231,0.8427055478096008]]],-1],0,0,[],[],[]],[[[22,"weapons3_1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{"occlusion":0.279,"roughness":0.421,"metallic":0.359,"specularIntensity":0.609},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[338,2]],[[[22,"box",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true,"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0,"specularIntensity":0},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[124,2]],[[{"name":"rolebg3","rect":{"x":455,"y":1835,"width":124,"height":188},"offset":{"x":0,"y":-6},"originalSize":{"width":200,"height":200},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"sureadbg1","rect":{"x":1,"y":429,"width":360,"height":230},"offset":{"x":0,"y":0},"originalSize":{"width":360,"height":230},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"bulleticon"],[96,"bulleticon",33554432,[-4],[[3,-2,[0,"97wKeK7utPOrITCY8672Ff"],[5,10,31]],[7,-3,[0,"eaW5iVAkdHC6yeXUNachMB"],1]],[1,"b4aLvHHZdGlp011B4Z+ARJ",null,null,null,-1,0],[1,-63,0,0]],[17,"icon",33554432,1,[[3,-5,[0,"17FPccFfJDC5akFTvt30Ha"],[5,10,31]],[7,-6,[0,"1dq/jR5e5Cf7KGHRaIuYIC"],0]],[1,"dfqaVLOGRPsrYd2Js2RraN",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,2,0,0,2,0,0,2,0,5,1,6],[0,0],[1,1],[80,339]],[[{"name":"gamebg2","rect":{"x":588,"y":1751,"width":150,"height":50},"offset":{"x":0,"y":0},"originalSize":{"width":150,"height":50},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"heroPlane"],[71,"heroPlane",[-2],[1,"c5p/5nf/JLaKqVnA8ZKySo",null,null,null,-1,0]],[27,"heroplance",1,[[21,1,-3,[0,"82jY6p84tNsr7b5Jvkj4nz"],[0],[8,true,true],1]],[1,"4fFvkiFKtE2qhLWzo/+l7H",null,null,null,1,0]]],0,[0,4,1,0,-1,2,0,0,2,0,5,1,3],[0,0],[-1,3],[340,341]],[[[10,".bin",270303024,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":4032,"length":648,"count":162,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":4032,"count":84,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-1.1741433143615723,-0.000002111792582581984,-0.4471093714237213],"maxPosition",8,[1,1.1741433143615723,1.072624921798706,0.4471096396446228]]],-1],0,0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["eaFdUWwkNIMaxUNRZnbXi+"]}],[2],0,[],[],[]],[[[10,".bin",1609498634,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":29472,"length":3672,"count":918,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":29472,"count":614,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-1.4122703075408936,-0.242468923330307,-0.06979254633188248],"maxPosition",8,[1,0.5137923955917358,0.25900161266326904,0.10913501679897308]]],-1],0,0,[],[],[]],[[{"name":"moregamebg","rect":{"x":1085,"y":473,"width":60,"height":160},"offset":{"x":0,"y":0},"originalSize":{"width":60,"height":160},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"box2"],[34,"box2",[-4],[[114,-2,[0,"7fzTQUwoxCZIrzivxYXL1z"],[1,2.19,1.345,3.578]],[126,false,-3,[0,"9eEXld8yVCCYq+gQVUgXIv"]]],[1,"f9tCxNSHlThJfkOaYUgZKW",null,null,null,-1,0]],[27,"box2",1,[[21,1,-5,[0,"6a8acwxXlSQbYoGSmSp/J/"],[0],[8,true,true],1]],[1,"43L3+WsSJYi4xsDX/4Bv2O",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,2,0,0,2,0,5,1,5],[0,0],[-1,3],[132,342]],[[[9,"shellicon"],[42,"shellicon",33554432,[-4],[[3,-2,[0,"97wKeK7utPOrITCY8672Ff"],[5,32,32]],[24,0,-3,[0,"eaW5iVAkdHC6yeXUNachMB"],1]],[1,"b4aLvHHZdGlp011B4Z+ARJ",null,null,null,-1,0]],[17,"icon",33554432,1,[[3,-5,[0,"17FPccFfJDC5akFTvt30Ha"],[5,32,32]],[24,0,-6,[0,"1dq/jR5e5Cf7KGHRaIuYIC"],0]],[1,"dfqaVLOGRPsrYd2Js2RraN",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,2,0,0,2,0,0,2,0,5,1,6],[0,0],[1,1],[343,344]],[[[9,"bloodmist"],[173,"bloodmist",[-2],[1,"bdU2D0f+JKlq5T5UIZI8T7",null,null,null,-1,0],[3,0.7071067811865475,0,0,0.7071067811865476],[1,90,0,0]],[195,1,false,1,[0,"7aXvGSFOJHHpuYAOAOxQEp"],[0],[197,2,[4,4278190335],[4,1006633215]],[32,3,1,2],[2],[2],[5,0.4],[5,1.5707963267948966],[5,1.5707963267948966],[5,1.5707963267948966],[2],[5,1],[5,0.01],[2],[2],[[55,[5,10]]],[46,true,[45,1,[52,[[112,0],[23,66,0.14955357142857142],[23,64,0.7700892857142857],[23,0,0.9799107142857143]]]]],[121,true,3,0.01,[5,1]],[101,true,[39,1,[25,[0,0.4948717948717949,1],[[74,2,0.3925925925925926,0.525252525252526,0.525252525252526],[74,2,0.8185185185185185,0.6138888888888894,0.6138888888888894],[13,2,1]]]],[2],[2],[2]],[59,[2],[2],[2],[5,1]],[49,[2],[2],[2]],[40,[2],[2],[2],[2]],[75,true,[2],[2],[32,3,-0.7853981633974483,0.7853981633974483]],[148,2,2,1,[39,1,[25,[0,1],[[13,2,1],[13,2,1]]]],[57,1,4,[25,[0,1],[[58,2],[13,2,1]]]]],[41],[60,[5,1],[2],[12],[12],-3],[68,1,2]]],0,[0,4,1,0,-1,2,0,12,2,0,5,1,3],[0,0,0],[-1,15,16],[133,133,105]],[[[22,"wall1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true,"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0.314,"metallic":0.153,"specularIntensity":0.261},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[345,2]],[[[10,".bin",744094275,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":4416,"length":1224,"count":306,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":4416,"count":92,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.6406550407409668,-1.0893218517303467,-0.6406552791595459],"maxPosition",8,[1,0.6406550407409668,1.0893218517303467,0.6406552791595459]]],-1],0,0,[],[],[]],[[[22,"storehouse1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true,"USE_ALBEDO_MAP":true},{},{}],[[[{"roughness":0,"specularIntensity":0},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[8,7],[346,2]],[[[9,"FailPage"],[42,"FailPage",33554432,[-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16],[[3,-3,[0,"47phGvI6pIdpbGhxuHmH9l"],[5,640,1136]],[29,45,100,100,-4,[0,"51SFOuDEdIVb5zW8MjFa7U"]],[56,-5,[0,"4bWBdZ+AlDbJzl9fmUhqI3"]]],[64,"a7ERIEEwRNP6aVz0LcK2NL",null,null,-2,0,[-1]]],[16,"headshoot",33554432,1,[-19,-20,-21,-22],[[3,-17,[0,"caE6N0Vp1H5qxQkTONPKIY"],[5,400,50]],[36,1,0,-18,[0,"2aw1SOm15J0K8GMk78ZFJj"],11]],[1,"e46MVqJGVEl4TiWPDjoJLh",null,null,null,1,0],[1,0,40,0]],[16,"totalkill",33554432,1,[-25,-26,-27,-28],[[3,-23,[0,"feHpCIEEpMBq4kaNfemoBq"],[5,400,50]],[36,1,0,-24,[0,"60oS24xyJNpKpZ78VlAO/1"],16]],[1,"c0rABO80tGbqxNxxk6jtsA",null,null,null,1,0],[1,0,-25,0]],[16,"reward",33554432,1,[-31,-32,-33,-34],[[3,-29,[0,"4aUXJFk1hNrZfus0iYcyZb"],[5,400,50]],[36,1,0,-30,[0,"4aFu0Z4NhB/aUFk2tyHCUm"],21]],[1,"d4r4kM1mpGtorcqWxkKCYN",null,null,null,1,0],[1,0,-90,0]],[16,"income",33554432,1,[-37,-38,-39],[[3,-35,[0,"1eCaHokSNBr5Clt12E53y5"],[5,400,50]],[36,1,0,-36,[0,"a1RVlBuBdCWpVNh58Yu1Ym"],25]],[1,"f12tVyUVBNraO3vgX4Qhhc",null,null,null,1,0],[1,0,-155,0]],[17,"bg",33554432,1,[[3,-40,[0,"a9Ruvi3DhPYaAsATASdYCh"],[5,640,1136]],[24,0,-41,[0,"d0fu8hRw5AsbLtegRAcvDw"],0],[29,45,120,120,-42,[0,"20NUPDTOBJNoxDNuVw2HL+"]],[37,-43,[0,"feDwZ+VfFO45HfXr2vvMO3"]]],[1,"2c/Si+Av5Ep6ywERBBm++L",null,null,null,1,0]],[6,"btnhome",33554432,1,[[3,-44,[0,"d8gLYkTkZNK7j7uC6hX3Fc"],[5,60,60]],[7,-45,[0,"5b7ncbQ+ZLi7cYnQrVg2sp"],1],[84,9,15,15,-46,[0,"7cYUiIX+RBC5gnEfUisokJ"]],[30,1,-47,[0,"3fwpLGRbJF9ZTMp9iXls7Q"],[4,4292072403],2]],[1,"2eijIayQFAhIwt3mRK9bq1",null,null,null,1,0],[1,-275,523,0]],[16,"NumGoldTT",33554432,1,[-51],[[3,-48,[0,"a7aT/BYftFGKrRDN6gGVhZ"],[5,140,50]],[36,1,0,-49,[0,"ffk/sOHHxGG451sVAu9e+w"],4],[79,33,15,20,-50,[0,"77Y/85sCxFV6CRt1Kmr3cD"]]],[1,"cbhcIhii9Nt7B7bUhdojYZ",null,null,null,1,0],[1,235,523,0]],[16,"title",33554432,1,[-54],[[3,-52,[0,"02Y8+artlByIslgRTfATJF"],[5,320,290]],[7,-53,[0,"6fvZTp9U1OTI6/aDFP1fGV"],6]],[1,"84w5bME+BJ+4JqZa+aQubE",null,null,null,1,0],[1,0,330,0]],[6,"btnretry",33554432,1,[[3,-55,[0,"42AdLlkv5HGZRwfxfgNPO/"],[5,226,96]],[7,-56,[0,"284RVkmOdH4qX6jCiO5FMM"],26],[30,1,-57,[0,"1aRrFjrCtEW6kPoAcEucKz"],[4,4292072403],27]],[1,"55ywg0actM9pw0WGX54Uel",null,null,null,1,0],[1,0,-300,0]],[43,0,{},1,[44,"84/gB38qxIbJVJJ+NABhar",null,null,-63,[149,"acOBZZP8NJdZWW/goEJ1qr",1,[[158,[31,["84/gB38qxIbJVJJ+NABhar"]],[[37,-62,[0,"1cvbf8aX1LXpen0/sIajDx"]]]]],[[14,"moregameView",["_name"],-58],[11,["_lpos"],-59,[1,-320,-488,0]],[11,["_lrot"],-60,[3,0,0,0,1]],[11,["_euler"],-61,[1,0,0,0]]]],28]],[31,["84/gB38qxIbJVJJ+NABhar"]],[6,"text",33554432,8,[[3,-64,[0,"c1b85H1W1PqYqgEd/yPbNe"],[5,70.34,30]],[35,"10000",30,30,30,false,-65,[0,"53H2JWWgZNtJ538g51BNuw"],3]],[1,"90BrHBV01C7KsEtJURI7U+",null,null,null,1,0],[1,12,1,0]],[17,"icon",33554432,9,[[3,-66,[0,"b0wnR00xpDbrDwPynxc1gV"],[5,640,80]],[7,-67,[0,"b3+cAi1zRMvYnirTpmlJzn"],5]],[1,"f6/N7PTxxPoZfA+8YCYJx+",null,null,null,1,0]],[6,"showLevel",33554432,1,[[3,-68,[0,"88auHwnX5EJYM9YMZXcdTS"],[5,450,58]],[141,1,20,-69,[0,"8fGXyxIHlImK9PBdHRAAru"]]],[1,"62J86Efc9FB7wOAArhw3E7",null,null,null,1,0],[1,0,150,0]],[6,"icon1",33554432,2,[[3,-70,[0,"a2ZMtUDZtLraE936RrYU7H"],[5,76,41]],[7,-71,[0,"cco0UIQr9Ku6VuyOxx83iV"],7]],[1,"d5j+xJ7UNHlLfVFTN9gxQq",null,null,null,1,0],[1,-130,0,0]],[6,"icon2",33554432,2,[[20,-72,[0,"4dcyyEa2RLdbMIGC5bOuf4"],[5,115,14],[0,1,0.5]],[7,-73,[0,"26p8KmTaRCO5EwKrMH9SiX"],8]],[1,"54QaD26V9GXYrUzruscH11",null,null,null,1,0],[1,50,0,0]],[6,"icon3",33554432,2,[[3,-74,[0,"b5Fk5RpI5OJbLaXB/yC77i"],[5,19.86,24]],[35,"F",24,24,24,false,-75,[0,"d8ds7HxMNLIbgMcx/3jDX8"],9]],[1,"59GDGvmS5OablvIdgssaJC",null,null,null,1,0],[1,100,0,0]],[6,"text",33554432,2,[[20,-76,[0,"ceynoNaZNM3o7Dq3zpdB/r"],[5,31.79,24],[0,0,0.5]],[66,"B0",24,24,24,false,2,-77,[0,"b5OTE/JuxP34YvzV35d9p1"],[4,4281791485],10]],[1,"17Zg3ojkhNnJ6lcQEtDznI",null,null,null,1,0],[1,111,0,0]],[6,"icon1",33554432,3,[[3,-78,[0,"fe2iMTNvdO164aZj9kA9tV"],[5,43,43]],[7,-79,[0,"9f012EV4xIpbVXLTwBej+O"],12]],[1,"dalm3WU45GDbqcY+owGuzB",null,null,null,1,0],[1,-130,0,0]],[6,"icon2",33554432,3,[[20,-80,[0,"f2TjXhR+RNN6m2v2v3Ad0r"],[5,119,15],[0,1,0.5]],[7,-81,[0,"4eGqe4pWdJeb8wVmoiAZQt"],13]],[1,"4ejC1z8j5Jgpw5DiuMMJXR",null,null,null,1,0],[1,50,0,0]],[6,"icon3",33554432,3,[[3,-82,[0,"23QYOqdJdK1obVvNqXt7ii"],[5,19.86,24]],[35,"F",24,24,24,false,-83,[0,"145ZvgmGRAs7+XbeOQ6WGq"],14]],[1,"343685YqxJnZkKFdkO82JV",null,null,null,1,0],[1,100,0,0]],[6,"text",33554432,3,[[20,-84,[0,"fcrVxTdCRKwKfOq1Km6cfT"],[5,58.14,24],[0,0,0.5]],[66,"B120",24,24,24,false,2,-85,[0,"c67tsUiklB16wO+UshZ8Yn"],[4,4281791485],15]],[1,"bcKB1EA7NLBbcJWGJNjg5I",null,null,null,1,0],[1,111,0,0]],[94,"icon1",33554432,4,[[3,-86,[0,"58Y6yYRGBFmr4SHuMcaoGH"],[5,35,36]],[7,-87,[0,"12GvhoOKNCSICHTb5ILHdo"],17]],[1,"d0N4/kAqVCaaY6jUVzHESN",null,null,null,1,0],[1,-130,0,0],[1,1.1,1.1,1.1]],[6,"icon2",33554432,4,[[20,-88,[0,"1ezzP+MaxPfIW7zkIbGWo8"],[5,134,14],[0,1,0.5]],[7,-89,[0,"54jqDI8NBDYacFZo5j/j/s"],18]],[1,"3f1G2TduNMnZkq3l76GaR6",null,null,null,1,0],[1,50,0,0]],[6,"icon3",33554432,4,[[3,-90,[0,"47DowMzZxA8awx5j4TCdAV"],[5,19.86,24]],[35,"F",24,24,24,false,-91,[0,"2ce9USjOtKCYet+uCUDeOJ"],19]],[1,"deuKjtOVdPP5AtAh03JsUp",null,null,null,1,0],[1,100,0,0]],[6,"text",33554432,4,[[20,-92,[0,"08TyMbe9JNMrCBS2xXoEOa"],[5,58.14,24],[0,0,0.5]],[66,"B120",24,24,24,false,2,-93,[0,"2fJXYN+oxDTYoXGgjkAWlV"],[4,4281791485],20]],[1,"2dMfFsXvlE+pXEmOH4mHJW",null,null,null,1,0],[1,111,0,0]],[6,"icon2",33554432,5,[[20,-94,[0,"34j/ixbSJGqYyJXQztugD9"],[5,71,14],[0,1,0.5]],[7,-95,[0,"9622E9bWhL5LUnJfUii6qJ"],22]],[1,"05DI78MS9NOrj8L8ApySLj",null,null,null,1,0],[1,50,0,0]],[6,"icon3",33554432,5,[[3,-96,[0,"5a+TrRN99MhKHz3e0taFZz"],[5,19.86,24]],[35,"F",24,24,24,false,-97,[0,"523vcShFtOUISo52hRBAbV"],23]],[1,"d7iuZflJ5IXo8263bfLgiN",null,null,null,1,0],[1,100,0,0]],[6,"text",33554432,5,[[20,-98,[0,"91XMFP2DpLnI4fkioFrsm4"],[5,58.14,24],[0,0,0.5]],[66,"B120",24,24,24,false,2,-99,[0,"f1sk/urlhDbJTJonlolXNl"],[4,4281791485],24]],[1,"50VvZFVaRBDIzDjVPmAOck",null,null,null,1,0],[1,111,0,0]]],0,[0,-1,11,0,4,1,0,0,1,0,0,1,0,0,1,0,-1,6,0,-2,7,0,-3,8,0,-4,9,0,-5,15,0,-6,2,0,-7,3,0,-8,4,0,-9,5,0,-10,10,0,-11,11,0,0,2,0,0,2,0,-1,16,0,-2,17,0,-3,18,0,-4,19,0,0,3,0,0,3,0,-1,20,0,-2,21,0,-3,22,0,-4,23,0,0,4,0,0,4,0,-1,24,0,-2,25,0,-3,26,0,-4,27,0,0,5,0,0,5,0,-1,28,0,-2,29,0,-3,30,0,0,6,0,0,6,0,0,6,0,0,6,0,0,7,0,0,7,0,0,7,0,0,7,0,0,8,0,0,8,0,0,8,0,-1,13,0,0,9,0,0,9,0,-1,14,0,0,10,0,0,10,0,0,10,0,18,12,0,18,12,0,18,12,0,18,12,0,0,11,0,4,11,0,0,13,0,0,13,0,0,14,0,0,14,0,0,15,0,0,15,0,0,16,0,0,16,0,0,17,0,0,17,0,0,18,0,0,18,0,0,19,0,0,19,0,0,20,0,0,20,0,0,21,0,0,21,0,0,22,0,0,22,0,0,23,0,0,23,0,0,24,0,0,24,0,0,25,0,0,25,0,0,26,0,0,26,0,0,27,0,0,27,0,0,28,0,0,28,0,0,29,0,0,29,0,0,30,0,0,30,0,5,1,99],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,11,9,1,1,1,1,1,9,9,1,1,1,9,9,1,1,1,9,9,1,1,9,9,1,1,11,13],[35,7,7,1,18,347,348,111,112,1,1,16,113,114,1,1,16,115,116,1,1,16,117,1,1,16,134,134,121]],[[[26,"soundwin1",".mp3",2.063673],-1],0,0,[],[],[]],[[{"name":"resultbg3","rect":{"x":1,"y":341,"width":520,"height":86},"offset":{"x":0,"y":0},"originalSize":{"width":520,"height":86},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"TryPage"],[42,"TryPage",33554432,[-5,-6],[[3,-2,[0,"47phGvI6pIdpbGhxuHmH9l"],[5,640,1136]],[29,45,100,100,-3,[0,"51SFOuDEdIVb5zW8MjFa7U"]],[56,-4,[0,"4bWBdZ+AlDbJzl9fmUhqI3"]]],[1,"a7ERIEEwRNP6aVz0LcK2NL",null,null,null,-1,0]],[16,"panel",33554432,1,[-9,-10,-11,-12,-13,-14],[[3,-7,[0,"64Y3EU9g9BUbga5DxTWNJo"],[5,400,480]],[7,-8,[0,"9cgpNWmi1ACayTW5yoCfWO"],10]],[1,"9bMAqvjg9B66Wi9CxKKFfI",null,null,null,1,0],[1,0,120,0]],[17,"bg",33554432,1,[[3,-15,[0,"a9Ruvi3DhPYaAsATASdYCh"],[5,640,1136]],[24,0,-16,[0,"d0fu8hRw5AsbLtegRAcvDw"],0],[29,45,120,120,-17,[0,"20NUPDTOBJNoxDNuVw2HL+"]],[37,-18,[0,"feDwZ+VfFO45HfXr2vvMO3"]]],[1,"2c/Si+Av5Ep6ywERBBm++L",null,null,null,1,0]],[6,"btnno",33554432,2,[[3,-19,[0,"ccjb5VCWZI/LeurDLpJTp3"],[5,220,100]],[7,-20,[0,"96LJ+sMuhJ7ZxcxJ8GoDar"],5],[179,-21,[0,"de1NdufN1CmZTOVLfZ5MnW"]],[30,1,-22,[0,"507AZU47tMJKGXL+YJ7hIm"],[4,4292072403],6]],[1,"aeBHTrV3BG8qtLoBWZF8WC",null,null,null,1,0],[1,0,-430,0]],[116,"title1",false,33554432,2,[[3,-23,[0,"18XdAAQGZBRa2fDfOSZPxE"],[5,226,27]],[7,-24,[0,"56xfnxefdJOLVKXTNls7aq"],1],[53,1,19,-25,[0,"63x9BAg5ZDGqdZE4YEPP3D"]]],[1,"88RG2P6jFGiJLRCx9URk7n",null,null,null,1,0],[1,0,207.5,0]],[116,"title2",false,33554432,2,[[3,-26,[0,"4abrOUVbVCj6vKGj/pwoYF"],[5,197,27]],[7,-27,[0,"00Rv3JuDtD4qS/34ajQegv"],2],[53,1,19,-28,[0,"3aQvrgC7hJ/bbJw4UcPNXJ"]]],[1,"2euNeOWPRDpYYTLaWBsajk",null,null,null,1,0],[1,0,207.5,0]],[6,"btntry",33554432,2,[[3,-29,[0,"e3AHkho7xPxJ9bNNEaN1vF"],[5,226,96]],[7,-30,[0,"54B3rtnkJH9o0sPG3KMD8L"],3],[30,1,-31,[0,"13DAJLgcVFiJgpITlBGz7b"],[4,4292072403],4]],[1,"71aLAm9hBMxZi/GNRoShgy",null,null,null,1,0],[1,0,-330,0]],[117,"point",33554432,2,[[-32,[111,-33,[0,"eenZpGkO9KX6jWamA2xOBJ"]],[78,-34,[0,"100rODYulLd5DZzWChgDIc"]]],1,4,4],[1,"c8tuYn9dlG+r7qYo8/WXGs",null,null,null,1,0],[1,0,-30,30.288],[1,500,500,10]],[77,"showbox",33554432,2,[-36],[[3,-35,[0,"0e1vrj/2VNgJuKqxEkrsDA"],[5,400,480]]],[1,"51Wiqb+MRCboHXY2YtNyN9",null,null,null,1,0]],[6,"WeaponNode",33554432,9,[[3,-37,[0,"4c9viwMOtDPLlxMjsmu0DW"],[5,400,480]]],[1,"f3NUEv0S5Al6LNpINVNEHz",null,null,null,1,0],[1,0,-30,0]],[119,0,3,8,[0,"fbQavC5aFL3pyjeU7j3wtE"],[[7,null],6,0],[12],[32,3,0.05,0.01],[2],[2],[32,3,0.05,0.1],[2],[2],[2],[2],[5,3],[2],[5,10],[2],[46,true,[45,1,[52,[[23,255,0.8325892857142857],[23,0,1]]]]],[120,true,0,[5,1],[1,90,0,0]],[101,true,[39,1,[25,[0,0.20512820512820512,0.4948717948717949,1],[[13,2,0.7296296296296296],[13,2,0.8629629629629629],[13,2,0.662962962962963],[13,2,0.8074074074074075]]]],[2],[2],[2]],[59,[2],[2],[2],[5,1]],[122,true,[32,3,-0.08,0.05],[2],[32,3,0.02,-0.05]],[40,[2],[2],[2],[2]],[67,[2],[2],[2]],[61,[39,1,[25,[0,1],[[13,2,1],[13,2,1]]]],[2]],[41],[60,[5,1],[2],[12],[12],-38],[68,8,9]]],0,[0,4,1,0,0,1,0,0,1,0,0,1,0,-1,3,0,-2,2,0,0,2,0,0,2,0,-1,5,0,-2,6,0,-3,7,0,-4,4,0,-5,9,0,-6,8,0,0,3,0,0,3,0,0,3,0,0,3,0,0,4,0,0,4,0,0,4,0,0,4,0,0,5,0,0,5,0,0,5,0,0,6,0,0,6,0,0,6,0,0,7,0,0,7,0,0,7,0,-1,11,0,0,8,0,0,8,0,0,9,0,-1,10,0,0,10,0,12,11,0,5,1,38],[0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,11,1,11,-1,15,16,1],[24,349,350,135,135,136,136,19,19,29,351]],[[[47,"blood",1,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"tintColor",8,[4,1082097535],"mainTexture",6,0]],11]]],0,0,[0,0],[8,7],[71,15]],[[{"name":"shopbg2","rect":{"x":603,"y":860,"width":80,"height":30},"offset":{"x":0,"y":0},"originalSize":{"width":80,"height":30},"rotated":true,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"fmt":"0","w":0,"h":0},-1],[1],0,[],[],[]],[[{"base":"2,2,0,0,0,0","mipmaps":["far/Bz2xBFwKsByNaJfdM6"]}],[2],0,[],[],[]],[[{"name":"failbg1","rect":{"x":642,"y":765,"width":320,"height":290},"offset":{"x":0,"y":0},"originalSize":{"width":320,"height":290},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"home","rect":{"x":1085,"y":697,"width":60,"height":60},"offset":{"x":0,"y":0},"originalSize":{"width":60,"height":60},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"homebg2","rect":{"x":1007,"y":1831,"width":98,"height":98},"offset":{"x":0,"y":0},"originalSize":{"width":98,"height":98},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"gamebg9","rect":{"x":1116,"y":967,"width":29,"height":28},"offset":{"x":0,"y":0},"originalSize":{"width":29,"height":28},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[{"name":"gamebg5","rect":{"x":345,"y":980,"width":10,"height":31},"offset":{"x":0,"y":0},"originalSize":{"width":10,"height":31},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]],[[[9,"wall2"],[34,"wall2",[-4],[[123,-2,[0,"3exLr3qoVJibPWeBBdO8AK"],[1,0,0.5,0],[1,0.494,1,5.702]],[76,2,-3,[0,"e6c7TCLdNFX5jKLSgVtJoQ"]]],[1,"19koMerEtR3o+9tgxGCyta",null,null,null,-1,0]],[48,"wall2",1,[-5,-6],[1,"e1CerxwJpcfrPjfL7P4Ubf",null,null,null,1,0]],[27,"wall2_1",2,[[21,1,-7,[0,"db0FmegFBQ2K3XjNZpviLW"],[0],[8,true,true],1]],[1,"a98BeUtDtQz5SYhas+zeph",null,null,null,1,0]],[27,"wall2_2",2,[[21,1,-8,[0,"4etszxobNUMa2HyIcOTAGA"],[2],[8,true,true],3]],[1,"07apCR6FBbuqtlrGAZiAKL",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,2,0,-1,3,0,-2,4,0,0,3,0,0,4,0,5,1,8],[0,0,0,0],[-1,3,-1,3],[352,353,354,355]],[[[9,"box1"],[34,"box1",[-4],[[114,-2,[0,"91frF82QFCQ76S1GJFjIml"],[1,1.617,1.618,1.618]],[126,false,-3,[0,"4dmHuI+BJL1quX/EigI0tB"]]],[1,"14hVUIsSRa3qHLkJdI7oNp",null,null,null,-1,0]],[27,"box1",1,[[21,1,-5,[0,"14KzU+xnZXYbuite14kTV2"],[0],[8,true,true],1]],[1,"00Rj4FgmNUX5zoVmzki2fk",null,null,null,1,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,2,0,0,2,0,5,1,5],[0,0],[-1,3],[132,356]],[[{"name":"settingbg2","rect":{"x":1,"y":1277,"width":226,"height":96},"offset":{"x":0,"y":-2},"originalSize":{"width":236,"height":106},"rotated":false,"capInsets":[0,0,0,0],"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[0]]]]
